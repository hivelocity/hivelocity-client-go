---
swagger: "2.0"
info:
  description: "Interact with Hivelocity"
  version: "2.0"
  title: "Hivelocity API"
host: "core.hivelocity.net"
basePath: "/api/v2"
tags:
- name: "Account"
  description: "Endpoints to manage Account"
- name: "Bandwidth"
  description: "Request Bandwidth Data."
- name: "Bare Metal Devices"
  description: "Endpoints to handle bare metal devices. This is deprecated, please\
    \ use the Compute Devices endpoints instead."
- name: "Compute Devices"
  description: "Endpoints to handle compute devices."
- name: "BillingInfo"
  description: "Endpoints to manage Payment Methods."
- name: "Cancellations"
  description: "Cancellation information"
- name: "Contact"
  description: "Endpoints to manager Contacts"
- name: "Credit"
  description: "Endpoints to manage Credit"
- name: "Device"
  description: "Access to your Bare-Metal or Virtual Devices"
- name: "Domains"
  description: "Manage your DNS Domains"
- name: "Ignition"
  description: "Endpoints to manage CoreOS ignition files."
- name: "Inventory"
  description: "Products Inventory Data"
- name: "Invoice"
  description: "Invoice information and PDF download"
- name: "IPAssignment"
  description: "Endpoints to manage IP Assignments"
- name: "Maintenance"
  description: "Endpoints to manage maintenance events."
- name: "Network"
  description: "Endpoints to perform network related tasks"
- name: "Order"
  description: "Get Order and its details"
- name: "Order Groups"
  description: "Endpoints to manage Order Groups"
- name: "Permission"
  description: "Endpoints to manage Permissions"
- name: "Product"
  description: "Endpoints to manage Products"
- name: "Profile"
  description: "Endpoints to manage Profiles"
- name: "Deployment"
  description: "Endpoints to handle your servers provisioning"
- name: "Service"
  description: "Service information"
- name: "SshKey"
  description: "Endpoints to manage SSH key."
- name: "Ticket"
  description: "Ticket information"
- name: "Token"
  description: "Endpoints to manage Public API Token"
- name: "VLAN"
  description: "Endpoints to manage VLANs"
- name: "VPS"
  description: "Endpoints to manage Virtual Private Servers"
- name: "Webhook"
  description: "Access and modify your Hivelocity webhooks."
schemes:
- "https"
consumes:
- "application/json"
produces:
- "application/json"
security:
- apiKey: []
paths:
  /account/controlled-client:
    get:
      tags:
      - "Account"
      summary: "Get all controlled clients for enterprise owner"
      operationId: "get_account_create"
      parameters:
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Success"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/ControlledClient-dump"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
    post:
      tags:
      - "Account"
      summary: "Create controlled client for enterprise owner"
      operationId: "post_account_create"
      parameters:
      - in: "body"
        name: "payload"
        required: true
        schema:
          $ref: "#/definitions/CreateEnterpriseControlledClient"
        x-exportParamName: "Payload"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "201":
          description: "Success"
          schema:
            $ref: "#/definitions/ClientCreate-dump"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
    put:
      tags:
      - "Account"
      summary: "Deactivate client"
      operationId: "put_account_create"
      parameters:
      - in: "body"
        name: "payload"
        required: true
        schema:
          $ref: "#/definitions/DeactivateEnterpriseControlledClient"
        x-exportParamName: "Payload"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/ControlledClient-dump"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
  /bandwidth/device/{deviceId}:
    post:
      tags:
      - "Bandwidth"
      summary: "Get data by device"
      operationId: "post_device_id_bandwidth_resource"
      parameters:
      - name: "deviceId"
        in: "path"
        description: "ID of Device to View"
        required: true
        type: "integer"
        x-exportParamName: "DeviceId"
      - name: "period"
        in: "query"
        description: "Return data in the given period. Day, week, month will return\
          \ the previous day, week, month from now."
        required: true
        type: "string"
        default: "day"
        enum:
        - "day"
        - "week"
        - "month"
        - "custom"
        x-exportParamName: "Period"
      - name: "interface"
        in: "query"
        description: "Network interface to get bandwidth usage from. eth0 and eth1\
          \ are your first and second nic respectively. If unsure use the public,\
          \ private, and all values. Overages are billed on public traffic."
        required: true
        type: "string"
        default: "eth0"
        enum:
        - "eth0"
        - "eth1"
        - "public"
        - "private"
        - "all"
        x-exportParamName: "Interface_"
      - name: "historical"
        in: "query"
        description: "If you are a reseller, this will include historical interface\
          \ data for device regardless of the current device owner."
        required: false
        type: "boolean"
        default: false
        x-exportParamName: "Historical"
        x-optionalDataType: "Bool"
      - name: "step"
        in: "query"
        description: "Interval of data in seconds. Historical data is condensed, if\
          \ provided value is smaller than existing steps for the date range the endpoint\
          \ will return data with the smallest available step."
        required: true
        type: "integer"
        default: 300
        x-exportParamName: "Step"
      - name: "start"
        in: "query"
        description: "Start time of custom time period. (Unix Epoch Time)"
        required: false
        type: "integer"
        default: 0
        x-exportParamName: "Start"
        x-optionalDataType: "Int32"
      - name: "end"
        in: "query"
        description: "End time of custom time period (Unix Epoch Time)"
        required: false
        type: "integer"
        default: 1707406646
        x-exportParamName: "End"
        x-optionalDataType: "Int32"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Device Bandwidth Graph retrieved."
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Bandwidth"
        "400":
          description: "Unable to retrieve Bandwidth Graph for this Device."
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
  /bandwidth/device/{deviceId}/image:
    post:
      tags:
      - "Bandwidth"
      summary: "Get PNG by device"
      operationId: "post_device_id_bandwidth_image_resource"
      parameters:
      - name: "deviceId"
        in: "path"
        description: "ID of Device to View"
        required: true
        type: "integer"
        x-exportParamName: "DeviceId"
      - name: "period"
        in: "query"
        description: "Return data in the given period. Day, week, month will return\
          \ the previous day, week, month from now."
        required: true
        type: "string"
        default: "day"
        enum:
        - "day"
        - "week"
        - "month"
        - "custom"
        x-exportParamName: "Period"
      - name: "interface"
        in: "query"
        description: "Network interface to get bandwidth usage from. eth0 and eth1\
          \ are your first and second nic respectively. If unsure use the public,\
          \ private, and all values. Overages are billed on public traffic."
        required: true
        type: "string"
        default: "eth0"
        enum:
        - "eth0"
        - "eth1"
        - "public"
        - "private"
        - "all"
        x-exportParamName: "Interface_"
      - name: "start"
        in: "query"
        description: "Start Time of Custom Time Period. (Unix Epoch Time)"
        required: false
        type: "integer"
        default: 0
        x-exportParamName: "Start"
        x-optionalDataType: "Int32"
      - name: "end"
        in: "query"
        description: "End Time of Custom Time Period (Unix Epoch Time)"
        required: false
        type: "integer"
        default: 1707406646
        x-exportParamName: "End"
        x-optionalDataType: "Int32"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Device Bandwidth Graph retrieved."
          schema:
            type: "array"
            items:
              $ref: "#/definitions/BandwidthImage"
        "400":
          description: "Unable to retrieve Bandwidth Graph for this Device."
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
  /bandwidth/service/{serviceId}:
    post:
      tags:
      - "Bandwidth"
      summary: "Get data by service"
      operationId: "post_service_id_bandwidth_resource"
      parameters:
      - name: "serviceId"
        in: "path"
        description: "ID of Service to View"
        required: true
        type: "integer"
        x-exportParamName: "ServiceId"
      - name: "period"
        in: "query"
        description: "Return data in the given period. Day, week, month will return\
          \ the previous day, week, month from now."
        required: true
        type: "string"
        default: "day"
        enum:
        - "day"
        - "week"
        - "month"
        - "custom"
        x-exportParamName: "Period"
      - name: "interface"
        in: "query"
        description: "Network interface to get bandwidth usage from. eth0 and eth1\
          \ are your first and second nic respectively. If unsure use the public,\
          \ private, and all values. Overages are billed on public traffic."
        required: true
        type: "string"
        default: "eth0"
        enum:
        - "eth0"
        - "eth1"
        - "public"
        - "private"
        - "all"
        x-exportParamName: "Interface_"
      - name: "step"
        in: "query"
        description: "Interval of data in seconds. Historical data is condensed, if\
          \ provided value is smaller than existing steps for the date range the endpoint\
          \ will return data with the smallest available step."
        required: true
        type: "integer"
        default: 300
        x-exportParamName: "Step"
      - name: "start"
        in: "query"
        description: "Start Time of Custom Time Period. (Unix Epoch Time)"
        required: false
        type: "integer"
        default: 0
        x-exportParamName: "Start"
        x-optionalDataType: "Int32"
      - name: "end"
        in: "query"
        description: "End Time of Custom Time Period (Unix Epoch Time)"
        required: false
        type: "integer"
        default: 1707406646
        x-exportParamName: "End"
        x-optionalDataType: "Int32"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Service Bandwidth Graph retrieved."
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Bandwidth"
        "400":
          description: "Unable to retrieve Bandwidth Graph for this Service."
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
  /bandwidth/service/{serviceId}/image:
    post:
      tags:
      - "Bandwidth"
      summary: "Get PNG by service"
      operationId: "post_service_id_bandwidth_image_resource"
      parameters:
      - name: "serviceId"
        in: "path"
        description: "ID of Service to View"
        required: true
        type: "integer"
        x-exportParamName: "ServiceId"
      - name: "period"
        in: "query"
        description: "Return data in the given period. Day, week, month will return\
          \ the previous day, week, month from now."
        required: true
        type: "string"
        default: "day"
        enum:
        - "day"
        - "week"
        - "month"
        - "custom"
        x-exportParamName: "Period"
      - name: "interface"
        in: "query"
        description: "Network interface to get bandwidth usage from. eth0 and eth1\
          \ are your first and second nic respectively. If unsure use the public,\
          \ private, and all values. Overages are billed on public traffic."
        required: true
        type: "string"
        default: "eth0"
        enum:
        - "eth0"
        - "eth1"
        - "public"
        - "private"
        - "all"
        x-exportParamName: "Interface_"
      - name: "start"
        in: "query"
        description: "Start Time of Custom Time Period. (Unix Epoch Time)"
        required: false
        type: "integer"
        default: 0
        x-exportParamName: "Start"
        x-optionalDataType: "Int32"
      - name: "end"
        in: "query"
        description: "End Time of Custom Time Period (Unix Epoch Time)"
        required: false
        type: "integer"
        default: 1707406646
        x-exportParamName: "End"
        x-optionalDataType: "Int32"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Service Bandwidth Graph retrieved."
          schema:
            type: "array"
            items:
              $ref: "#/definitions/BandwidthImage"
        "400":
          description: "Unable to retrieve Bandwidth Graph for this Service."
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
  /bare-metal-devices/:
    get:
      tags:
      - "Bare Metal Devices"
      summary: "Get all devices"
      operationId: "get_bare_metal_device_resource"
      parameters:
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Devices found successfuly"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/BareMetalDevice"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
    post:
      tags:
      - "Bare Metal Devices"
      summary: "Provision an instant device"
      operationId: "post_bare_metal_device_resource"
      parameters:
      - in: "body"
        name: "payload"
        required: true
        schema:
          $ref: "#/definitions/BareMetalDeviceCreate"
        x-exportParamName: "Payload"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/BareMetalDevice"
        "201":
          description: "Device provisioning started"
        "400":
          description: "Invalid device parameters."
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
  /bare-metal-devices/batch:
    post:
      tags:
      - "Bare Metal Devices"
      summary: "Batch provision instant devices"
      operationId: "post_bare_metal_device_batch_resource"
      parameters:
      - in: "body"
        name: "payload"
        required: true
        schema:
          $ref: "#/definitions/BareMetalDeviceBatchCreate"
        x-exportParamName: "Payload"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/BareMetalDeviceBatch"
        "201":
          description: "Device provisioning started"
        "400":
          description: "Invalid device parameters."
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
  /bare-metal-devices/{deviceId}:
    get:
      tags:
      - "Bare Metal Devices"
      summary: "Get device"
      operationId: "get_bare_metal_device_id_resource"
      parameters:
      - name: "deviceId"
        in: "path"
        required: true
        type: "integer"
        x-exportParamName: "DeviceId"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Deployment Found"
          schema:
            $ref: "#/definitions/BareMetalDevice"
        "401":
          description: "Access to Deployment not Allowed"
        "404":
          description: "Deployment Not Found"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
    put:
      tags:
      - "Bare Metal Devices"
      summary: "Update/reload instant device"
      operationId: "put_bare_metal_device_id_resource"
      parameters:
      - name: "deviceId"
        in: "path"
        required: true
        type: "integer"
        x-exportParamName: "DeviceId"
      - in: "body"
        name: "payload"
        required: true
        schema:
          $ref: "#/definitions/BareMetalDeviceUpdate"
        x-exportParamName: "Payload"
      - name: "skipPowerCheck"
        in: "query"
        description: "If true, bypass the powered off check."
        required: false
        type: "boolean"
        x-exportParamName: "SkipPowerCheck"
        x-optionalDataType: "Bool"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Device updated."
          schema:
            $ref: "#/definitions/BareMetalDevice"
        "400":
          description: "Invalid device parameters."
        "404":
          description: "Device Not Found"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
    delete:
      tags:
      - "Bare Metal Devices"
      summary: "Cancel/delete device"
      operationId: "delete_bare_metal_device_id_resource"
      parameters:
      - name: "deviceId"
        in: "path"
        required: true
        type: "integer"
        x-exportParamName: "DeviceId"
      responses:
        "201":
          description: "Cancellation Started."
        "204":
          description: "Device Deleted"
        "400":
          description: "Device Cancellation Failed."
        "401":
          description: "Not Allowed"
        "404":
          description: "Device Not Found"
        "409":
          description: "Device Already Being Cancelled."
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
  /billing-info/:
    get:
      tags:
      - "BillingInfo"
      summary: "Return a list with all Payment Methods (Billing Info)"
      operationId: "get_billing_info_resource"
      parameters:
      - name: "clientId"
        in: "query"
        description: "Client ID to fetch billing info for"
        required: false
        type: "integer"
        x-exportParamName: "ClientId"
        x-optionalDataType: "Int32"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Success"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/BillingInfo"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
    post:
      tags:
      - "BillingInfo"
      summary: "Create verification for credit card with all Billing Info"
      operationId: "post_billing_info_resource"
      parameters:
      - in: "body"
        name: "payload"
        required: true
        schema:
          $ref: "#/definitions/BillingInfoVerification"
        x-exportParamName: "Payload"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "201":
          description: "Success"
          schema:
            $ref: "#/definitions/BillingInfo"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
    put:
      tags:
      - "BillingInfo"
      summary: "Verify credit card with all Billing Info"
      operationId: "put_billing_info_resource"
      parameters:
      - in: "body"
        name: "payload"
        required: true
        schema:
          $ref: "#/definitions/BillingInfoVerification"
        x-exportParamName: "Payload"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "201":
          description: "Success"
          schema:
            $ref: "#/definitions/Credit"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
  /billing-info/bank-account:
    post:
      tags:
      - "BillingInfo"
      summary: "Add a new Bank Account as a Payment Method"
      operationId: "post_billing_info_bank_account_create_resource"
      parameters:
      - in: "body"
        name: "payload"
        required: true
        schema:
          $ref: "#/definitions/BillingInfoCreateBankAccount"
        x-exportParamName: "Payload"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/BillingInfo"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
  /billing-info/bank-account/{billingInfoId}:
    put:
      tags:
      - "BillingInfo"
      summary: "Update a Bank Account"
      operationId: "put_billing_info_bank_account_update_resource"
      parameters:
      - name: "billingInfoId"
        in: "path"
        required: true
        type: "integer"
        x-exportParamName: "BillingInfoId"
      - in: "body"
        name: "payload"
        required: true
        schema:
          $ref: "#/definitions/BillingInfoCreateBankAccount"
        x-exportParamName: "Payload"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/BillingInfo"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
  /billing-info/credit-card:
    post:
      tags:
      - "BillingInfo"
      summary: "Add a new Credit Card as a Payment Method"
      operationId: "post_billing_info_credit_card_create_resource"
      parameters:
      - in: "body"
        name: "payload"
        required: true
        schema:
          $ref: "#/definitions/BillingInfoCreateCreditCard"
        x-exportParamName: "Payload"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/BillingInfo"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
  /billing-info/credit-card/{billingInfoId}:
    put:
      tags:
      - "BillingInfo"
      summary: "Update a Credit Card"
      operationId: "put_billing_info_credit_card_update_resource"
      parameters:
      - name: "billingInfoId"
        in: "path"
        required: true
        type: "integer"
        x-exportParamName: "BillingInfoId"
      - in: "body"
        name: "payload"
        required: true
        schema:
          $ref: "#/definitions/BillingInfoCreateCreditCard"
        x-exportParamName: "Payload"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/BillingInfo"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
  /billing-info/enable:
    get:
      tags:
      - "BillingInfo"
      summary: "Return Payment Methods enabled for editing"
      operationId: "get_payment_methods_enable_read_resource"
      parameters:
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/PaymentMethodsEnabled"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
  /billing-info/{billingInfoId}:
    get:
      tags:
      - "BillingInfo"
      summary: "Return a Payment Method by Billing Info ID"
      operationId: "get_billing_info_id_resource"
      parameters:
      - name: "billingInfoId"
        in: "path"
        required: true
        type: "integer"
        x-exportParamName: "BillingInfoId"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/BillingInfo"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
    delete:
      tags:
      - "BillingInfo"
      summary: "Delete a Payment Method by Billing Info ID"
      operationId: "delete_billing_info_id_resource"
      parameters:
      - name: "billingInfoId"
        in: "path"
        required: true
        type: "integer"
        x-exportParamName: "BillingInfoId"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "204":
          description: "Success"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
  /cancellation/cancellation:
    get:
      tags:
      - "Cancellations"
      summary: "Get all cancel requests"
      operationId: "get_cancellation_resource"
      parameters:
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Success"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Cancellation"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
    post:
      tags:
      - "Cancellations"
      summary: "Create cancel request"
      operationId: "post_cancellation_resource"
      parameters:
      - in: "body"
        name: "payload"
        required: true
        schema:
          $ref: "#/definitions/CancellationCreate"
        x-exportParamName: "Payload"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/Cancellation"
        "500":
          description: "Service/Device already being cancelled"
        "404":
          description: "Device not found"
        "401":
          description: "Access to this resource is not permitted."
        "400":
          description: "Service/Device already being cancelled"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
  /cancellation/cancellation/{cancellationId}:
    delete:
      tags:
      - "Cancellations"
      summary: "Delete a Cancellation"
      operationId: "delete_cancellation_id_delete_resource"
      parameters:
      - name: "cancellationId"
        in: "path"
        required: true
        type: "integer"
        x-exportParamName: "CancellationId"
      responses:
        "404":
          description: "Cancellation not found."
        "204":
          description: "Cancellation successfully deleted."
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
  /cancellation/device/{deviceId}:
    get:
      tags:
      - "Cancellations"
      summary: "Get cancel request by device"
      operationId: "get_cancellation_device_resource"
      parameters:
      - name: "deviceId"
        in: "path"
        required: true
        type: "integer"
        x-exportParamName: "DeviceId"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/Cancellation"
        "404":
          description: "Device not found"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
  /cancellation/service/{serviceId}:
    get:
      tags:
      - "Cancellations"
      summary: "Get cancel request by service"
      operationId: "get_cancellation_service_resource"
      parameters:
      - name: "serviceId"
        in: "path"
        required: true
        type: "integer"
        x-exportParamName: "ServiceId"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/Cancellation"
        "404":
          description: "Service not found"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
  /compute/:
    get:
      tags:
      - "Compute Devices"
      summary: "Get all devices"
      operationId: "get_bare_metal_device_resource"
      parameters:
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Devices found successfuly"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/BareMetalDevice"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
    post:
      tags:
      - "Compute Devices"
      summary: "Provision an instant device"
      operationId: "post_bare_metal_device_resource"
      parameters:
      - in: "body"
        name: "payload"
        required: true
        schema:
          $ref: "#/definitions/BareMetalDeviceCreate"
        x-exportParamName: "Payload"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/BareMetalDevice"
        "201":
          description: "Device provisioning started"
        "400":
          description: "Invalid device parameters."
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
  /compute/batch:
    post:
      tags:
      - "Compute Devices"
      summary: "Batch provision instant devices"
      operationId: "post_bare_metal_device_batch_resource"
      parameters:
      - in: "body"
        name: "payload"
        required: true
        schema:
          $ref: "#/definitions/BareMetalDeviceBatchCreate"
        x-exportParamName: "Payload"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/BareMetalDeviceBatch"
        "201":
          description: "Device provisioning started"
        "400":
          description: "Invalid device parameters."
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
  /compute/{deviceId}:
    get:
      tags:
      - "Compute Devices"
      summary: "Get device"
      operationId: "get_bare_metal_device_id_resource"
      parameters:
      - name: "deviceId"
        in: "path"
        required: true
        type: "integer"
        x-exportParamName: "DeviceId"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Deployment Found"
          schema:
            $ref: "#/definitions/BareMetalDevice"
        "401":
          description: "Access to Deployment not Allowed"
        "404":
          description: "Deployment Not Found"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
    put:
      tags:
      - "Compute Devices"
      summary: "Update/reload instant device"
      operationId: "put_bare_metal_device_id_resource"
      parameters:
      - name: "deviceId"
        in: "path"
        required: true
        type: "integer"
        x-exportParamName: "DeviceId"
      - in: "body"
        name: "payload"
        required: true
        schema:
          $ref: "#/definitions/BareMetalDeviceUpdate"
        x-exportParamName: "Payload"
      - name: "skipPowerCheck"
        in: "query"
        description: "If true, bypass the powered off check."
        required: false
        type: "boolean"
        x-exportParamName: "SkipPowerCheck"
        x-optionalDataType: "Bool"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Device updated."
          schema:
            $ref: "#/definitions/BareMetalDevice"
        "400":
          description: "Invalid device parameters."
        "404":
          description: "Device Not Found"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
    delete:
      tags:
      - "Compute Devices"
      summary: "Cancel/delete device"
      operationId: "delete_bare_metal_device_id_resource"
      parameters:
      - name: "deviceId"
        in: "path"
        required: true
        type: "integer"
        x-exportParamName: "DeviceId"
      responses:
        "201":
          description: "Cancellation Started."
        "204":
          description: "Device Deleted"
        "400":
          description: "Device Cancellation Failed."
        "401":
          description: "Not Allowed"
        "404":
          description: "Device Not Found"
        "409":
          description: "Device Already Being Cancelled."
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
  /contact/:
    get:
      tags:
      - "Contact"
      summary: "Return a list with all Contacts"
      operationId: "get_contact_resource"
      parameters:
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Success"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Contact-dump"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
    post:
      tags:
      - "Contact"
      summary: "Create a new Contact"
      operationId: "post_contact_resource"
      parameters:
      - in: "body"
        name: "payload"
        required: true
        schema:
          $ref: "#/definitions/ContactCreate"
        x-exportParamName: "Payload"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "201":
          description: "Contact successfully created"
          schema:
            $ref: "#/definitions/Contact-dump"
        "400":
          description: "Unable to create Contact"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
  /contact/password:
    post:
      tags:
      - "Contact"
      summary: "Receive a request to reset password, and send a link by email with\
        \ token"
      operationId: "post_password_reset"
      parameters:
      - in: "body"
        name: "payload"
        required: true
        schema:
          $ref: "#/definitions/PasswordRequest"
        x-exportParamName: "Payload"
      responses:
        "200":
          description: "Success"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
    put:
      tags:
      - "Contact"
      summary: "Receive a token and password, verify the user and reset your password"
      operationId: "put_password_reset"
      parameters:
      - in: "body"
        name: "payload"
        required: true
        schema:
          $ref: "#/definitions/PasswordResponse"
        x-exportParamName: "Payload"
      responses:
        "200":
          description: "Success"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
  /contact/{contactId}:
    get:
      tags:
      - "Contact"
      summary: "Return details of a specific Contact"
      operationId: "get_contact_id_resource"
      parameters:
      - name: "contactId"
        in: "path"
        description: "ID of Contact to View / Update"
        required: true
        type: "integer"
        x-exportParamName: "ContactId"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/Contact-dump"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
    put:
      tags:
      - "Contact"
      summary: "Edit a Contact"
      operationId: "put_contact_id_resource"
      parameters:
      - name: "contactId"
        in: "path"
        description: "ID of Contact to View / Update"
        required: true
        type: "integer"
        x-exportParamName: "ContactId"
      - in: "body"
        name: "payload"
        required: true
        schema:
          $ref: "#/definitions/ContactUpdate"
        x-exportParamName: "Payload"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Contact successfully updated."
          schema:
            $ref: "#/definitions/Contact-dump"
        "400":
          description: "Unable to update Contact Data."
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
    delete:
      tags:
      - "Contact"
      summary: "Delete a Contact"
      operationId: "delete_contact_id_resource"
      parameters:
      - name: "contactId"
        in: "path"
        description: "ID of Contact to View / Update"
        required: true
        type: "integer"
        x-exportParamName: "ContactId"
      responses:
        "404":
          description: "Contact not found."
        "204":
          description: "Contact successfully deleted."
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
  /contact/{contactId}/password:
    put:
      tags:
      - "Contact"
      summary: "Change password for a Contact"
      operationId: "put_password_resource"
      parameters:
      - name: "contactId"
        in: "path"
        description: "\"ID of Contact to change password\""
        required: true
        type: "integer"
        x-exportParamName: "ContactId"
      - in: "body"
        name: "payload"
        required: true
        schema:
          $ref: "#/definitions/Password"
        x-exportParamName: "Payload"
      responses:
        "400":
          description: "Invalid password for authentication."
        "200":
          description: "Password was changed."
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
  /credit/:
    get:
      tags:
      - "Credit"
      summary: "Return a list with all Credits"
      operationId: "get_credit_resource"
      parameters:
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Success"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Credit"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
    post:
      tags:
      - "Credit"
      summary: "Receive billing method id and amount and return the created Credit"
      operationId: "post_credit_resource"
      parameters:
      - in: "body"
        name: "payload"
        required: true
        schema:
          $ref: "#/definitions/CreateCredit"
        x-exportParamName: "Payload"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/Credit"
        "503":
          description: "Unable to add new credit."
        "201":
          description: "Successfully added a new credit."
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
  /credit/apply-coupon:
    post:
      tags:
      - "Credit"
      summary: "Apply the coupon code for a service"
      operationId: "post_credit_apply_coupon_resource"
      parameters:
      - in: "body"
        name: "payload"
        required: true
        schema:
          $ref: "#/definitions/CartCoupon"
        x-exportParamName: "Payload"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/Credit"
        "400":
          description: "Invalid coupon code."
        "201":
          description: "Successfully applied the coupon code."
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
  /credit/total:
    get:
      tags:
      - "Credit"
      summary: "Return the client's total active credit amount"
      operationId: "get_total_active_credit_resource"
      parameters:
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/TotalActiveCredit"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
  /credit/validate-coupon:
    post:
      tags:
      - "Credit"
      summary: "Validate the coupon code for a service"
      operationId: "post_credit_validate_coupon_resource"
      parameters:
      - in: "body"
        name: "payload"
        required: true
        schema:
          $ref: "#/definitions/CartCoupon"
        x-exportParamName: "Payload"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/ValidateCartCoupon-dump"
        "400":
          description: "Invalid coupon code."
        "201":
          description: "Valid coupon code."
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
  /deploy/:
    get:
      tags:
      - "Deployment"
      summary: "Return a list with all client deployments"
      operationId: "get_deployment_resource"
      parameters:
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Deployments found successfully"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Deployment"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
    post:
      tags:
      - "Deployment"
      summary: "Start a new deployment"
      operationId: "post_deployment_resource"
      parameters:
      - name: "deploymentName"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "DeploymentName"
        x-optionalDataType: "String"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "201":
          description: "Deployment Created"
          schema:
            $ref: "#/definitions/Deployment"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
  /deploy/{deploymentId}:
    get:
      tags:
      - "Deployment"
      summary: "Return a dictionary with deployment information"
      operationId: "get_deployment_id_resource"
      parameters:
      - name: "deploymentId"
        in: "path"
        description: "Id of the deployment to interact with"
        required: true
        type: "integer"
        x-exportParamName: "DeploymentId"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Deployment Found"
          schema:
            $ref: "#/definitions/Deployment"
        "401":
          description: "Access to Deployment not Allowed"
        "404":
          description: "Deployment Not Found"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
    post:
      tags:
      - "Deployment"
      summary: "Input a billing info id and script to process and finish a deployment"
      operationId: "post_deployment_id_resource"
      parameters:
      - name: "deploymentId"
        in: "path"
        description: "Id of the deployment to interact with"
        required: true
        type: "integer"
        x-exportParamName: "DeploymentId"
      - in: "body"
        name: "payload"
        required: true
        schema:
          $ref: "#/definitions/DeploymentStart"
        x-exportParamName: "Payload"
      responses:
        "201":
          description: "Deployment Started"
        "401":
          description: "Access to Deployment not Allowed"
        "404":
          description: "Deployment Not Found"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
    put:
      tags:
      - "Deployment"
      summary: "Receive product, quantity and options to be added on the deployment"
      operationId: "put_deployment_id_resource"
      parameters:
      - name: "deploymentId"
        in: "path"
        description: "Id of the deployment to interact with"
        required: true
        type: "integer"
        x-exportParamName: "DeploymentId"
      - in: "body"
        name: "payload"
        required: true
        schema:
          $ref: "#/definitions/DeploymentCustomization"
        x-exportParamName: "Payload"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Server configuration added to Deployment"
          schema:
            $ref: "#/definitions/Deployment"
        "400":
          description: "Your configuration have incompatible or unavailable options"
        "401":
          description: "Access to this Deployment not Allowed"
        "404":
          description: "Deployment Not Found"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
    delete:
      tags:
      - "Deployment"
      summary: "Delete the specified deployment"
      operationId: "delete_deployment_id_resource"
      parameters:
      - name: "deploymentId"
        in: "path"
        description: "Id of the deployment to interact with"
        required: true
        type: "integer"
        x-exportParamName: "DeploymentId"
      responses:
        "204":
          description: "Deployment Deleted"
        "401":
          description: "Access to this Deployment not Allowed"
        "404":
          description: "Deployment Not Found"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
  /device/:
    get:
      tags:
      - "Device"
      summary: "Get all devices"
      operationId: "get_device_resource"
      parameters:
      - name: "rack_id"
        in: "query"
        description: "Filter Devices only in this Rack ID"
        required: false
        type: "integer"
        default: 0
        x-exportParamName: "RackId"
        x-optionalDataType: "Int32"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Success"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Device-dump"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
  /device/devicelist: {}
  /device/ipmi/thresholds:
    put:
      tags:
      - "Device"
      summary: "Bulk update IPMI thresholds"
      operationId: "put_ipmi_devices_thresholds_id_resource"
      parameters:
      - in: "body"
        name: "payload"
        required: true
        schema:
          $ref: "#/definitions/UpdateDevicesIPMIThresholds"
        x-exportParamName: "Payload"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Devices IPMI Thresholds updated."
          schema:
            $ref: "#/definitions/DevicesIPMIThresholds"
        "400":
          description: "Unable to update IPMI Thresholds for this Device list."
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
  /device/linked-payment-method/{billingInfoId}:
    get:
      tags:
      - "Device"
      summary: "Get by payment method"
      operationId: "get_device_payment_method_linked_resource"
      parameters:
      - name: "billingInfoId"
        in: "path"
        required: true
        type: "integer"
        x-exportParamName: "BillingInfoId"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Success"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Device-dump"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
  /device/preview-ignition:
    post:
      tags:
      - "Device"
      summary: "Preview Ignition injections"
      operationId: "post_preview_effective_ignition_resource"
      parameters:
      - in: "body"
        name: "payload"
        required: true
        schema:
          $ref: "#/definitions/PreviewEffectiveIgnition"
        x-exportParamName: "Payload"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/PreviewEffectiveIgnitionResponse"
        "422":
          description: "Error"
        "400":
          description: "Error"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
  /device/tags:
    get:
      tags:
      - "Device"
      summary: "Get all tags"
      operationId: "get_client_device_tag_resource"
      parameters:
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/DeviceTag"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
  /device/tags-order:
    get:
      tags:
      - "Device"
      summary: "Get tag order"
      operationId: "get_client_device_tag_order_resource"
      parameters:
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/DeviceTag"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
    put:
      tags:
      - "Device"
      summary: "Update tag order"
      operationId: "put_client_device_tag_order_resource"
      parameters:
      - in: "body"
        name: "payload"
        required: true
        schema:
          $ref: "#/definitions/DeviceTag"
        x-exportParamName: "Payload"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Device tags order updated."
          schema:
            $ref: "#/definitions/DeviceTag"
        "400":
          description: "Bad request."
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
  /device/tags-order/all:
    get:
      tags:
      - "Device"
      summary: "Get all tag orders"
      operationId: "get_all_device_tag_order_resource"
      parameters:
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/DeviceTag"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
  /device/{deviceId}:
    get:
      tags:
      - "Device"
      summary: "Get device"
      operationId: "get_device_id_resource"
      parameters:
      - name: "deviceId"
        in: "path"
        description: "ID of Device to View / Update"
        required: true
        type: "integer"
        x-exportParamName: "DeviceId"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/Device-dump"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
    put:
      tags:
      - "Device"
      summary: "Update device"
      operationId: "put_device_id_resource"
      parameters:
      - name: "deviceId"
        in: "path"
        description: "ID of Device to View / Update"
        required: true
        type: "integer"
        x-exportParamName: "DeviceId"
      - in: "body"
        name: "payload"
        required: true
        schema:
          $ref: "#/definitions/DeviceUpdate"
        x-exportParamName: "Payload"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Device MetaData was updated."
          schema:
            $ref: "#/definitions/Device-dump"
        "400":
          description: "Unable to update Device MetaData."
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
  /device/{deviceId}/deploy/script: {}
  /device/{deviceId}/deploy/ssh_key: {}
  /device/{deviceId}/events:
    get:
      tags:
      - "Device"
      summary: "Get all events"
      operationId: "get_device_id_event_resource"
      parameters:
      - name: "deviceId"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "DeviceId"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Success"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/DeviceEvent"
        "404":
          description: "Device not found"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
  /device/{deviceId}/ignition:
    get:
      tags:
      - "Device"
      summary: "Get Ignition injections"
      operationId: "get_effective_ignition_id_resource"
      parameters:
      - name: "deviceId"
        in: "path"
        required: true
        type: "integer"
        x-exportParamName: "DeviceId"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/EffectiveIgnitionResponse"
        "404":
          description: "Not Found"
        "400":
          description: "Error"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
  /device/{deviceId}/initial-creds:
    get:
      tags:
      - "Device"
      summary: "Get initial creds"
      operationId: "get_initial_creds_id_resource"
      parameters:
      - name: "deviceId"
        in: "path"
        description: "ID of Device to retrieve initial authentication credentials\
          \ for"
        required: true
        type: "integer"
        x-exportParamName: "DeviceId"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Device initial credentials."
          schema:
            $ref: "#/definitions/DeviceInitialCreds"
        "400":
          description: "Unable to get initial credentials for this Device."
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
  /device/{deviceId}/initial-password:
    get:
      tags:
      - "Device"
      summary: "Get initial password"
      operationId: "get_initial_password_id_resource"
      parameters:
      - name: "deviceId"
        in: "path"
        description: "ID of Device to retrieve initial password"
        required: true
        type: "integer"
        x-exportParamName: "DeviceId"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Device initial password."
          schema:
            $ref: "#/definitions/DevicePassword"
        "400":
          description: "Unable to get initial password this Device."
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
  /device/{deviceId}/ipmi:
    get:
      tags:
      - "Device"
      summary: "Get IPMI data"
      operationId: "get_ipmi_info_id_resource"
      parameters:
      - name: "deviceId"
        in: "path"
        description: "ID of Device to retrieve IPMI info."
        required: true
        type: "integer"
        x-exportParamName: "DeviceId"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Device IPMI Thresholds retrieved"
          schema:
            $ref: "#/definitions/DeviceIPMIInfo"
        "400":
          description: "Unable to retrieve IPMI Thresholds for this Device."
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
  /device/{deviceId}/ipmi/login-data:
    get:
      tags:
      - "Device"
      summary: "Get IPMI creds"
      operationId: "get_ipmi_info_login_data_resource"
      parameters:
      - name: "deviceId"
        in: "path"
        description: "ID of Device to retrieve IPMI Login data."
        required: true
        type: "integer"
        x-exportParamName: "DeviceId"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Device IPMI Login data retrieved"
          schema:
            $ref: "#/definitions/IPMILoginData"
        "400":
          description: "Unable to retrieve IPMI Login data for this Device."
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
  /device/{deviceId}/ipmi/nat:
    get:
      tags:
      - "Device"
      summary: "Clear IPMI whitelist"
      operationId: "get_device_ipminat_rule_resource"
      parameters:
      - name: "deviceId"
        in: "path"
        description: "ID of a client Device"
        required: true
        type: "integer"
        x-exportParamName: "DeviceId"
      responses:
        "400":
          description: "The request has problems. Revise it and try again."
        "202":
          description: "The request was accepted."
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
  /device/{deviceId}/ipmi/thresholds:
    get:
      tags:
      - "Device"
      summary: "Get IPMI thresholds"
      operationId: "get_ipmi_thresholds_id_resource"
      parameters:
      - name: "deviceId"
        in: "path"
        description: "ID of Device to View"
        required: true
        type: "integer"
        x-exportParamName: "DeviceId"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Device IPMI Thresholds retrieved."
          schema:
            $ref: "#/definitions/DeviceIPMIThresholds"
        "400":
          description: "Unable to retrieve IPMI Thresholds for this Device."
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
    put:
      tags:
      - "Device"
      summary: "Update IPMI thresholds"
      operationId: "put_ipmi_thresholds_id_resource"
      parameters:
      - name: "deviceId"
        in: "path"
        description: "ID of Device to View"
        required: true
        type: "integer"
        x-exportParamName: "DeviceId"
      - in: "body"
        name: "payload"
        required: true
        schema:
          $ref: "#/definitions/DeviceIPMIThresholds"
        x-exportParamName: "Payload"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Device IPMI Thresholds retrieved."
          schema:
            $ref: "#/definitions/DeviceIPMIThresholds"
        "400":
          description: "Unable to update IPMI Thresholds for this Device."
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
  /device/{deviceId}/ipmi/valid-login:
    get:
      tags:
      - "Device"
      summary: "Get IPMI access status"
      operationId: "get_ipmi_valid_login_id_resource"
      parameters:
      - name: "deviceId"
        in: "path"
        description: "ID of Device to check IPMI credentials"
        required: true
        type: "integer"
        x-exportParamName: "DeviceId"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "IPMI credentials validated."
          schema:
            $ref: "#/definitions/IPMIValidLogin"
        "400":
          description: "Unable to validate IPMI credentials this Device."
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
  /device/{deviceId}/ipmi/whitelist/:
    post:
      tags:
      - "Device"
      summary: "Whitelist IP for IPMI"
      operationId: "post_device_ipmi_whitelist_resource"
      parameters:
      - name: "deviceId"
        in: "path"
        description: "ID of the Device to put IP in Whitelist"
        required: true
        type: "integer"
        x-exportParamName: "DeviceId"
      - in: "body"
        name: "payload"
        required: true
        schema:
          $ref: "#/definitions/DeviceIPMIWhitelistIP"
        x-exportParamName: "Payload"
      responses:
        "400":
          description: "The request has problems. Revise it and try again."
        "202":
          description: "The request was accepted."
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
  /device/{deviceId}/ips:
    get:
      tags:
      - "Device"
      summary: "Get IPs"
      operationId: "get_device_ip_assignments_resource"
      parameters:
      - name: "deviceId"
        in: "path"
        required: true
        type: "integer"
        x-exportParamName: "DeviceId"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Device Ip Assignments retrieved"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/IPAssignment"
        "400":
          description: "Unable to retrieve IP Assignments for this Device."
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
  /device/{deviceId}/port/{portId}/clear:
    post:
      tags:
      - "Device"
      summary: "Clear all Port configurations"
      operationId: "post_device_port_id_clear_resource"
      parameters:
      - name: "deviceId"
        in: "path"
        required: true
        type: "integer"
        x-exportParamName: "DeviceId"
      - name: "portId"
        in: "path"
        required: true
        type: "integer"
        x-exportParamName: "PortId"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "202":
          description: "Accepted"
          schema:
            $ref: "#/definitions/NetworkTask-dump"
        "429":
          description: "Request was Rate Limited"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
  /device/{deviceId}/ports:
    get:
      tags:
      - "Device"
      summary: "Get ports"
      operationId: "get_device_port_resource"
      parameters:
      - name: "deviceId"
        in: "path"
        required: true
        type: "integer"
        x-exportParamName: "DeviceId"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Success"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/DevicePort"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
    put:
      tags:
      - "Device"
      summary: "Update port network"
      operationId: "put_device_port_resource"
      parameters:
      - name: "deviceId"
        in: "path"
        required: true
        type: "integer"
        x-exportParamName: "DeviceId"
      - in: "body"
        name: "payload"
        required: true
        schema:
          $ref: "#/definitions/DevicePortsUpdate"
        x-exportParamName: "Payload"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "202":
          description: "Accepted"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/NetworkTask-dump"
        "429":
          description: "Request was Rate Limited"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
  /device/{deviceId}/ports/bond:
    post:
      tags:
      - "Device"
      summary: "Bond ports"
      operationId: "post_device_bond_resource"
      parameters:
      - name: "deviceId"
        in: "path"
        required: true
        type: "integer"
        x-exportParamName: "DeviceId"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "202":
          description: "Accepted"
          schema:
            $ref: "#/definitions/NetworkTask-dump"
        "429":
          description: "Request was Rate Limited"
        "404":
          description: "Device not found"
        "401":
          description: "Access to this Device is not allowed"
        "400":
          description: "Invalid action"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
    delete:
      tags:
      - "Device"
      summary: "Unbond ports"
      operationId: "delete_device_bond_resource"
      parameters:
      - name: "deviceId"
        in: "path"
        required: true
        type: "integer"
        x-exportParamName: "DeviceId"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "202":
          description: "Accepted"
          schema:
            $ref: "#/definitions/NetworkTask-dump"
        "429":
          description: "Request was Rate Limited"
        "404":
          description: "Device not found"
        "401":
          description: "Access to this Device is not allowed"
        "400":
          description: "Invalid action"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
  /device/{deviceId}/power:
    get:
      tags:
      - "Device"
      summary: "Get power status"
      operationId: "get_power_resource"
      parameters:
      - name: "deviceId"
        in: "path"
        description: "ID of Device to View / Update"
        required: true
        type: "integer"
        x-exportParamName: "DeviceId"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/DevicePower"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
    post:
      tags:
      - "Device"
      summary: "Update power status"
      operationId: "post_power_resource"
      parameters:
      - name: "deviceId"
        in: "path"
        description: "ID of Device to View / Update"
        required: true
        type: "integer"
        x-exportParamName: "DeviceId"
      - name: "action"
        in: "query"
        description: "power action to either boot, reboot, or shutdown"
        required: true
        type: "string"
        x-exportParamName: "Action"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "202":
          description: "Success"
          schema:
            $ref: "#/definitions/DevicePower"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
  /device/{deviceId}/reload:
    post:
      tags:
      - "Device"
      summary: "Reload device"
      operationId: "post_device_reload_resource"
      parameters:
      - name: "deviceId"
        in: "path"
        required: true
        type: "integer"
        x-exportParamName: "DeviceId"
      - in: "body"
        name: "payload"
        required: true
        schema:
          $ref: "#/definitions/DeviceReload"
        x-exportParamName: "Payload"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/ServiceOption"
        "400":
          description: "Error"
        "404":
          description: "Device not found"
        "202":
          description: "Success"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
  /device/{deviceId}/services:
    get:
      tags:
      - "Device"
      summary: "Get all device services"
      operationId: "get_device_id_service_resource"
      parameters:
      - name: "group_by"
        in: "query"
        description: "Get results grouped by service type code 'type_code', or 'flat'"
        required: false
        type: "string"
        default: "flat"
        x-exportParamName: "GroupBy"
        x-optionalDataType: "String"
      - name: "type_code"
        in: "query"
        description: "Return service having the same service type code, the default\
          \ value is all\n The list of service types can be accessed on https://core.hivelocity.net/api/v2/service/types"
        required: false
        type: "string"
        default: "all"
        x-exportParamName: "TypeCode"
        x-optionalDataType: "String"
      - name: "deviceId"
        in: "path"
        description: "ID of Device to get all services by type"
        required: true
        type: "integer"
        x-exportParamName: "DeviceId"
      responses:
        "404":
          description: "Unable to find the device or the device does not have a service"
        "400":
          description: "Unable to retrieve services for this device"
        "200":
          description: "Device services retrieved"
          schema:
            $ref: "#/definitions/Services"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
  /device/{deviceId}/tags:
    get:
      tags:
      - "Device"
      summary: "Get device tags"
      operationId: "get_device_tag_id_resource"
      parameters:
      - name: "deviceId"
        in: "path"
        description: "ID of Device to View / Update"
        required: true
        type: "integer"
        x-exportParamName: "DeviceId"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/DeviceTag"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
    put:
      tags:
      - "Device"
      summary: "Update device tags"
      operationId: "put_device_tag_id_resource"
      parameters:
      - name: "deviceId"
        in: "path"
        description: "ID of Device to View / Update"
        required: true
        type: "integer"
        x-exportParamName: "DeviceId"
      - in: "body"
        name: "payload"
        required: true
        schema:
          $ref: "#/definitions/DeviceTag"
        x-exportParamName: "Payload"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Device tags updated."
          schema:
            $ref: "#/definitions/DeviceTag"
        "400":
          description: "Bad request."
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
  /domains/:
    get:
      tags:
      - "Domains"
      summary: "Return the domains of a client"
      operationId: "get_domain_resource"
      parameters:
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Success."
          schema:
            type: "array"
            items:
              $ref: "#/definitions/DomainReturn"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
    post:
      tags:
      - "Domains"
      summary: "Create a new domain"
      operationId: "post_domain_resource"
      parameters:
      - in: "body"
        name: "payload"
        required: true
        schema:
          $ref: "#/definitions/DomainCreate"
        x-exportParamName: "Payload"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/DomainReturn"
        "400":
          description: "Bad request."
        "201":
          description: "Created."
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
  /domains/ptr:
    get:
      tags:
      - "Domains"
      summary: "Return the PTR records of a client"
      operationId: "get_ptr_record_resource"
      parameters:
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Success."
          schema:
            type: "array"
            items:
              $ref: "#/definitions/PTRRecordReturn"
        "400":
          description: "Error"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
  /domains/ptr/{recordId}:
    get:
      tags:
      - "Domains"
      summary: "Get PTR record by ID and name"
      operationId: "get_ptr_record_id_resource"
      parameters:
      - name: "recordId"
        in: "path"
        required: true
        type: "integer"
        x-exportParamName: "RecordId"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Success."
          schema:
            $ref: "#/definitions/PTRRecordReturn"
        "400":
          description: "Error"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
    put:
      tags:
      - "Domains"
      summary: "Update PTR record"
      operationId: "put_ptr_record_id_resource"
      parameters:
      - name: "recordId"
        in: "path"
        required: true
        type: "integer"
        x-exportParamName: "RecordId"
      - in: "body"
        name: "payload"
        required: true
        schema:
          $ref: "#/definitions/PTRRecordUpdate"
        x-exportParamName: "Payload"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/PTRRecordReturn"
        "400":
          description: "Error"
        "202":
          description: "Success."
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
  /domains/{domainID}/aaaa-record:
    get:
      tags:
      - "Domains"
      summary: "Return all AAAA Records found for given zone"
      operationId: "get_aaaa_record_resource"
      parameters:
      - name: "domainID"
        in: "path"
        required: true
        type: "integer"
        x-exportParamName: "DomainID"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Success"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/AAAARecordReturn"
        "404":
          description: "Not found"
        "400":
          description: "Error"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
    post:
      tags:
      - "Domains"
      summary: "Create a new AAAA Record for given zone"
      operationId: "post_aaaa_record_resource"
      parameters:
      - name: "domainID"
        in: "path"
        required: true
        type: "integer"
        x-exportParamName: "DomainID"
      - in: "body"
        name: "payload"
        required: true
        schema:
          $ref: "#/definitions/AAAARecordCreate"
        x-exportParamName: "Payload"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/AAAARecordReturn"
        "404":
          description: "Not found"
        "400":
          description: "Error"
        "201":
          description: "Created"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
  /domains/{domainID}/aaaa-record/{recordId}:
    get:
      tags:
      - "Domains"
      summary: "Return Single AAAA Records found for given id"
      operationId: "get_aaaa_record_id_resource"
      parameters:
      - name: "domainID"
        in: "path"
        required: true
        type: "integer"
        x-exportParamName: "DomainID"
      - name: "recordId"
        in: "path"
        required: true
        type: "integer"
        x-exportParamName: "RecordId"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/AAAARecordReturn"
        "404":
          description: "Not found"
        "400":
          description: "Error"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
    put:
      tags:
      - "Domains"
      summary: "Update an AAAA Record for given id"
      operationId: "put_aaaa_record_id_resource"
      parameters:
      - name: "domainID"
        in: "path"
        required: true
        type: "integer"
        x-exportParamName: "DomainID"
      - name: "recordId"
        in: "path"
        required: true
        type: "integer"
        x-exportParamName: "RecordId"
      - in: "body"
        name: "payload"
        required: true
        schema:
          $ref: "#/definitions/AAAARecordUpdate"
        x-exportParamName: "Payload"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/AAAARecordReturn"
        "404":
          description: "Not Found"
        "400":
          description: "Error"
        "202":
          description: "Updated"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
    delete:
      tags:
      - "Domains"
      summary: "Delete an AAAA Record for given zone"
      operationId: "delete_aaaa_record_id_resource"
      parameters:
      - name: "domainID"
        in: "path"
        required: true
        type: "integer"
        x-exportParamName: "DomainID"
      - name: "recordId"
        in: "path"
        required: true
        type: "integer"
        x-exportParamName: "RecordId"
      responses:
        "404":
          description: "Not found"
        "400":
          description: "Error"
        "204":
          description: "Deleted"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
  /domains/{domainID}/mx-record:
    get:
      tags:
      - "Domains"
      summary: "Return all MX Records found for given zone"
      operationId: "get_mx_record_resource"
      parameters:
      - name: "domainID"
        in: "path"
        required: true
        type: "integer"
        x-exportParamName: "DomainID"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Success"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/MXRecordReturn"
        "404":
          description: "Not found"
        "400":
          description: "Error"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
    post:
      tags:
      - "Domains"
      summary: "Create a new MX Record for given zone"
      operationId: "post_mx_record_resource"
      parameters:
      - name: "domainID"
        in: "path"
        required: true
        type: "integer"
        x-exportParamName: "DomainID"
      - in: "body"
        name: "payload"
        required: true
        schema:
          $ref: "#/definitions/MXRecordCreate"
        x-exportParamName: "Payload"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/MXRecordReturn"
        "404":
          description: "Not found"
        "400":
          description: "Error"
        "201":
          description: "Created"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
  /domains/{domainID}/mx-record/{recordId}:
    get:
      tags:
      - "Domains"
      summary: "Return Single MX Records found for given id"
      operationId: "get_mx_record_id_resource"
      parameters:
      - name: "domainID"
        in: "path"
        required: true
        type: "integer"
        x-exportParamName: "DomainID"
      - name: "recordId"
        in: "path"
        required: true
        type: "integer"
        x-exportParamName: "RecordId"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/MXRecordReturn"
        "404":
          description: "Not found"
        "400":
          description: "Error"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
    put:
      tags:
      - "Domains"
      summary: "Update an MX Record for given zone"
      operationId: "put_mx_record_id_resource"
      parameters:
      - name: "domainID"
        in: "path"
        required: true
        type: "integer"
        x-exportParamName: "DomainID"
      - name: "recordId"
        in: "path"
        required: true
        type: "integer"
        x-exportParamName: "RecordId"
      - in: "body"
        name: "payload"
        required: true
        schema:
          $ref: "#/definitions/MXRecordUpdate"
        x-exportParamName: "Payload"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/MXRecordReturn"
        "404":
          description: "Not found"
        "400":
          description: "Error"
        "202":
          description: "Updated"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
    delete:
      tags:
      - "Domains"
      summary: "Delete an MX Record for given zone"
      operationId: "delete_mx_record_id_resource"
      parameters:
      - name: "domainID"
        in: "path"
        required: true
        type: "integer"
        x-exportParamName: "DomainID"
      - name: "recordId"
        in: "path"
        required: true
        type: "integer"
        x-exportParamName: "RecordId"
      responses:
        "404":
          description: "Not found"
        "400":
          description: "Error"
        "204":
          description: "Deleted"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
  /domains/{domainId}:
    get:
      tags:
      - "Domains"
      summary: "Return a domain for given id"
      operationId: "get_domain_id_resource"
      parameters:
      - name: "domainId"
        in: "path"
        required: true
        type: "integer"
        x-exportParamName: "DomainId"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Success."
          schema:
            $ref: "#/definitions/DomainReturn"
        "404":
          description: "Domain not found."
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
    delete:
      tags:
      - "Domains"
      summary: "Delete domain for given id"
      operationId: "delete_domain_id_resource"
      parameters:
      - name: "domainId"
        in: "path"
        required: true
        type: "integer"
        x-exportParamName: "DomainId"
      responses:
        "500":
          description: "Error."
        "404":
          description: "Domain not found."
        "204":
          description: "Deleted."
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
  /domains/{domain}/a-record:
    get:
      tags:
      - "Domains"
      summary: "Return all A Records found for given zone name"
      operationId: "get_a_record_resource"
      parameters:
      - name: "domain"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "Domain"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Success"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/ARecord"
        "404":
          description: "Not found"
        "400":
          description: "Error"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
    post:
      tags:
      - "Domains"
      summary: "Create a new A Record for given zone"
      operationId: "post_a_record_resource"
      parameters:
      - name: "domain"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "Domain"
      - in: "body"
        name: "payload"
        required: true
        schema:
          $ref: "#/definitions/ARecord"
        x-exportParamName: "Payload"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/ARecord"
        "409":
          description: "Record Already Exists"
        "404":
          description: "Not found"
        "400":
          description: "Error"
        "201":
          description: "Created"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
  /domains/{domain}/a-record/{record}:
    get:
      tags:
      - "Domains"
      summary: "Return Single A Records found for given domain name"
      operationId: "get_a_record_id_resource"
      parameters:
      - name: "domain"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "Domain"
      - name: "record"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "Record"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/ARecord"
        "404":
          description: "Not found"
        "400":
          description: "Error"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
    put:
      tags:
      - "Domains"
      summary: "Update an A Record for given zone"
      operationId: "put_a_record_id_resource"
      parameters:
      - name: "domain"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "Domain"
      - name: "record"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "Record"
      - in: "body"
        name: "payload"
        required: true
        schema:
          $ref: "#/definitions/ARecord"
        x-exportParamName: "Payload"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/ARecord"
        "404":
          description: "Not found"
        "400":
          description: "Error"
        "202":
          description: "Updated"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
    delete:
      tags:
      - "Domains"
      summary: "Delete a single A Record value for given zone"
      operationId: "delete_a_record_id_resource"
      parameters:
      - name: "domain"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "Domain"
      - name: "record"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "Record"
      responses:
        "404":
          description: "Not found"
        "400":
          description: "Error"
        "204":
          description: "Deleted"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
  /ignition/:
    get:
      tags:
      - "Ignition"
      summary: "Return all Ignition configurations"
      operationId: "get_ignition_resource"
      parameters:
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Successfully returned ignition configs"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/IgnitionResponse"
        "400":
          description: "Unable to get ignition configs"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
    post:
      tags:
      - "Ignition"
      summary: "Creates a new Ignition configuration"
      operationId: "post_ignition_resource"
      parameters:
      - in: "body"
        name: "payload"
        required: true
        schema:
          $ref: "#/definitions/CreateIgnition"
        x-exportParamName: "Payload"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "201":
          description: "Successfully created ignition configs"
          schema:
            $ref: "#/definitions/IgnitionResponse"
        "400":
          description: "Unable to create ignition config"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
  /ignition/{ignitionId}:
    get:
      tags:
      - "Ignition"
      summary: "Return an Ignition configuration by ID"
      operationId: "get_ignition_resource_id"
      parameters:
      - name: "ignitionId"
        in: "path"
        required: true
        type: "integer"
        x-exportParamName: "IgnitionId"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Successfully returned ignition config"
          schema:
            $ref: "#/definitions/IgnitionResponse"
        "400":
          description: "Unable to get ignition config"
        "404":
          description: "Not found"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
    put:
      tags:
      - "Ignition"
      summary: "Update an Ignition configuration by ID"
      operationId: "put_ignition_resource_id"
      parameters:
      - name: "ignitionId"
        in: "path"
        required: true
        type: "integer"
        x-exportParamName: "IgnitionId"
      - in: "body"
        name: "payload"
        required: true
        schema:
          $ref: "#/definitions/UpdateIgnition"
        x-exportParamName: "Payload"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Successfully updated ignition config"
          schema:
            $ref: "#/definitions/IgnitionResponse"
        "400":
          description: "Unable to get ignition config"
        "404":
          description: "Not found"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
    delete:
      tags:
      - "Ignition"
      summary: "Delete an Ignition configuration by ID"
      operationId: "delete_ignition_resource_id"
      parameters:
      - name: "ignitionId"
        in: "path"
        required: true
        type: "integer"
        x-exportParamName: "IgnitionId"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Successfully returned ignition configs"
        "400":
          description: "Unable to delete ignition configs"
        "404":
          description: "Not found"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
  /inventory/locations:
    get:
      tags:
      - "Inventory"
      summary: "Get all facilities"
      operationId: "get_location_resource"
      parameters:
      - name: "vpsLocations"
        in: "query"
        description: "Filter by the VPS locations"
        required: false
        type: "string"
        x-exportParamName: "VpsLocations"
        x-optionalDataType: "String"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Location data was found"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Location"
        "500":
          description: "Unable to gather locations"
        "404":
          description: "Unable to find locations"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
  /inventory/product:
    get:
      tags:
      - "Inventory"
      summary: "Get all products"
      operationId: "get_stock_resource"
      parameters:
      - name: "location"
        in: "query"
        description: "Retrieve products by their location in the Hivelocity store:\
          \ \n\nMAIN: The main list of instant servers.\nCUSTOM_DISPLAY: The main\
          \ list of custom servers.\nMASSIVESTORAGE: Servers with up to 90 drives.\n\
          GPU: Servers with GPUs.\nOUTLET: Discounted older hardware.\nLANDING: Periodic\
          \ specials for events."
        required: false
        type: "string"
        default: "MAIN"
        enum:
        - "MAIN"
        - "CUSTOM_DISPLAY"
        - "MASSIVESTORAGE"
        - "GPU"
        - "OUTLET"
        - "LANDING"
        x-exportParamName: "Location"
        x-optionalDataType: "String"
      - name: "include_custom"
        in: "query"
        description: "Include custom server products."
        required: false
        type: "boolean"
        default: false
        x-exportParamName: "IncludeCustom"
        x-optionalDataType: "Bool"
      - name: "bonding_support"
        in: "query"
        description: "Filter by bonding support. Values are true/false. None will\
          \ return a mix of both.\n*DEPRECATED:* Soon, all servers sold will have\
          \ bonding support and this will be removed."
        required: false
        type: "string"
        x-exportParamName: "BondingSupport"
        x-optionalDataType: "String"
      - name: "group_by"
        in: "query"
        description: "Get results grouped by 'city', 'facility', or 'flat'"
        required: false
        type: "string"
        default: "facility"
        x-exportParamName: "GroupBy"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Product data was found"
          schema:
            $ref: "#/definitions/Inventory"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
  /inventory/product/{productId}:
    get:
      tags:
      - "Inventory"
      summary: "Get product"
      operationId: "get_stock_by_product_resource"
      parameters:
      - name: "productId"
        in: "path"
        description: "Product database ID"
        required: true
        type: "integer"
        x-exportParamName: "ProductId"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Product data was found"
          schema:
            $ref: "#/definitions/Stock"
        "404":
          description: "Product with given id not found"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
  /invoice/:
    get:
      tags:
      - "Invoice"
      summary: "Return serialized data on all invoices"
      operationId: "get_invoice_resource"
      parameters:
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Success"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Invoice"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
  /invoice/search:
    get:
      tags:
      - "Invoice"
      summary: "Return results of invoice search"
      operationId: "get_invoice_search_resource"
      parameters:
      - name: "endDate"
        in: "query"
        description: "The end date range"
        required: false
        type: "integer"
        x-exportParamName: "EndDate"
        x-optionalDataType: "Int32"
      - name: "startDate"
        in: "query"
        description: "The start date range"
        required: false
        type: "integer"
        x-exportParamName: "StartDate"
        x-optionalDataType: "Int32"
      - name: "perPage"
        in: "query"
        description: "Number of items per page."
        required: false
        type: "integer"
        default: 10
        x-exportParamName: "PerPage"
        x-optionalDataType: "Int32"
      - name: "page"
        in: "query"
        description: "The page number of search."
        required: false
        type: "integer"
        default: 1
        x-exportParamName: "Page"
        x-optionalDataType: "Int32"
      - name: "q"
        in: "query"
        description: "Content search."
        required: false
        type: "string"
        x-exportParamName: "Q"
        x-optionalDataType: "String"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Invoice search results."
          schema:
            $ref: "#/definitions/InvoiceSeachResult"
        "400":
          description: "Invalid invoice search request."
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
  /invoice/unpaid:
    get:
      tags:
      - "Invoice"
      summary: "Return total balance of all unpaid invoices"
      operationId: "get_invoice_unpaid_resource"
      parameters:
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Unpaid data was found"
          schema:
            $ref: "#/definitions/InvoiceUnpaid"
        "500":
          description: "Unable to gather unpaid invoices"
        "404":
          description: "Unable to find unpaid invoices"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
  /invoice/{invoiceId}:
    get:
      tags:
      - "Invoice"
      summary: "Return serialized data on a single invoice"
      operationId: "get_invoice_id_resource"
      parameters:
      - name: "invoiceId"
        in: "path"
        description: "Invoice database ID"
        required: true
        type: "integer"
        x-exportParamName: "InvoiceId"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/Invoice"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
  /invoice/{invoiceId}/apply-account-credit:
    post:
      tags:
      - "Invoice"
      summary: "Apply account credit to an invoice"
      operationId: "post_invoice_id_apply_account_credit"
      parameters:
      - name: "invoiceId"
        in: "path"
        description: "Invoice database ID"
        required: true
        type: "integer"
        x-exportParamName: "InvoiceId"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Successfully applied account credit to invoice"
          schema:
            $ref: "#/definitions/Invoice"
        "400":
          description: "No account credits available to apply to invoice"
        "404":
          description: "Not found"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
  /invoice/{invoiceId}/details:
    get:
      tags:
      - "Invoice"
      summary: "Return detailed information for an invoice"
      description: "Same data as the PDF file but serialized"
      operationId: "get_invoice_id_details"
      parameters:
      - name: "invoiceId"
        in: "path"
        description: "Invoice database ID"
        required: true
        type: "integer"
        x-exportParamName: "InvoiceId"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/InvoiceDetails"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
  /invoice/{invoiceId}/pdf-download:
    get:
      tags:
      - "Invoice"
      summary: "Return an Invoice PDF file in Base64 Encoded Format"
      operationId: "get_invoice_pdf_resource"
      parameters:
      - name: "invoiceId"
        in: "path"
        description: "Invoice database ID"
        required: true
        type: "integer"
        x-exportParamName: "InvoiceId"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/InvoicePDF"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
  /ip/:
    get:
      tags:
      - "IPAssignment"
      summary: "Get all assignments"
      operationId: "get_ip_assignment_resource"
      parameters:
      - name: "displayPrivateNetworks"
        in: "query"
        description: "Return Private (RFC 1918) Addresses in Results"
        required: false
        type: "boolean"
        default: false
        x-exportParamName: "DisplayPrivateNetworks"
        x-optionalDataType: "Bool"
      - name: "displayIPv6"
        in: "query"
        description: "Return IPv6 Addresses in Results"
        required: false
        type: "boolean"
        default: true
        x-exportParamName: "DisplayIPv6"
        x-optionalDataType: "Bool"
      - name: "clientId"
        in: "query"
        description: "Return IPs from this Client ID"
        required: false
        type: "integer"
        minimum: 0
        exclusiveMinimum: true
        x-exportParamName: "ClientId"
        x-optionalDataType: "Int32"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Success"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/IPAssignment"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
    post:
      tags:
      - "IPAssignment"
      summary: "Request new assignment"
      description: "This endpoint is used to request a new IP Assignment from MyV\
        \ and the API itself. \nIt will create a request on Zendesk for Networking\
        \ support team."
      operationId: "post_ip_assignment_resource"
      parameters:
      - in: "body"
        name: "payload"
        required: true
        schema:
          $ref: "#/definitions/IpAssignmentRequest"
        x-exportParamName: "Payload"
      responses:
        "400":
          description: "Invalid action"
        "200":
          description: "Success"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
  /ip/address/{ipAddress}:
    get:
      tags:
      - "IPAssignment"
      summary: "Get assignment by IP"
      operationId: "get_ip_assignment_subnet_resource"
      parameters:
      - name: "ipAddress"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "IpAddress"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/IPAssignment"
        "404":
          description: "IP assignment not found"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
  /ip/combine:
    post:
      tags:
      - "IPAssignment"
      summary: "Combine assignments"
      operationId: "post_ip_assignment_combine_resource"
      parameters:
      - in: "body"
        name: "payload"
        required: true
        schema:
          $ref: "#/definitions/IpAssignmentCombine"
        x-exportParamName: "Payload"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/IPAssignment"
        "404":
          description: "IP assignment not found"
        "401":
          description: "Access to this IP Assignment is not allowed"
        "400":
          description: "Invalid action"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
  /ip/{ipAssignmentId}:
    get:
      tags:
      - "IPAssignment"
      summary: "Get assignment"
      operationId: "get_ip_assignment_id_resource"
      parameters:
      - name: "ipAssignmentId"
        in: "path"
        required: true
        type: "integer"
        x-exportParamName: "IpAssignmentId"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/IPAssignment"
        "404":
          description: "IP Assignment Not Found"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
    put:
      tags:
      - "IPAssignment"
      summary: "Route assignment to IP"
      operationId: "put_ip_assignment_id_resource"
      parameters:
      - name: "ipAssignmentId"
        in: "path"
        required: true
        type: "integer"
        x-exportParamName: "IpAssignmentId"
      - in: "body"
        name: "payload"
        required: true
        schema:
          $ref: "#/definitions/IpAssignmentPut"
        x-exportParamName: "Payload"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "202":
          description: "Accepted"
          schema:
            $ref: "#/definitions/NetworkTask-dump"
        "429":
          description: "Request was Rate Limited"
        "404":
          description: "IP assignment not found"
        "401":
          description: "Access to this IP Assignment is not allowed"
        "400":
          description: "Invalid action"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
    delete:
      tags:
      - "IPAssignment"
      summary: "Delete assignment"
      operationId: "delete_ip_assignment_id_resource"
      parameters:
      - name: "ipAssignmentId"
        in: "path"
        required: true
        type: "integer"
        x-exportParamName: "IpAssignmentId"
      responses:
        "404":
          description: "IP assignment not found"
        "401":
          description: "Access to this IP Assignment is not allowed"
        "400":
          description: "Invalid action"
        "204":
          description: "Success"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
  /ip/{ipAssignmentId}/clear:
    post:
      tags:
      - "IPAssignment"
      summary: "Clear all configuration on an IP Assignment"
      operationId: "post_ip_assignment_id_clear_resource"
      parameters:
      - name: "ipAssignmentId"
        in: "path"
        required: true
        type: "integer"
        x-exportParamName: "IpAssignmentId"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "202":
          description: "Accepted"
          schema:
            $ref: "#/definitions/NetworkTask-dump"
        "429":
          description: "Request was Rate Limited"
        "404":
          description: "IP assignment not found"
        "401":
          description: "Access to this IP Assignment is not allowed"
        "400":
          description: "Invalid action"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
  /ip/{ipAssignmentId}/split:
    post:
      tags:
      - "IPAssignment"
      summary: "Split assignment"
      operationId: "post_ip_assignment_split_resource"
      parameters:
      - name: "ipAssignmentId"
        in: "path"
        required: true
        type: "integer"
        x-exportParamName: "IpAssignmentId"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Success"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/IPAssignment"
        "404":
          description: "IP assignment not found"
        "401":
          description: "Access to this IP Assignment is not allowed"
        "400":
          description: "Invalid action"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
  /maintenance/:
    get:
      tags:
      - "Maintenance"
      summary: "Get all Maintenance Events for a client"
      operationId: "get_maintenance_event_client_resource"
      parameters:
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Success"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/MaintenanceEvent"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
  /maintenance/{maintenanceEventId}:
    get:
      tags:
      - "Maintenance"
      summary: "Get Maintenance Events"
      operationId: "get_maintenance_event_id_client_resource"
      parameters:
      - name: "maintenanceEventId"
        in: "path"
        required: true
        type: "integer"
        x-exportParamName: "MaintenanceEventId"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/MaintenanceEvent"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
  /network/device/ports:
    get:
      tags:
      - "Network"
      summary: "Get all ports by device"
      operationId: "get_device_network_port_resource"
      parameters:
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Success"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/DevicePort"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
  /network/null-route:
    get:
      tags:
      - "Network"
      summary: "Return Null Routed IPs"
      operationId: "get_null_routes_resource"
      parameters:
      - name: "clientId"
        in: "query"
        description: "Filter to retrieve null routes for a specific client."
        required: false
        type: "integer"
        x-exportParamName: "ClientId"
        x-optionalDataType: "Int32"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Success"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/NullRoute"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
    post:
      tags:
      - "Network"
      summary: "Add a Null Route for an IP Address"
      operationId: "post_null_routes_resource"
      parameters:
      - in: "body"
        name: "payload"
        required: true
        schema:
          $ref: "#/definitions/NullRouteRequest"
        x-exportParamName: "Payload"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "201":
          description: "Success"
          schema:
            $ref: "#/definitions/NetworkTask-dump"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
  /network/null-route/{ipAddress}:
    get:
      tags:
      - "Network"
      summary: "Return record if IP Address is Null Routed"
      operationId: "get_null_routes_id_resource"
      parameters:
      - name: "ipAddress"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "IpAddress"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/NullRoute"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
    delete:
      tags:
      - "Network"
      summary: "Remove Null Route for an IP Address"
      operationId: "delete_null_routes_id_resource"
      parameters:
      - name: "ipAddress"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "IpAddress"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "201":
          description: "Success"
          schema:
            $ref: "#/definitions/NetworkTask-dump"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
  /network/status/:
    get:
      tags:
      - "Network"
      summary: "Get network task status"
      operationId: "get_network_task_client_resource"
      parameters:
      - name: "clientId"
        in: "query"
        description: "Filter to retrieve tasks for a specific client."
        required: false
        type: "integer"
        x-exportParamName: "ClientId"
        x-optionalDataType: "Int32"
      - name: "createdInLast"
        in: "query"
        description: "Filter to retrieve tasks created in the last timedelta hours."
        required: false
        type: "integer"
        x-exportParamName: "CreatedInLast"
        x-optionalDataType: "Int32"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Success."
          schema:
            type: "array"
            items:
              $ref: "#/definitions/NetworkTask-dump"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
        "400":
          description: "Bad Request."
  /network/status/{id}:
    get:
      tags:
      - "Network"
      summary: "Get network task status by Device ID or Task ID"
      operationId: "get_network_task_id_resource"
      parameters:
      - name: "id"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "Id"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Success."
          schema:
            $ref: "#/definitions/NetworkTask-dump"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
  /order-groups/:
    get:
      tags:
      - "Order Groups"
      summary: "Return a list with all Order Groups"
      operationId: "get_order_group_resource"
      parameters:
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Order groups found successfuly."
          schema:
            type: "array"
            items:
              $ref: "#/definitions/OrderGroup"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
    post:
      tags:
      - "Order Groups"
      summary: "Create a new Order Group"
      operationId: "post_order_group_resource"
      parameters:
      - in: "body"
        name: "payload"
        required: true
        schema:
          $ref: "#/definitions/OrderGroupCreate"
        x-exportParamName: "Payload"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/OrderGroup"
        "201":
          description: "Order Group created."
        "400":
          description: "Invalid Order Group parameters."
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
  /order-groups/{orderGroupId}:
    get:
      tags:
      - "Order Groups"
      summary: "Return an Order Group"
      operationId: "get_order_group_id_resource"
      parameters:
      - name: "orderGroupId"
        in: "path"
        description: "Id of the order group to interact with"
        required: true
        type: "integer"
        x-exportParamName: "OrderGroupId"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Order Group Found."
          schema:
            $ref: "#/definitions/OrderGroup"
        "401":
          description: "Access to Order Group not Allowed."
        "404":
          description: "Order Group Not Found."
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
    put:
      tags:
      - "Order Groups"
      summary: "Update an Order Group"
      operationId: "put_order_group_id_resource"
      parameters:
      - name: "orderGroupId"
        in: "path"
        description: "Id of the order group to interact with"
        required: true
        type: "integer"
        x-exportParamName: "OrderGroupId"
      - in: "body"
        name: "payload"
        required: true
        schema:
          $ref: "#/definitions/OrderGroupUpdate"
        x-exportParamName: "Payload"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Order Group updated."
          schema:
            $ref: "#/definitions/OrderGroup"
        "400":
          description: "Invalid Order Group parameters."
        "404":
          description: "Order Group Not Found."
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
    delete:
      tags:
      - "Order Groups"
      summary: "Delete the specified Order Group"
      operationId: "delete_order_group_id_resource"
      parameters:
      - name: "orderGroupId"
        in: "path"
        description: "Id of the order group to interact with"
        required: true
        type: "integer"
        x-exportParamName: "OrderGroupId"
      responses:
        "204":
          description: "Order Group Deleted"
        "401":
          description: "Access to Order Group not Allowed."
        "404":
          description: "Order Group Not Found"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
  /order/:
    get:
      tags:
      - "Order"
      summary: "Return a list with all Orders"
      operationId: "get_order_resource"
      parameters:
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "A list of orders if the current user has them."
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Order-dump"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
  /order/in-progress:
    get:
      tags:
      - "Order"
      summary: "Return a list of all In-Progress orders"
      operationId: "get_order_inprogress_resource"
      parameters:
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "A list of in-progress orders if the current user has them."
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Order-dump"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
  /order/{orderId}:
    get:
      tags:
      - "Order"
      summary: "Return details of a specific Order"
      operationId: "get_order_id_resource"
      parameters:
      - name: "orderId"
        in: "path"
        description: "\"ID of Order to View\""
        required: true
        type: "integer"
        x-exportParamName: "OrderId"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "An specific order with its details."
          schema:
            $ref: "#/definitions/Order-dump"
        "404":
          description: "Order ID not found."
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
  /permission/:
    get:
      tags:
      - "Permission"
      summary: "Endpoint to get All Permissions"
      operationId: "get_permission_all_resource"
      parameters: []
      responses:
        "200":
          description: "Success"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
  /permission/contact:
    post:
      tags:
      - "Permission"
      summary: "Endpoint to assign a new Permission to a Contact"
      operationId: "post_permission_assign_contact_resource"
      parameters:
      - in: "body"
        name: "payload"
        required: true
        schema:
          $ref: "#/definitions/Permission"
        x-exportParamName: "Payload"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Success"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/PermissionReturn"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
  /permission/contact/{contactId}:
    get:
      tags:
      - "Permission"
      summary: "Endpoint to get Contact Permissions"
      operationId: "get_permission_contact_resource"
      parameters:
      - name: "contactId"
        in: "path"
        required: true
        type: "integer"
        x-exportParamName: "ContactId"
      responses:
        "200":
          description: "Success"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
  /permission/user:
    get:
      tags:
      - "Permission"
      summary: "Endpoint to get User Permissions"
      operationId: "get_permission_user_resource"
      parameters: []
      responses:
        "200":
          description: "Success"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
  /product/options:
    get:
      tags:
      - "Product"
      summary: "Get all options"
      operationId: "get_products_and_options_resource"
      parameters:
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Success"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/ProductOption"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
  /product/{productId}/operating-systems:
    get:
      tags:
      - "Product"
      summary: "Get product operating systems"
      operationId: "get_product_operating_systems_resource"
      parameters:
      - name: "productId"
        in: "path"
        description: "ID of the Product"
        required: true
        type: "integer"
        x-exportParamName: "ProductId"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Success"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Option-dump"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
  /product/{productId}/options:
    get:
      tags:
      - "Product"
      summary: "Get product options"
      operationId: "get_product_option_resource"
      parameters:
      - name: "groupBy"
        in: "query"
        description: "Get results grouped by 'upgrade' or without grouping."
        required: false
        type: "string"
        default: "upgrade"
        x-exportParamName: "GroupBy"
        x-optionalDataType: "String"
      - name: "productId"
        in: "path"
        description: "ID of the Product"
        required: true
        type: "integer"
        x-exportParamName: "ProductId"
      responses:
        "200":
          description: "Product data was found"
          schema:
            $ref: "#/definitions/Options"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
  /profile/:
    get:
      tags:
      - "Profile"
      summary: "Get Profile of current user or a contact with id"
      description: "The id is optional and if it is necessary must be sent as URL\
        \ param."
      operationId: "get_profile_resource"
      parameters:
      - name: "contactId"
        in: "query"
        description: "\"ID of Contact to manage Profile\""
        required: false
        type: "string"
        x-exportParamName: "ContactId"
        x-optionalDataType: "String"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/Profile-dump"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
    put:
      tags:
      - "Profile"
      summary: "Update Profile of current user or a contact with id"
      description: "The id is optional and if it is necessary must be sent as URL\
        \ param."
      operationId: "put_profile_resource"
      parameters:
      - name: "contactId"
        in: "query"
        description: "\"ID of Contact to manage Profile\""
        required: false
        type: "string"
        x-exportParamName: "ContactId"
        x-optionalDataType: "String"
      - in: "body"
        name: "payload"
        required: true
        schema:
          $ref: "#/definitions/ProfileUpdate"
        x-exportParamName: "Payload"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Profile successfully updated."
          schema:
            $ref: "#/definitions/Profile-dump"
        "400":
          description: "Unable to update Profile Data."
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
  /profile/basic:
    get:
      tags:
      - "Profile"
      summary: "Get Basic Profile of current user or a contact with id"
      description: "The id is optional and if it is necessary must be sent as URL\
        \ param."
      operationId: "get_basic_profile_resource"
      parameters:
      - name: "contactId"
        in: "query"
        description: "\"ID of Contact to manage Basic Profile\""
        required: false
        type: "string"
        x-exportParamName: "ContactId"
        x-optionalDataType: "String"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/BasicProfile-dump"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
  /service/:
    get:
      tags:
      - "Service"
      summary: "Return a list of all account services"
      operationId: "get_service_resource"
      parameters:
      - name: "type_code"
        in: "query"
        description: "Return service having the same service type code, the default\
          \ value is all\n The list of service types can be accessed on https://core.hivelocity.net/api/v2/service/types"
        required: false
        type: "string"
        x-exportParamName: "TypeCode"
        x-optionalDataType: "String"
      - name: "orderId"
        in: "query"
        description: "Order id of the service"
        required: false
        type: "integer"
        default: 0
        x-exportParamName: "OrderId"
        x-optionalDataType: "Int32"
      - name: "status"
        in: "query"
        description: "The current status of the service"
        required: true
        type: "string"
        default: "all"
        enum:
        - "all"
        - "active"
        - "deactivated"
        - "pending"
        - "suspended"
        - "cancelled"
        x-exportParamName: "Status"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Success"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/FastService-dump"
        "404":
          description: "You don't own any services"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
  /service/managed-requirements:
    get:
      tags:
      - "Service"
      summary: "Return a dictionary with managed services operating system and panel\
        \ requirements"
      operationId: "get_service_managed_req_resource"
      parameters:
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/ServiceManagedReq"
        "404":
          description: "Service not found"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
  /service/types:
    get:
      tags:
      - "Service"
      summary: "Return all available service types"
      operationId: "get_service_type_resource"
      parameters:
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Service types retrieved"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/ServiceType"
        "404":
          description: "Unable to retrieve service types"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
  /service/{serviceId}:
    get:
      tags:
      - "Service"
      summary: "Return a dictionary with data from a specific account service"
      operationId: "get_service_id_resource"
      parameters:
      - name: "includeZeroPriceOptions"
        in: "query"
        description: "Includes on the field serviceOptions the options having price\
          \ equal to zero"
        required: false
        type: "boolean"
        x-exportParamName: "IncludeZeroPriceOptions"
        x-optionalDataType: "Bool"
      - name: "serviceId"
        in: "path"
        required: true
        type: "integer"
        x-exportParamName: "ServiceId"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/Service"
        "404":
          description: "Service not found"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
  /service/{serviceId}/apply-coupon:
    post:
      tags:
      - "Service"
      summary: "Apply the coupon code for a service"
      operationId: "post_service_id_apply_coupon_resource"
      parameters:
      - name: "serviceId"
        in: "path"
        required: true
        type: "integer"
        x-exportParamName: "ServiceId"
      - in: "body"
        name: "payload"
        required: true
        schema:
          $ref: "#/definitions/CartCoupon"
        x-exportParamName: "Payload"
      responses:
        "404":
          description: "Service not found"
        "200":
          description: "Success"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
  /service/{serviceId}/manageable:
    get:
      tags:
      - "Service"
      summary: "Return a dictionary with data verifying managed services eligibility"
      operationId: "get_service_manageable_resource"
      parameters:
      - name: "serviceId"
        in: "path"
        required: true
        type: "integer"
        x-exportParamName: "ServiceId"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/ServiceManageable"
        "404":
          description: "Service not found"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
  /service/{serviceId}/validate-coupon:
    post:
      tags:
      - "Service"
      summary: "Validate the coupon code for a service"
      operationId: "post_service_id_validate_coupon_resource"
      parameters:
      - name: "serviceId"
        in: "path"
        required: true
        type: "integer"
        x-exportParamName: "ServiceId"
      - in: "body"
        name: "payload"
        required: true
        schema:
          $ref: "#/definitions/CartCoupon"
        x-exportParamName: "Payload"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/ValidateCartCoupon-dump"
        "404":
          description: "Service not found"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
  /ssh_key/:
    get:
      tags:
      - "SshKey"
      summary: "Gets all public ssh key"
      operationId: "get_ssh_key_resource"
      parameters:
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "All Public ssh key successfully retrieved."
          schema:
            type: "array"
            items:
              $ref: "#/definitions/SshKeyResponse"
        "400":
          description: "Unable to get all public ssh keys"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
    post:
      tags:
      - "SshKey"
      summary: "Adds public ssh key"
      operationId: "post_ssh_key_resource"
      parameters:
      - in: "body"
        name: "payload"
        required: true
        schema:
          $ref: "#/definitions/SshKey"
        x-exportParamName: "Payload"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "201":
          description: "Public ssh key successfully added "
          schema:
            $ref: "#/definitions/SshKeyResponse"
        "400":
          description: "Unable to added public ssh key"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
  /ssh_key/{sshKeyId}:
    get:
      tags:
      - "SshKey"
      summary: "Get public ssh key"
      operationId: "get_ssh_key_id_resource"
      parameters:
      - name: "sshKeyId"
        in: "path"
        required: true
        type: "integer"
        x-exportParamName: "SshKeyId"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Public ssh key successfully retrieved."
          schema:
            $ref: "#/definitions/SshKeyResponse"
        "404":
          description: "Public ssh key not found."
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
    put:
      tags:
      - "SshKey"
      summary: "Updates public ssh key"
      operationId: "put_ssh_key_id_resource"
      parameters:
      - name: "sshKeyId"
        in: "path"
        required: true
        type: "integer"
        x-exportParamName: "SshKeyId"
      - in: "body"
        name: "payload"
        required: true
        schema:
          $ref: "#/definitions/SshKeyUpdate"
        x-exportParamName: "Payload"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Public ssh key successfully updated."
          schema:
            $ref: "#/definitions/SshKeyResponse"
        "400":
          description: "Unable to update public ssh key."
        "404":
          description: "Public ssh key not found."
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
    delete:
      tags:
      - "SshKey"
      summary: "Removes public ssh key"
      operationId: "delete_ssh_key_id_resource"
      parameters:
      - name: "sshKeyId"
        in: "path"
        required: true
        type: "integer"
        x-exportParamName: "SshKeyId"
      responses:
        "404":
          description: "Public ssh key not found."
        "200":
          description: "Public ssh key successfully removed."
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
  /tickets/:
    get:
      tags:
      - "Ticket"
      summary: "Returns a list with all Tickets"
      operationId: "get_ticket_resource"
      parameters:
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "All the tickets retrieved."
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Ticket"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
    post:
      tags:
      - "Ticket"
      summary: "Creates a new ticket"
      operationId: "post_ticket_resource"
      parameters:
      - in: "body"
        name: "payload"
        required: true
        schema:
          $ref: "#/definitions/TicketCreate"
        x-exportParamName: "Payload"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "201":
          description: "Ticket successfully created"
          schema:
            $ref: "#/definitions/Ticket"
        "400":
          description: "Unable to create ticket"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
  /tickets/search:
    get:
      tags:
      - "Ticket"
      summary: "Return results of ticket search"
      operationId: "get_ticket_search_resource"
      parameters:
      - name: "perPage"
        in: "query"
        description: "Number of items per page."
        required: false
        type: "integer"
        default: 10
        x-exportParamName: "PerPage"
        x-optionalDataType: "Int32"
      - name: "page"
        in: "query"
        description: "The page number of search."
        required: false
        type: "integer"
        default: 1
        x-exportParamName: "Page"
        x-optionalDataType: "Int32"
      - name: "q"
        in: "query"
        description: "Content search."
        required: false
        type: "string"
        x-exportParamName: "Q"
        x-optionalDataType: "String"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Ticket search results."
          schema:
            $ref: "#/definitions/TicketSeachResult"
        "400":
          description: "Invalid ticket search request."
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
  /tickets/{ticketId}:
    get:
      tags:
      - "Ticket"
      summary: "Returns details of a specific ticket"
      operationId: "get_ticket_id_resource"
      parameters:
      - name: "ticketId"
        in: "path"
        description: "ticket database ID"
        required: true
        type: "integer"
        x-exportParamName: "TicketId"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "The ticket retrieved."
          schema:
            $ref: "#/definitions/Ticket"
        "404":
          description: "The ticket id not found."
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
    put:
      tags:
      - "Ticket"
      summary: "Updates a specific ticket"
      operationId: "put_ticket_id_resource"
      parameters:
      - name: "ticketId"
        in: "path"
        description: "ticket database ID"
        required: true
        type: "integer"
        x-exportParamName: "TicketId"
      - in: "body"
        name: "payload"
        required: true
        schema:
          $ref: "#/definitions/TicketPut"
        x-exportParamName: "Payload"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Ticket successfully updated."
          schema:
            $ref: "#/definitions/Ticket"
        "404":
          description: "The ticket id not found."
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
  /tickets/{ticketId}/reply:
    get:
      tags:
      - "Ticket"
      summary: "Returns a reply for a specific ticket"
      operationId: "get_ticket_reply_resource"
      parameters:
      - name: "ticketId"
        in: "path"
        description: "ticket database ID"
        required: true
        type: "integer"
        x-exportParamName: "TicketId"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "The ticket replies retrieved."
          schema:
            type: "array"
            items:
              $ref: "#/definitions/TicketPost"
        "404":
          description: "The ticket id not found."
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
    post:
      tags:
      - "Ticket"
      summary: "Creates reply for a specific Ticket"
      operationId: "post_ticket_reply_resource"
      parameters:
      - name: "ticketId"
        in: "path"
        description: "ticket database ID"
        required: true
        type: "integer"
        x-exportParamName: "TicketId"
      - in: "body"
        name: "payload"
        required: true
        schema:
          $ref: "#/definitions/TicketCreateReply"
        x-exportParamName: "Payload"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "201":
          description: "Ticket reply successfully created."
          schema:
            $ref: "#/definitions/TicketPost"
        "404":
          description: "The ticket id not found."
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
  /token/:
    get:
      tags:
      - "Token"
      summary: "Returns a list of Public API Tokens for the current user (last 4 characters\
        \ only)"
      operationId: "get_token_resource"
      parameters:
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Public API Tokens retrieved."
          schema:
            type: "array"
            items:
              $ref: "#/definitions/PublicApiHideToken-dump"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
    post:
      tags:
      - "Token"
      summary: "Create a new Public API Token for the current user"
      operationId: "post_token_resource"
      parameters:
      - in: "body"
        name: "payload"
        required: true
        schema:
          $ref: "#/definitions/PublicApiToken"
        x-exportParamName: "Payload"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/PublicApiTokenResponsePost-dump"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
        "201":
          description: "Public API Token created."
    put:
      tags:
      - "Token"
      summary: "Updates the Public API Token with apiTokenId"
      operationId: "put_token_resource"
      parameters:
      - in: "body"
        name: "payload"
        required: true
        schema:
          $ref: "#/definitions/PublicApiToken-load"
        x-exportParamName: "Payload"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Public API Token successfully updated."
          schema:
            $ref: "#/definitions/PublicApiHideToken-dump"
        "304":
          description: "Public API Token not modified."
        "400":
          description: "Bad request."
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
    delete:
      tags:
      - "Token"
      summary: "Deletes the Public API Token with apiTokenId"
      operationId: "delete_token_resource"
      parameters:
      - in: "body"
        name: "payload"
        required: true
        schema:
          $ref: "#/definitions/DeleteApiToken-load"
        x-exportParamName: "Payload"
      responses:
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
        "201":
          description: "Public API Token successfully removed."
  /vlan/:
    get:
      tags:
      - "VLAN"
      summary: "Get all VLANs"
      operationId: "get_vlan_resource"
      parameters:
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "VLANs retrieved successfuly"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Vlan"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
    post:
      tags:
      - "VLAN"
      summary: "Create VLAN"
      operationId: "post_vlan_resource"
      parameters:
      - in: "body"
        name: "payload"
        required: true
        schema:
          $ref: "#/definitions/VlanCreate"
        x-exportParamName: "Payload"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/Vlan"
        "400":
          description: "Invalid VLAN creation parameter."
        "201":
          description: "VLAN created successfully."
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
  /vlan/{vlanId}:
    get:
      tags:
      - "VLAN"
      summary: "Get VLAN"
      operationId: "get_vlan_id_resource"
      parameters:
      - name: "vlanId"
        in: "path"
        description: "Id of the VLAN to interact with"
        required: true
        type: "integer"
        x-exportParamName: "VlanId"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "VLAN Found"
          schema:
            $ref: "#/definitions/Vlan"
        "404":
          description: "VLAN Not Found"
        "401":
          description: "Access to VLAN not Allowed"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
    put:
      tags:
      - "VLAN"
      summary: "Modify VLAN"
      operationId: "put_vlan_id_resource"
      parameters:
      - name: "vlanId"
        in: "path"
        description: "Id of the VLAN to interact with"
        required: true
        type: "integer"
        x-exportParamName: "VlanId"
      - in: "body"
        name: "payload"
        required: true
        schema:
          $ref: "#/definitions/VlanUpdate"
        x-exportParamName: "Payload"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "202":
          description: "Accepted."
          schema:
            $ref: "#/definitions/NetworkTask-dump"
        "429":
          description: "Request was Rate Limited"
        "404":
          description: "VLAN Not Found"
        "401":
          description: "Access to VLAN not Allowed"
        "400":
          description: "Error."
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
    delete:
      tags:
      - "VLAN"
      summary: "Delete VLAN"
      operationId: "delete_vlan_id_resource"
      parameters:
      - name: "vlanId"
        in: "path"
        description: "Id of the VLAN to interact with"
        required: true
        type: "integer"
        x-exportParamName: "VlanId"
      responses:
        "404":
          description: "VLAN Not Found"
        "401":
          description: "Access to VLAN not Allowed"
        "400":
          description: "Error."
        "204":
          description: "Success."
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
  /vlan/{vlanId}/clear:
    post:
      tags:
      - "VLAN"
      summary: "Clear all configurations on this VLAN, including Ports, IPs and associated\
        \ Static Routes"
      operationId: "post_vlan_id_clear_resource"
      parameters:
      - name: "vlanId"
        in: "path"
        description: "Id of the VLAN to interact with"
        required: true
        type: "integer"
        x-exportParamName: "VlanId"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "202":
          description: "Accepted."
          schema:
            $ref: "#/definitions/NetworkTask-dump"
        "404":
          description: "VLAN Not Found"
        "401":
          description: "Access to VLAN not Allowed"
        "400":
          description: "Error."
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
  /vps/:
    get:
      tags:
      - "VPS"
      summary: "Get all VPS instances"
      operationId: "get_vps_resource"
      parameters:
      - name: "clientId"
        in: "query"
        description: "The unique client account ID."
        required: false
        type: "integer"
        x-exportParamName: "ClientId"
        x-optionalDataType: "Int32"
      - name: "facilityCode"
        in: "query"
        description: "The facility code associated with the VPS instance. For example:\
          \ TPA1."
        required: false
        type: "string"
        x-exportParamName: "FacilityCode"
        x-optionalDataType: "String"
      - name: "networkId"
        in: "query"
        description: "The Network ID the VPS instance is attached to."
        required: false
        type: "string"
        x-exportParamName: "NetworkId"
        x-optionalDataType: "String"
      - name: "storageId"
        in: "query"
        description: "The storage server ID of the VPS instance."
        required: false
        type: "string"
        x-exportParamName: "StorageId"
        x-optionalDataType: "String"
      - name: "hostId"
        in: "query"
        description: "Host ID (hypervisor) of the VPS instance."
        required: false
        type: "string"
        x-exportParamName: "HostId"
        x-optionalDataType: "String"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "VPS instances retrieved successfuly"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/VPS"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
  /vps/available-volume-sizes:
    get:
      tags:
      - "VPS"
      summary: "Gets list of available sizes for new volumes"
      operationId: "get_vps_available_new_volumes_resource"
      parameters:
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/VPSAvailableNewVolumeSizes"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
  /vps/iso:
    get:
      tags:
      - "VPS"
      summary: "Get all VPS ISOs available"
      operationId: "get_vpsiso_resource"
      parameters:
      - name: "facilityCode"
        in: "query"
        description: "The facility code where the ISOs are stored."
        required: false
        type: "string"
        x-exportParamName: "FacilityCode"
        x-optionalDataType: "String"
      - name: "clientId"
        in: "query"
        description: "The unique client account ID."
        required: false
        type: "integer"
        x-exportParamName: "ClientId"
        x-optionalDataType: "Int32"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Success"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/VPSISO"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
    post:
      tags:
      - "VPS"
      summary: "Create a new ISO"
      operationId: "post_vpsiso_resource"
      parameters:
      - in: "body"
        name: "payload"
        required: true
        schema:
          $ref: "#/definitions/VPSISOCreate"
        x-exportParamName: "Payload"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/VPSISO"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
  /vps/iso/{isoId}:
    get:
      tags:
      - "VPS"
      summary: "Get the details of the VPS ISO ID specified"
      operationId: "get_vpsiso_id_resource"
      parameters:
      - name: "isoId"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "IsoId"
      - name: "facilityCode"
        in: "query"
        description: "The facility code where the ISOs are stored."
        required: false
        type: "string"
        x-exportParamName: "FacilityCode"
        x-optionalDataType: "String"
      - name: "clientId"
        in: "query"
        description: "The unique client account ID."
        required: false
        type: "integer"
        x-exportParamName: "ClientId"
        x-optionalDataType: "Int32"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/VPSISO"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
    delete:
      tags:
      - "VPS"
      summary: "Delete an ISO"
      operationId: "delete_vpsiso_id_resource"
      parameters:
      - name: "isoId"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "IsoId"
      - name: "facilityCode"
        in: "query"
        description: "The facility code where the ISOs are stored."
        required: false
        type: "string"
        x-exportParamName: "FacilityCode"
        x-optionalDataType: "String"
      - name: "clientId"
        in: "query"
        description: "The unique client account ID."
        required: false
        type: "integer"
        x-exportParamName: "ClientId"
        x-optionalDataType: "Int32"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "201":
          description: "Success"
          schema:
            $ref: "#/definitions/NetworkTask-dump"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
  /vps/network:
    get:
      tags:
      - "VPS"
      summary: "Get all VPS Networks"
      operationId: "get_vps_network_resource"
      parameters:
      - name: "facilityCode"
        in: "query"
        description: "The facility code where the VPS Network is located. For example:\
          \ `TPA1`."
        required: false
        type: "string"
        x-exportParamName: "FacilityCode"
        x-optionalDataType: "String"
      - name: "clientId"
        in: "query"
        description: "The unique client account ID."
        required: false
        type: "integer"
        x-exportParamName: "ClientId"
        x-optionalDataType: "Int32"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Success"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/VPSNetwork"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
    post:
      tags:
      - "VPS"
      summary: "Create a new VPS Network"
      operationId: "post_vps_network_resource"
      parameters:
      - in: "body"
        name: "payload"
        required: true
        schema:
          $ref: "#/definitions/VPSNetworkCreate"
        x-exportParamName: "Payload"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/VPSNetwork"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
  /vps/network/{networkId}:
    get:
      tags:
      - "VPS"
      summary: "Get VPS Network"
      operationId: "get_vps_network_id_resource"
      parameters:
      - name: "networkId"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "NetworkId"
      - name: "facilityCode"
        in: "query"
        description: "The facility code where the VPS Network is located. For example:\
          \ `TPA1`."
        required: false
        type: "string"
        x-exportParamName: "FacilityCode"
        x-optionalDataType: "String"
      - name: "clientId"
        in: "query"
        description: "The unique client account ID."
        required: false
        type: "integer"
        x-exportParamName: "ClientId"
        x-optionalDataType: "Int32"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/VPSNetwork"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
    put:
      tags:
      - "VPS"
      summary: "Update VPS Network"
      operationId: "put_vps_network_id_resource"
      parameters:
      - name: "networkId"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "NetworkId"
      - in: "body"
        name: "payload"
        required: true
        schema:
          $ref: "#/definitions/VPSNetworkUpdate"
        x-exportParamName: "Payload"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "201":
          description: "Success"
          schema:
            $ref: "#/definitions/NetworkTask-dump"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
    delete:
      tags:
      - "VPS"
      summary: "Delete VPS Network"
      operationId: "delete_vps_network_id_resource"
      parameters:
      - name: "networkId"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "NetworkId"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "201":
          description: "Success"
          schema:
            $ref: "#/definitions/NetworkTask-dump"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
  /vps/self-metadata:
    get:
      tags:
      - "VPS"
      operationId: "get_vps_self_metadata_resource"
      parameters: []
      responses:
        "200":
          description: "Success"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
  /vps/snapshot:
    get:
      tags:
      - "VPS"
      summary: "Get all VPS Volume Snapshots available"
      operationId: "get_vps_snapshot_resource"
      parameters:
      - name: "facilityCode"
        in: "query"
        description: "The facility code associated with the VPS instance. For example:\
          \ TPA1."
        required: false
        type: "string"
        x-exportParamName: "FacilityCode"
        x-optionalDataType: "String"
      - name: "deviceId"
        in: "query"
        description: "The unique device ID of the VPS instance."
        required: false
        type: "integer"
        x-exportParamName: "DeviceId"
        x-optionalDataType: "Int32"
      - name: "clientId"
        in: "query"
        description: "The unique client account ID."
        required: false
        type: "integer"
        x-exportParamName: "ClientId"
        x-optionalDataType: "Int32"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Success"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/VPSSnapshot"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
    post:
      tags:
      - "VPS"
      summary: "Create a VPS Volume Snapshot"
      operationId: "post_vps_snapshot_resource"
      parameters:
      - in: "body"
        name: "payload"
        required: true
        schema:
          $ref: "#/definitions/VPSSnapshotCreate"
        x-exportParamName: "Payload"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "201":
          description: "Success"
          schema:
            $ref: "#/definitions/NetworkTask-dump"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
  /vps/snapshot/{snapshotId}:
    get:
      tags:
      - "VPS"
      summary: "Get a VPS Volume Snapshot by ID"
      operationId: "get_vps_snapshot_id_resource"
      parameters:
      - name: "snapshotId"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "SnapshotId"
      - name: "facilityCode"
        in: "query"
        description: "The facility code associated with the VPS instance. For example:\
          \ TPA1."
        required: false
        type: "string"
        x-exportParamName: "FacilityCode"
        x-optionalDataType: "String"
      - name: "clientId"
        in: "query"
        description: "The unique client account ID."
        required: false
        type: "integer"
        x-exportParamName: "ClientId"
        x-optionalDataType: "Int32"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/VPSSnapshot"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
    post:
      tags:
      - "VPS"
      summary: "Restore a VPS Volume Snapshot"
      operationId: "post_vps_snapshot_id_resource"
      parameters:
      - name: "snapshotId"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "SnapshotId"
      - in: "body"
        name: "payload"
        required: true
        schema:
          $ref: "#/definitions/VPSSnapshotRestore"
        x-exportParamName: "Payload"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "201":
          description: "Success"
          schema:
            $ref: "#/definitions/NetworkTask-dump"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
    delete:
      tags:
      - "VPS"
      summary: "Delete a VPS Volume Snapshot"
      operationId: "delete_vps_snapshot_id_resource"
      parameters:
      - name: "snapshotId"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "SnapshotId"
      - name: "facilityCode"
        in: "query"
        description: "The facility code associated with the VPS instance. For example:\
          \ TPA1."
        required: false
        type: "string"
        x-exportParamName: "FacilityCode"
        x-optionalDataType: "String"
      - name: "clientId"
        in: "query"
        description: "The unique client account ID."
        required: false
        type: "integer"
        x-exportParamName: "ClientId"
        x-optionalDataType: "Int32"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "201":
          description: "Success"
          schema:
            $ref: "#/definitions/NetworkTask-dump"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
  /vps/snapshotSchedule:
    get:
      tags:
      - "VPS"
      summary: "Get all VPS Snapshot Schedules for a Facility or VPS Instance"
      operationId: "get_vps_snapshot_schedule_resource"
      parameters:
      - name: "facilityCode"
        in: "query"
        description: "The facility code associated with the VPS instance. For example:\
          \ TPA1."
        required: false
        type: "string"
        x-exportParamName: "FacilityCode"
        x-optionalDataType: "String"
      - name: "deviceId"
        in: "query"
        description: "The unique device ID of the VPS instance."
        required: false
        type: "integer"
        x-exportParamName: "DeviceId"
        x-optionalDataType: "Int32"
      - name: "clientId"
        in: "query"
        description: "The unique client account ID."
        required: false
        type: "integer"
        x-exportParamName: "ClientId"
        x-optionalDataType: "Int32"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Success"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/VPSSnapshotSchedule"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
    post:
      tags:
      - "VPS"
      summary: "Create a VPS Snapshot Schedule"
      operationId: "post_vps_snapshot_schedule_resource"
      parameters:
      - in: "body"
        name: "payload"
        required: true
        schema:
          $ref: "#/definitions/VPSSnapshotScheduleCreate"
        x-exportParamName: "Payload"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/VPSSnapshotSchedule"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
  /vps/snapshotSchedule/{snapshotScheduleId}:
    get:
      tags:
      - "VPS"
      summary: "Get a VPS Snapshot Schedules"
      operationId: "get_vps_snapshot_schedule_id_resource"
      parameters:
      - name: "snapshotScheduleId"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "SnapshotScheduleId"
      - name: "facilityCode"
        in: "query"
        description: "The facility code associated with the VPS instance. For example:\
          \ TPA1."
        required: false
        type: "string"
        x-exportParamName: "FacilityCode"
        x-optionalDataType: "String"
      - name: "clientId"
        in: "query"
        description: "The unique client account ID."
        required: false
        type: "integer"
        x-exportParamName: "ClientId"
        x-optionalDataType: "Int32"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/VPSSnapshotSchedule"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
    delete:
      tags:
      - "VPS"
      summary: "Delete a VPS Snapshot Schedule"
      operationId: "delete_vps_snapshot_schedule_id_resource"
      parameters:
      - name: "snapshotScheduleId"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "SnapshotScheduleId"
      - name: "facilityCode"
        in: "query"
        description: "The facility code associated with the VPS instance. For example:\
          \ TPA1."
        required: false
        type: "string"
        x-exportParamName: "FacilityCode"
        x-optionalDataType: "String"
      - name: "clientId"
        in: "query"
        description: "The unique client account ID."
        required: false
        type: "integer"
        x-exportParamName: "ClientId"
        x-optionalDataType: "Int32"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "204":
          description: "Success"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
  /vps/volume:
    get:
      tags:
      - "VPS"
      summary: "Get all VPS Instance Volumes available"
      operationId: "get_vps_volume_resource"
      parameters:
      - name: "facilityCode"
        in: "query"
        description: "The facility code associated with the VPS instance. For example:\
          \ TPA1."
        required: false
        type: "string"
        x-exportParamName: "FacilityCode"
        x-optionalDataType: "String"
      - name: "deviceId"
        in: "query"
        description: "The unique device ID of the VPS instance."
        required: false
        type: "integer"
        x-exportParamName: "DeviceId"
        x-optionalDataType: "Int32"
      - name: "clientId"
        in: "query"
        description: "The unique client account ID."
        required: false
        type: "integer"
        x-exportParamName: "ClientId"
        x-optionalDataType: "Int32"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Success"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/VPSVolume"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
    post:
      tags:
      - "VPS"
      summary: "Creates a new Volume"
      description: "Warning: This endpoint incurs charges. The volume will be billed\
        \ monthly regardless of attached device's\nbilling cycle length."
      operationId: "post_vps_volume_resource"
      parameters:
      - in: "body"
        name: "payload"
        required: true
        schema:
          $ref: "#/definitions/VPSVolumeCreate"
        x-exportParamName: "Payload"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "201":
          description: "Success"
          schema:
            $ref: "#/definitions/NetworkTask-dump"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
  /vps/volume/{volumeId}:
    get:
      tags:
      - "VPS"
      summary: "Get a VPS Instance Volume"
      operationId: "get_vps_volume_id_resource"
      parameters:
      - name: "volumeId"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "VolumeId"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/VPSVolume"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
    put:
      tags:
      - "VPS"
      summary: "Resize a Volume"
      description: "Warning: This endpoint incurs charges."
      operationId: "put_vps_volume_id_resource"
      parameters:
      - name: "volumeId"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "VolumeId"
      - in: "body"
        name: "payload"
        required: true
        schema:
          $ref: "#/definitions/VPSVolumeUpdate"
        x-exportParamName: "Payload"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "201":
          description: "Success"
          schema:
            $ref: "#/definitions/NetworkTask-dump"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
    delete:
      tags:
      - "VPS"
      summary: "Deletes a Volume"
      description: "Warning: This will cancel the monthly billing service for this\
        \ volume"
      operationId: "delete_vps_volume_id_resource"
      parameters:
      - name: "volumeId"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "VolumeId"
      - in: "body"
        name: "payload"
        required: true
        schema:
          $ref: "#/definitions/VPSVolumeDelete"
        x-exportParamName: "Payload"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "201":
          description: "Success"
          schema:
            $ref: "#/definitions/NetworkTask-dump"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
  /vps/volume/{volumeId}/available-sizes:
    get:
      tags:
      - "VPS"
      summary: "Get a volume's list of upgradable sizes"
      operationId: "get_vps_available_upgrade_sizes_resource"
      parameters:
      - name: "volumeId"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "VolumeId"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/VPSAvailableUpgradeSizes"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
  /vps/{deviceId}:
    get:
      tags:
      - "VPS"
      summary: "Get VPS instance"
      operationId: "get_vps_id_resource"
      parameters:
      - name: "deviceId"
        in: "path"
        description: "Device ID of VPS instance to View / Update"
        required: true
        type: "integer"
        x-exportParamName: "DeviceId"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/VPS"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
    put:
      tags:
      - "VPS"
      summary: "Update VPS instance"
      description: "This will incur additional charges if scaling up."
      operationId: "put_vps_id_resource"
      parameters:
      - name: "deviceId"
        in: "path"
        description: "Device ID of VPS instance to View / Update"
        required: true
        type: "integer"
        x-exportParamName: "DeviceId"
      - in: "body"
        name: "payload"
        required: true
        schema:
          $ref: "#/definitions/VPSUpdate"
        x-exportParamName: "Payload"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "201":
          description: "Success"
          schema:
            $ref: "#/definitions/NetworkTask-dump"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
  /vps/{deviceId}/attachiso:
    post:
      tags:
      - "VPS"
      summary: "Attach ISO to VPS instance"
      operationId: "post_vps_attach_iso_resource"
      parameters:
      - name: "deviceId"
        in: "path"
        description: "Device ID of VPS instance"
        required: true
        type: "integer"
        x-exportParamName: "DeviceId"
      - in: "body"
        name: "payload"
        required: true
        schema:
          $ref: "#/definitions/VPSISOAttach"
        x-exportParamName: "Payload"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "201":
          description: "Success"
          schema:
            $ref: "#/definitions/NetworkTask-dump"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
  /vps/{deviceId}/console:
    post:
      tags:
      - "VPS"
      summary: "Create a one time use URL for console access to a VPS instance"
      operationId: "post_vps_console_access_resource"
      parameters:
      - name: "deviceId"
        in: "path"
        description: "Device ID of VPS instance"
        required: true
        type: "integer"
        x-exportParamName: "DeviceId"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/VPSConsoleAccess"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
  /vps/{deviceId}/detachiso:
    post:
      tags:
      - "VPS"
      summary: "Detach ISO from VPS instance"
      operationId: "post_vps_detach_iso_resource"
      parameters:
      - name: "deviceId"
        in: "path"
        description: "Device ID of VPS instance"
        required: true
        type: "integer"
        x-exportParamName: "DeviceId"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "201":
          description: "Success"
          schema:
            $ref: "#/definitions/NetworkTask-dump"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
  /vps/{deviceId}/events:
    get:
      tags:
      - "VPS"
      summary: "Get VPS Instance Events"
      operationId: "get_vps_id_events_resource"
      parameters:
      - name: "deviceId"
        in: "path"
        description: "Device ID of VPS instance"
        required: true
        type: "integer"
        x-exportParamName: "DeviceId"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Success"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/VPSEvent"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
  /vps/{deviceId}/metrics:
    get:
      tags:
      - "VPS"
      summary: "Get Metrics for a VPS instance"
      operationId: "get_vps_metrics_resource"
      parameters:
      - name: "deviceId"
        in: "path"
        description: "Device ID of VPS instance"
        required: true
        type: "integer"
        x-exportParamName: "DeviceId"
      - name: "startTime"
        in: "query"
        description: "Desired Start Time for Chart Data."
        required: false
        type: "integer"
        x-exportParamName: "StartTime"
        x-optionalDataType: "Int32"
      - name: "endTime"
        in: "query"
        description: "Desired End Time for Chart Data."
        required: false
        type: "integer"
        x-exportParamName: "EndTime"
        x-optionalDataType: "Int32"
      - name: "imageWidth"
        in: "query"
        description: "Width to render metrics image in pixels."
        required: false
        type: "integer"
        x-exportParamName: "ImageWidth"
        x-optionalDataType: "Int32"
      - name: "imageHeight"
        in: "query"
        description: "Height to render metrics image in pixels."
        required: false
        type: "integer"
        x-exportParamName: "ImageHeight"
        x-optionalDataType: "Int32"
      - name: "metricType"
        in: "query"
        description: "Options: `CPU_USAGE`, `MEMORY_USAGE`, `DISK_RW`, `NETWORK_USAGE`"
        required: true
        type: "string"
        x-exportParamName: "MetricType"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/VPSMetricsResponse"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
  /vps/{deviceId}/network:
    post:
      tags:
      - "VPS"
      summary: "Attach VPS Network to a VPS Device"
      operationId: "post_vps_id_network_add_resource"
      parameters:
      - name: "deviceId"
        in: "path"
        required: true
        type: "integer"
        x-exportParamName: "DeviceId"
      - in: "body"
        name: "payload"
        required: true
        schema:
          $ref: "#/definitions/VPSInstanceNetworkAdd"
        x-exportParamName: "Payload"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "201":
          description: "Success"
          schema:
            $ref: "#/definitions/NetworkTask-dump"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
  /vps/{deviceId}/network/{networkId}:
    delete:
      tags:
      - "VPS"
      summary: "Detach a VPS Network from a VPS Device"
      operationId: "delete_vps_id_network_remove_resource"
      parameters:
      - name: "deviceId"
        in: "path"
        required: true
        type: "integer"
        x-exportParamName: "DeviceId"
      - name: "networkId"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "NetworkId"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "201":
          description: "Success"
          schema:
            $ref: "#/definitions/NetworkTask-dump"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
  /vps/{deviceId}/reset-password:
    post:
      tags:
      - "VPS"
      summary: "Request token to reset root password for VPS"
      operationId: "post_vps_reset_password_resource"
      parameters:
      - name: "deviceId"
        in: "path"
        description: "Device ID of VPS instance"
        required: true
        type: "integer"
        x-exportParamName: "DeviceId"
      responses:
        "404":
          description: "Device not found."
        "200":
          description: "Password reset initiated successfully."
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
    put:
      tags:
      - "VPS"
      summary: "Reset VPS root password, requires vps to be powered off"
      operationId: "put_vps_reset_password_resource"
      parameters:
      - name: "deviceId"
        in: "path"
        description: "Device ID of VPS instance"
        required: true
        type: "integer"
        x-exportParamName: "DeviceId"
      - in: "body"
        name: "payload"
        required: true
        schema:
          $ref: "#/definitions/VPSResetRootPassword"
        x-exportParamName: "Payload"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "201":
          description: "Success"
          schema:
            $ref: "#/definitions/NetworkTask-dump"
        "400":
          description: "Device is not in a state to reset root password."
        "404":
          description: "Device not found."
        "200":
          description: "Root password reset successfully"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
  /vps/{deviceId}/secondaryIp:
    get:
      tags:
      - "VPS"
      summary: "Get all Secondary IP Addresses attached to VPS instance"
      operationId: "get_vps_secondary_ip_add_resource"
      parameters:
      - name: "deviceId"
        in: "path"
        required: true
        type: "integer"
        x-exportParamName: "DeviceId"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Success"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/IPAssignment"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
    post:
      tags:
      - "VPS"
      summary: "Add a Secondary IP Address to VPS instance"
      operationId: "post_vps_secondary_ip_add_resource"
      parameters:
      - name: "deviceId"
        in: "path"
        required: true
        type: "integer"
        x-exportParamName: "DeviceId"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "201":
          description: "Success"
          schema:
            $ref: "#/definitions/NetworkTask-dump"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
  /vps/{deviceId}/secondaryIp/{ipAssignmentId}:
    delete:
      tags:
      - "VPS"
      summary: "Remove a Secondary IP Address from VPS instance"
      operationId: "delete_vps_secondary_ip_remove_resource"
      parameters:
      - name: "deviceId"
        in: "path"
        required: true
        type: "integer"
        x-exportParamName: "DeviceId"
      - name: "ipAssignmentId"
        in: "path"
        required: true
        type: "integer"
        x-exportParamName: "IpAssignmentId"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "201":
          description: "Success"
          schema:
            $ref: "#/definitions/NetworkTask-dump"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
  /vps/{deviceId}/volume/{volumeId}/attach:
    post:
      tags:
      - "VPS"
      summary: "Attach Volume to VPS instance"
      operationId: "post_vps_attach_volume_resource"
      parameters:
      - name: "volumeId"
        in: "path"
        description: "Volume ID to attach"
        required: true
        type: "string"
        x-exportParamName: "VolumeId"
      - name: "deviceId"
        in: "path"
        description: "Device ID of VPS instance"
        required: true
        type: "integer"
        x-exportParamName: "DeviceId"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "201":
          description: "Success"
          schema:
            $ref: "#/definitions/NetworkTask-dump"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
  /vps/{deviceId}/volume/{volumeId}/detach:
    post:
      tags:
      - "VPS"
      summary: "Detach Volume from VPS instance"
      operationId: "post_vps_detach_volume_resource"
      parameters:
      - name: "volumeId"
        in: "path"
        description: "Volume ID to detach"
        required: true
        type: "string"
        x-exportParamName: "VolumeId"
      - name: "deviceId"
        in: "path"
        description: "Device ID of VPS instance"
        required: true
        type: "integer"
        x-exportParamName: "DeviceId"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "201":
          description: "Success"
          schema:
            $ref: "#/definitions/NetworkTask-dump"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
  /webhooks/:
    get:
      tags:
      - "Webhook"
      summary: "Returns your active Webhooks"
      operationId: "get_webhook_resource"
      parameters:
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Success"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Webhook"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
    post:
      tags:
      - "Webhook"
      summary: "Create a new Webhook for a Webhook Event"
      operationId: "post_webhook_resource"
      parameters:
      - in: "body"
        name: "payload"
        required: true
        schema:
          $ref: "#/definitions/WebhookCreate"
        x-exportParamName: "Payload"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Webhook was created."
          schema:
            $ref: "#/definitions/Webhook"
        "400":
          description: "Unable to create Webhook."
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
  /webhooks/events:
    get:
      tags:
      - "Webhook"
      summary: "Returns all available Webhook Events"
      operationId: "get_webhook_event_resource"
      parameters:
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Success"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/WebhookEvent"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
  /webhooks/trigger:
    post:
      tags:
      - "Webhook"
      summary: "Queues a webhook for the event script action that was triggered"
      operationId: "post_event_script_action_trigger_resource"
      parameters:
      - name: "webhookName"
        in: "query"
        description: "The name of the webhook to trigger."
        required: false
        type: "string"
        x-exportParamName: "WebhookName"
        x-optionalDataType: "String"
      responses:
        "202":
          description: "Accepted."
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
  /webhooks/{webhookId}:
    get:
      tags:
      - "Webhook"
      summary: "Returns detailed information for a Single Webhook"
      operationId: "get_webhook_id_resource"
      parameters:
      - name: "webhookId"
        in: "path"
        description: "ID of Webhook to View / Update"
        required: true
        type: "integer"
        x-exportParamName: "WebhookId"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/Webhook"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
    put:
      tags:
      - "Webhook"
      summary: "Updates a Single Webhook"
      operationId: "put_webhook_id_resource"
      parameters:
      - name: "webhookId"
        in: "path"
        description: "ID of Webhook to View / Update"
        required: true
        type: "integer"
        x-exportParamName: "WebhookId"
      - in: "body"
        name: "payload"
        required: true
        schema:
          $ref: "#/definitions/WebhookUpdate"
        x-exportParamName: "Payload"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Webhook was updated."
          schema:
            $ref: "#/definitions/Webhook"
        "400":
          description: "Unable to update Webhook."
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
    delete:
      tags:
      - "Webhook"
      summary: "Deletes a single webhook"
      operationId: "delete_webhook_id_resource"
      parameters:
      - name: "webhookId"
        in: "path"
        description: "ID of Webhook to View / Update"
        required: true
        type: "integer"
        x-exportParamName: "WebhookId"
      responses:
        "204":
          description: "Webhook was deleted."
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
securityDefinitions:
  apiKey:
    type: "apiKey"
    name: "X-API-KEY"
    in: "header"
definitions:
  CreateEnterpriseControlledClient:
    type: "object"
    required:
    - "company"
    - "email"
    properties:
      email:
        type: "string"
        description: "The email to be associated with the client account"
      company:
        type: "string"
        description: "The company to be asociated with the client account"
      password:
        type: "string"
        description: "The client account password to be used"
    example:
      password: "password"
      company: "company"
      email: "email"
  DeactivateEnterpriseControlledClient:
    type: "object"
    required:
    - "clientId"
    properties:
      clientId:
        type: "integer"
        description: "ID of the controlled client account"
    example:
      clientId: 0
  ControlledClient-dump:
    type: "object"
    properties:
      phone:
        type: "string"
        description: "The phone number associated with the account"
      first:
        type: "string"
        description: "The first name associated with the account"
      id:
        type: "integer"
        description: "The ID of the client/contact account"
      fax:
        type: "string"
        description: "The fax number associated with the account"
      country:
        type: "string"
        description: "The country associated with the account"
      zip:
        type: "string"
        description: "The zip/postal code associated with the account"
      address:
        type: "string"
        description: "The street address associated with the account"
      active:
        type: "boolean"
      city:
        type: "string"
        description: "The city associated with the account"
      email:
        type: "string"
        description: "The email address associated with the account"
      company:
        type: "string"
        description: "The company name associated with the account"
      last:
        type: "string"
        description: "The last name associated with the account"
      state:
        type: "string"
        description: "The state associated with the account"
      created:
        type: "integer"
        description: "The date/time the account was created"
    example:
      zip: "zip"
      country: "country"
      address: "address"
      last: "last"
      city: "city"
      created: 6
      active: true
      phone: "phone"
      company: "company"
      id: 0
      state: "state"
      fax: "fax"
      first: "first"
      email: "email"
  ClientCreate-dump:
    type: "object"
    properties:
      phone:
        type: "string"
        description: "The phone number associated with the account"
      first:
        type: "string"
        description: "The first name associated with the account"
      id:
        type: "integer"
        description: "The ID of the client/contact account"
      fax:
        type: "string"
        description: "The fax number associated with the account"
      country:
        type: "string"
        description: "The country associated with the account"
      zip:
        type: "string"
        description: "The zip/postal code associated with the account"
      password:
        type: "string"
      address:
        type: "string"
        description: "The street address associated with the account"
      active:
        type: "boolean"
      city:
        type: "string"
        description: "The city associated with the account"
      email:
        type: "string"
        description: "The email address associated with the account"
      company:
        type: "string"
        description: "The company name associated with the account"
      last:
        type: "string"
        description: "The last name associated with the account"
      state:
        type: "string"
        description: "The state associated with the account"
      created:
        type: "integer"
        description: "The date/time the account was created"
    example:
      zip: "zip"
      country: "country"
      address: "address"
      last: "last"
      city: "city"
      created: 6
      active: true
      password: "password"
      phone: "phone"
      company: "company"
      id: 0
      state: "state"
      fax: "fax"
      first: "first"
      email: "email"
  Bandwidth:
    type: "object"
    properties:
      metadata:
        type: "object"
        description: "Returns metadata about the query including the 95th percentile\
          \ values of the returned data, legend for returned data arrays, and query\
          \ args passed to the query."
        properties: {}
      bandwidthData:
        type: "array"
        description: "Returns an array where each item contains a dictionary of data\
          \ and an identifier for each requested interface. The data itself is an\
          \ array of arrays where each item is the measurementat the requested `step`\
          \ and the index of each integer value corresponds with the legend returned\
          \ in the `metadata`."
        items:
          type: "array"
          items:
            type: "number"
      interface:
        type: "string"
        description: "The interface(s) displayed in the image."
      switchId:
        type: "string"
        description: "The unique ID of the switch where bandwidth data is measured."
    example:
      metadata: "{}"
      switchId: "switchId"
      bandwidthData:
      - - 0.80082819046101150206595775671303272247314453125
        - 0.80082819046101150206595775671303272247314453125
      - - 0.80082819046101150206595775671303272247314453125
        - 0.80082819046101150206595775671303272247314453125
      interface: "interface"
  BandwidthImage:
    type: "object"
    properties:
      graphImage:
        type: "string"
        description: "A PNG image of bandwidth usage."
      interface:
        type: "string"
        description: "The interface(s) displayed in the image."
      switchId:
        type: "string"
        description: "The unique ID of the switch where bandwidth data is measured."
    example:
      switchId: "switchId"
      graphImage: "graphImage"
      interface: "interface"
  BareMetalDeviceCreate:
    type: "object"
    required:
    - "hostname"
    - "locationName"
    - "osName"
    - "productId"
    properties:
      period:
        type: "string"
        example: "hourly"
        description: "hourly|monthly|quarterly|semi-annually|annually|biennial|triennial"
        default: "hourly"
      productId:
        type: "integer"
        description: "The unique ID of the desired product to provision."
      customIPXEScriptURL:
        type: "string"
        description: "URL to download custom iPXE script if not supplying script in\
          \ entirety"
      publicSshKeyId:
        type: "integer"
      hostname:
        type: "string"
        description: "A FQDN for the device. For example: `example.hivelocity.net`"
      customIPXEScriptContents:
        type: "string"
        description: "Contents of iPXE script if not supplying URL"
      vlanId:
        type: "integer"
      ignitionId:
        type: "integer"
        description: "The unique ID of an Ignition File for FlatcarOS provisions."
      bondingSupport:
        type: "boolean"
        description: "If true, ensures the provisioned device supports port bonding.\
          \ If false, ensures no bonding support."
      script:
        type: "string"
        description: "A Cloud-Init script or a post-install script (Bash for Linux\
          \ or Powershell for Windows)."
      tags:
        type: "array"
        example: []
        description: "User specified values."
        items:
          type: "string"
      osName:
        type: "string"
        description: "The name of the Operating System to provision on this device.\
          \ Must match name of an operating system product option."
      locationName:
        type: "string"
        description: "A facility code. For example `NYC1`."
      forceDeviceId:
        type: "integer"
        description: "For users with reserved devices. The unique ID of the target\
          \ device to provision."
    example:
      period: "hourly"
      locationName: "locationName"
      productId: 0
      vlanId: 1
      customIPXEScriptContents: "customIPXEScriptContents"
      osName: "osName"
      forceDeviceId: 5
      ignitionId: 5
      script: "script"
      publicSshKeyId: 6
      tags: []
      hostname: "hostname"
      customIPXEScriptURL: "customIPXEScriptURL"
      bondingSupport: true
  BareMetalDevice:
    type: "object"
    properties:
      orderId:
        type: "integer"
        description: "The unique ID of the order for this device."
      period:
        type: "string"
        example: "hourly"
        description: "This device's service's billing period."
      productId:
        type: "integer"
        description: "The unique ID of the product associated with this device."
      customIPXEScriptURL:
        type: "string"
        description: "URL of custom iPXE script used to provision device"
      publicSshKeyId:
        type: "integer"
      hostname:
        type: "string"
        description: "The user specified hostname for the device. Note: If the hostname\
          \ is changed in the portal or on the device itself this value may not reflect\
          \ the actual hostname on the device."
      primaryIp:
        type: "string"
        description: "The first assigned public IP for accessing this device."
      customIPXEScriptContents:
        type: "string"
        description: "Contents of custom iPXE used to provision device"
      vlanId:
        type: "integer"
      script:
        type: "string"
        description: "The post-install/cloud-init script used during this device's\
          \ last provisioning."
      serviceId:
        type: "integer"
        description: "The unique ID of the service associated with this device."
      tags:
        type: "array"
        description: "User specified values."
        items:
          type: "string"
      productName:
        type: "string"
        description: "The name of the product associated with this device."
      powerStatus:
        type: "string"
        description: "ON|OFF"
      osName:
        type: "string"
        description: "The name of the operating system currently installed on this\
          \ device. Note: If you manually reload your own OS over IPMI this value\
          \ may not reflect the OS currently on your device."
      locationName:
        type: "string"
        description: "A facility code. For example `NYC1`."
      deviceId:
        type: "integer"
        description: "The unique ID of the device."
    example:
      period: "hourly"
      locationName: "locationName"
      productId: 6
      orderId: 0
      vlanId: 5
      customIPXEScriptContents: "customIPXEScriptContents"
      osName: "osName"
      deviceId: 2
      script: "script"
      productName: "productName"
      publicSshKeyId: 1
      tags:
      - "tags"
      - "tags"
      hostname: "hostname"
      powerStatus: "powerStatus"
      customIPXEScriptURL: "customIPXEScriptURL"
      primaryIp: "primaryIp"
      serviceId: 5
  BareMetalDeviceUpdate:
    type: "object"
    required:
    - "hostname"
    - "osName"
    properties:
      customIPXEScriptContents:
        type: "string"
        description: "Contents of iPXE script if not specifying URL. If both script\
          \ URL and contents are not specified, the last iPXE script contents are\
          \ used if OS selection requires an iPXE script."
      customIPXEScriptURL:
        type: "string"
        description: "URL to download custom iPXE script if not specifying contents\
          \ in entirety. If both script URL and contents are not specified, the last\
          \ iPXE script contents are used if OS selection requires an  iPXE script."
      publicSshKeyId:
        type: "integer"
      hostname:
        type: "string"
        description: "A FQDN for the device. For example: `example.hivelocity.net`"
      ignitionId:
        type: "integer"
        description: "The unique ID of an Ignition File for FlatcarOS provisions."
      script:
        type: "string"
        description: "A Cloud-Init script or a post-install script (Bash for Linux\
          \ or Powershell for Windows)."
      tags:
        type: "array"
        items:
          type: "string"
      osName:
        type: "string"
        description: "The name of the Operating System to provision on this device.\
          \ Must match name of an operating system product option."
      forceReload:
        type: "boolean"
        example: false
        description: "Whether to force a reload even if fields have not changed"
        default: false
    example:
      hostname: "hostname"
      customIPXEScriptURL: "customIPXEScriptURL"
      customIPXEScriptContents: "customIPXEScriptContents"
      osName: "osName"
      ignitionId: 6
      forceReload: false
      script: "script"
      publicSshKeyId: 0
      tags:
      - "tags"
      - "tags"
  BareMetalDeviceBatchCreate:
    type: "object"
    properties:
      devices:
        type: "array"
        description: "List of devices to provision."
        items:
          $ref: "#/definitions/BareMetalDeviceCreate"
      orderGroupId:
        type: "integer"
        description: "Unique ID to identify the group order."
    example:
      devices:
      - period: "hourly"
        locationName: "locationName"
        productId: 0
        vlanId: 1
        customIPXEScriptContents: "customIPXEScriptContents"
        osName: "osName"
        forceDeviceId: 5
        ignitionId: 5
        script: "script"
        publicSshKeyId: 6
        tags: []
        hostname: "hostname"
        customIPXEScriptURL: "customIPXEScriptURL"
        bondingSupport: true
      - period: "hourly"
        locationName: "locationName"
        productId: 0
        vlanId: 1
        customIPXEScriptContents: "customIPXEScriptContents"
        osName: "osName"
        forceDeviceId: 5
        ignitionId: 5
        script: "script"
        publicSshKeyId: 6
        tags: []
        hostname: "hostname"
        customIPXEScriptURL: "customIPXEScriptURL"
        bondingSupport: true
      orderGroupId: 0
  BareMetalDeviceBatch:
    type: "object"
    properties:
      devices:
        type: "array"
        description: "List of provisioned devices."
        items:
          $ref: "#/definitions/BareMetalDevice"
      orderGroupId:
        type: "integer"
        description: "Unique ID of the group order."
    example:
      devices:
      - period: "hourly"
        locationName: "locationName"
        productId: 6
        orderId: 0
        vlanId: 5
        customIPXEScriptContents: "customIPXEScriptContents"
        osName: "osName"
        deviceId: 2
        script: "script"
        productName: "productName"
        publicSshKeyId: 1
        tags:
        - "tags"
        - "tags"
        hostname: "hostname"
        powerStatus: "powerStatus"
        customIPXEScriptURL: "customIPXEScriptURL"
        primaryIp: "primaryIp"
        serviceId: 5
      - period: "hourly"
        locationName: "locationName"
        productId: 6
        orderId: 0
        vlanId: 5
        customIPXEScriptContents: "customIPXEScriptContents"
        osName: "osName"
        deviceId: 2
        script: "script"
        productName: "productName"
        publicSshKeyId: 1
        tags:
        - "tags"
        - "tags"
        hostname: "hostname"
        powerStatus: "powerStatus"
        customIPXEScriptURL: "customIPXEScriptURL"
        primaryIp: "primaryIp"
        serviceId: 5
      orderGroupId: 0
  BillingInfoVerification:
    type: "object"
    required:
    - "id"
    properties:
      id:
        type: "integer"
        description: "The unique Billing ID used to associate Billing Info"
      verificationAmount:
        type: "number"
        description: "The verification amount posted to the financial institution\
          \ associated with the billing ID"
      provisionOrderId:
        type: "integer"
        description: "The order ID associated with this billing ID"
    example:
      provisionOrderId: 1
      verificationAmount: 6.02745618307040320615897144307382404804229736328125
      id: 0
  BillingInfo:
    type: "object"
    properties:
      phone:
        type: "string"
        description: "The phone number associated with the billing ID"
      first:
        type: "string"
        description: "The first name of the individual associated with the billing\
          \ ID"
      id:
        type: "integer"
        description: "The unique Billing ID used to associate Billing Info"
      status:
        type: "integer"
        description: "The active status associated with the billing ID (0/1)"
      ccNum:
        type: "string"
        description: "The credit card account number"
      country:
        type: "string"
        description: "The country associated with the billing ID"
      zip:
        type: "string"
        description: "The zip/postal code associated with the billing ID"
      pendingVerification:
        type: "boolean"
        description: "Yes or No for the Pending Verification status"
      address:
        type: "string"
        description: "The street address associated with the billing ID"
      ccExpire:
        type: "string"
        description: "The expiration date for the credit card"
      city:
        type: "string"
        description: "The city associated with the billing ID in question"
      company:
        type: "string"
        description: "The company name associated with the billing ID"
      achAccount:
        type: "string"
        description: "The bank account number"
      achType:
        type: "string"
        description: "The bank account type (Checking or Savings)"
      last:
        type: "string"
        description: "The last name of the individual associated with the billing\
          \ ID"
      state:
        type: "string"
        description: "The state associated with the billing ID"
      default:
        type: "boolean"
        description: "True if this is the default payment method for future orders"
      achAba:
        type: "string"
        description: "The bank routing number"
      paymentType:
        type: "string"
        description: "The type of payment associated with the billing ID ie: CC, ACH\
          \ etc"
      ccType:
        type: "string"
        description: "The credit card network associated with the billing ID"
      achBank:
        type: "string"
        description: "The name of the bank associated with the billing ID"
      email:
        type: "string"
        description: "The email address associated with the billing ID"
      clientId:
        type: "integer"
        description: "The identification number for the client associated with the\
          \ Billing info ID"
      isCCVerified:
        type: "boolean"
        description: "The verification status of the Credit Card in question"
    example:
      zip: "zip"
      country: "country"
      address: "address"
      clientId: 1
      last: "last"
      city: "city"
      ccNum: "ccNum"
      achBank: "achBank"
      isCCVerified: true
      achType: "achType"
      paymentType: "paymentType"
      ccType: "ccType"
      default: true
      achAba: "achAba"
      ccExpire: "ccExpire"
      phone: "phone"
      achAccount: "achAccount"
      pendingVerification: true
      company: "company"
      id: 0
      state: "state"
      first: "first"
      email: "email"
      status: 6
  Credit:
    type: "object"
    properties:
      id:
        type: "integer"
        description: "The ID corresponding to a particular credit"
      amount:
        type: "number"
        description: "The amount of credit associated with the credit ID"
      balance:
        type: "number"
        description: "The amount of credit available for use associated with the credit\
          \ ID"
      clientId:
        type: "integer"
        description: "The client ID associated with the credit ID"
      created:
        type: "integer"
        description: "The created date/time of the credit"
      orderId:
        type: "integer"
        description: "The order ID associated with the credit ID"
      reason:
        type: "string"
        description: "The reason code for the creation of the credit"
      status:
        type: "string"
        description: "The status of the credit"
      isHourly:
        type: "boolean"
        description: "If credit is for hourly billing"
      billingInfoId:
        type: "integer"
        description: "The Billing Info ID used to purchase the credits on this account"
    example:
      reason: "reason"
      amount: 6.02745618307040320615897144307382404804229736328125
      clientId: 5
      isHourly: true
      balance: 1.46581298050294517310021547018550336360931396484375
      orderId: 2
      billingInfoId: 7
      created: 5
      id: 0
      status: "status"
  BillingInfoCreateCreditCard:
    type: "object"
    required:
    - "address"
    - "ccCvv2"
    - "ccExpireMonth"
    - "ccExpireYear"
    - "ccNum"
    - "ccType"
    - "city"
    - "country"
    - "email"
    - "first"
    - "last"
    - "phone"
    - "state"
    - "zip"
    properties:
      phone:
        type: "string"
        description: "The phone number associated with the billing ID"
      first:
        type: "string"
        description: "The first name of the individual associated with the billing\
          \ ID"
      ccExpireYear:
        type: "string"
        description: "The expiration year for the credit card with 2 digits"
      ccCvv2:
        type: "string"
        description: "The credit card verification number"
      defaultAllServices:
        type: "boolean"
        description: "Make this the default payment method for all services in the\
          \ client's account"
        default: false
      city:
        type: "string"
        description: "The city associated with the billing ID in question"
      email:
        type: "string"
        description: "The email address associated with the billing ID"
      ccExpireMonth:
        type: "string"
        description: "The expiration month for the credit card"
      company:
        type: "string"
        description: "The company name associated with the billing ID"
      clientId:
        type: "integer"
        description: "The identification number for the client associated with the\
          \ Billing Info ID"
      ccNum:
        type: "string"
        description: "The credit card account number"
      country:
        type: "string"
        description: "The 2 digit country code associated with the billing ID"
      zip:
        type: "string"
        description: "The zip/postal code associated with the billing ID"
      ccType:
        type: "string"
        description: "The credit card network associated with the billing ID: `visa`,\
          \ `mastercard`, `discover`, `amex`, etc."
      last:
        type: "string"
        description: "The last name of the individual associated with the billing\
          \ ID"
      setDefault:
        type: "boolean"
        description: "Make this the default payment method for future orders"
        default: false
      address:
        type: "string"
        description: "The street address associated with the billing ID"
      state:
        type: "string"
        description: "The state associated with the billing ID"
    example:
      zip: "zip"
      country: "country"
      clientId: 0
      address: "address"
      last: "last"
      city: "city"
      ccNum: "ccNum"
      ccExpireYear: "ccExpireYear"
      ccCvv2: "ccCvv2"
      ccExpireMonth: "ccExpireMonth"
      setDefault: false
      ccType: "ccType"
      phone: "phone"
      company: "company"
      state: "state"
      first: "first"
      defaultAllServices: false
      email: "email"
  BillingInfoCreateBankAccount:
    type: "object"
    required:
    - "achAba"
    - "achAccount"
    - "achBank"
    - "achType"
    - "address"
    - "city"
    - "country"
    - "email"
    - "first"
    - "last"
    - "phone"
    - "state"
    - "zip"
    properties:
      phone:
        type: "string"
        description: "The phone number associated with the billing ID"
      first:
        type: "string"
        description: "The first name of the individual associated with the billing\
          \ ID"
      achBank:
        type: "string"
        description: "The name of the bank associated with the billing ID"
      achAba:
        type: "string"
        description: "The bank routing number"
      defaultAllServices:
        type: "boolean"
        description: "Make this the default payment method for all services in the\
          \ client's account"
        default: false
      city:
        type: "string"
        description: "The city associated with the billing ID in question"
      email:
        type: "string"
        description: "The email address associated with the billing ID"
      company:
        type: "string"
        description: "The company name associated with the billing ID"
      clientId:
        type: "integer"
        description: "The identification number for the client associated with the\
          \ Billing Info ID"
      country:
        type: "string"
        description: "The 2 digit country code associated with the billing ID"
      zip:
        type: "string"
        description: "The zip/postal code associated with the billing ID"
      achAccount:
        type: "string"
        description: "The bank account number"
      achType:
        type: "string"
        description: "The bank account type (`C` for Checking or `S` for Savings)"
      last:
        type: "string"
        description: "The last name of the individual associated with the billing\
          \ ID"
      setDefault:
        type: "boolean"
        description: "Make this the default payment method for future orders"
        default: false
      address:
        type: "string"
        description: "The street address associated with the billing ID"
      state:
        type: "string"
        description: "The state associated with the billing ID"
    example:
      zip: "zip"
      country: "country"
      clientId: 0
      address: "address"
      last: "last"
      city: "city"
      achBank: "achBank"
      achType: "achType"
      setDefault: false
      achAba: "achAba"
      phone: "phone"
      achAccount: "achAccount"
      company: "company"
      state: "state"
      first: "first"
      defaultAllServices: false
      email: "email"
  PaymentMethodsEnabled:
    type: "object"
    required:
    - "achEnabled"
    - "ccEnabled"
    - "clientId"
    properties:
      ccEnabled:
        type: "boolean"
        description: "Credit Card Enabled"
      clientId:
        type: "integer"
        description: "Client ID"
      achEnabled:
        type: "boolean"
        description: "ACH Enabled"
    example:
      ccEnabled: true
      clientId: 0
      achEnabled: true
  CancellationCreate:
    type: "object"
    required:
    - "deviceId"
    - "reason"
    - "serviceId"
    properties:
      reason:
        type: "string"
        description: "My current service is being upgraded|Hardware/software/network\
          \ or power issues|I think I have found a better deal|I have experienced\
          \ tech support problems|I am consolidating my Hivelocity accounts|I am a\
          \ reseller and my customer cancelled|I am moving to a different technology\
          \ solution: Public Cloud|I am moving to a different technology solution:\
          \ Managed Hosting Company|A product difference (Example: AWS)"
      deviceId:
        type: "integer"
        description: "Unique ID of a device. Must be related to `service_id`."
      serviceId:
        type: "integer"
        description: "Unique ID of a service. Must be related to `device_id`."
      comments:
        type: "string"
        description: "Details why the device is being cancelled"
    example:
      reason: "reason"
      comments: "comments"
      serviceId: 6
      deviceId: 0
  Cancellation:
    type: "object"
    properties:
      salesRepId:
        type: "integer"
        description: "Sales Rep ID."
      id:
        type: "integer"
        description: "Unique ID of the cancellation request."
      comments:
        type: "string"
        description: "Details why the device is being cancelled"
      startDate:
        type: "string"
        format: "date-time"
        description: "Date of cancel request submission."
      couponType:
        type: "string"
        description: "Type of the coupon."
      reason:
        type: "string"
        description: "Reason"
      deletedAt:
        type: "string"
        format: "date-time"
        description: "Date of cancellation completion."
      couponValue:
        type: "integer"
        description: "Value of the coupon."
      couponCode:
        type: "string"
        description: "Code of the coupon."
      cancelled:
        type: "boolean"
        description: "True if cancel completed."
      requestDate:
        type: "string"
        format: "date-time"
        description: "The requested cancellation date, if specified."
      couponName:
        type: "string"
        description: "Name of the coupon used."
      monthlyPayment:
        type: "integer"
        description: "The monthly cost of the cancelled device."
      planId:
        type: "integer"
        description: "Deprecated."
      name:
        type: "string"
        description: "Name of user who submitted the request"
      cancelDate:
        type: "string"
        format: "date-time"
        description: "Date of cancellation."
      clientId:
        type: "integer"
        description: "Unique ID of a client."
      activeMonths:
        type: "integer"
        description: "The number of months the target device has been active."
      deviceId:
        type: "integer"
        description: "Unique ID of a device."
      serviceId:
        type: "integer"
        description: "Unique ID of a service."
    example:
      reason: "reason"
      couponName: "couponName"
      cancelDate: "2000-01-23T04:56:07.000+00:00"
      comments: "comments"
      clientId: 2
      deviceId: 9
      couponValue: 1
      deletedAt: "2000-01-23T04:56:07.000+00:00"
      monthlyPayment: 5
      couponType: "couponType"
      activeMonths: 7
      requestDate: "2000-01-23T04:56:07.000+00:00"
      name: "name"
      cancelled: true
      planId: 5
      id: 6
      salesRepId: 0
      serviceId: 3
      couponCode: "couponCode"
      startDate: "2000-01-23T04:56:07.000+00:00"
  ContactCreate:
    type: "object"
    required:
    - "active"
    - "email"
    - "fullName"
    properties:
      phone:
        type: "string"
      active:
        type: "integer"
      email:
        type: "string"
      password:
        type: "string"
        default: "b43832c09fef1c010a8cf335f7ee4f10"
      fullName:
        type: "string"
      description:
        type: "string"
    example:
      password: "b43832c09fef1c010a8cf335f7ee4f10"
      phone: "phone"
      active: 0
      fullName: "fullName"
      description: "description"
      email: "email"
  Contact-dump:
    type: "object"
    required:
    - "active"
    - "email"
    - "fullName"
    properties:
      phone:
        type: "string"
      active:
        type: "integer"
      email:
        type: "string"
      isClient:
        type: "boolean"
      contactId:
        type: "integer"
      clientId:
        type: "integer"
      referralCode:
        type: "string"
      fullName:
        type: "string"
      description:
        type: "string"
    example:
      clientId: 1
      phone: "phone"
      contactId: 6
      referralCode: "referralCode"
      active: 0
      fullName: "fullName"
      description: "description"
      isClient: true
      email: "email"
  ContactUpdate:
    type: "object"
    properties:
      phone:
        type: "string"
      active:
        type: "integer"
      email:
        type: "string"
      fullName:
        type: "string"
      description:
        type: "string"
    example:
      phone: "phone"
      active: 0
      fullName: "fullName"
      description: "description"
      email: "email"
  Password:
    type: "object"
    required:
    - "newPassword"
    - "password"
    properties:
      password:
        type: "string"
      newPassword:
        type: "string"
    example:
      password: "password"
      newPassword: "newPassword"
  PasswordRequest:
    type: "object"
    required:
    - "email"
    properties:
      email:
        type: "string"
    example:
      email: "email"
  PasswordResponse:
    type: "object"
    required:
    - "password"
    - "token"
    properties:
      password:
        type: "string"
      token:
        type: "string"
    example:
      password: "password"
      token: "token"
  CreateCredit:
    type: "object"
    properties:
      billingInfoId:
        type: "integer"
        description: "The Billing Info ID used to purchase the credits on this account"
      amount:
        type: "number"
        description: "The amount of credit associated with the credit ID"
    example:
      amount: 6.02745618307040320615897144307382404804229736328125
      billingInfoId: 0
  TotalActiveCredit:
    type: "object"
    properties:
      totalActive:
        type: "number"
        description: "The total active amount of credit available on the client account"
      autoApply:
        type: "boolean"
        description: "Whether credits are automatically being applied to new orders"
      hasCreditPendingOrder:
        type: "boolean"
        description: "If a client has an incomplete order that is using credit, the\
          \ \"total active\" will remain at 0 until the order is completed."
    example:
      autoApply: true
      hasCreditPendingOrder: true
      totalActive: 0.80082819046101150206595775671303272247314453125
  CartCoupon:
    type: "object"
    required:
    - "code"
    properties:
      code:
        type: "string"
        description: "Coupon code"
    example:
      code: "code"
  ValidateCartCoupon-dump:
    type: "object"
    required:
    - "couponCode"
    properties:
      coupon:
        $ref: "#/definitions/ValidateCartCoupondump_coupon"
      isValid:
        type: "boolean"
        description: "Whether the coupon is valid."
      clientId:
        type: "integer"
        description: "The unique client account ID."
      error:
        type: "string"
        description: "Error message if coupon is invalid."
      couponCode:
        type: "string"
        description: "The coupon code to validate."
    example:
      clientId: 0
      coupon: {}
      isValid: true
      error: "error"
      couponCode: "couponCode"
  CartCoupon-dump:
    type: "object"
    required:
    - "allowOtherDiscounts"
    - "code"
    - "customerEligibility"
    - "expireType"
    - "hasEndDate"
    - "name"
    - "start"
    - "type"
    - "value"
    properties:
      id:
        type: "integer"
      userLoginRequired:
        type: "object"
        properties: {}
      usageTypeLimit:
        type: "array"
        example: []
        description: "Coupon usage type limit max_total|one_per_user|one_per_user_in_24_hours"
        items:
          type: "string"
      value:
        type: "number"
        description: "Coupon value"
      end:
        type: "string"
        format: "date"
        description: "Coupon end date"
      hasEndDate:
        type: "boolean"
        example: true
        description: "Set end date"
      code:
        type: "string"
        description: "Coupon code"
      active:
        type: "boolean"
        example: false
        description: "Coupon active"
      start:
        type: "string"
        format: "date"
        description: "Coupon start date"
      usageStatistics:
        $ref: "#/definitions/CartCouponUsageStatistics-dump"
      canApplyCreditToCart:
        type: "boolean"
        example: false
        description: "Can apply credit to cart"
      accountApplicableCredit:
        type: "boolean"
        example: false
        description: "Account applicable credit"
      productIds:
        type: "array"
        example: []
        description: "Products ids the coupon will be available"
        items:
          type: "integer"
      expireValue:
        type: "integer"
        example: 0
        description: "Coupon expire value"
      serviceEligibility:
        type: "string"
        example: "none"
        description: "Coupon service eligibility none|all"
      created:
        type: "string"
        format: "date-time"
      expireType:
        type: "string"
        example: "first_billing_period"
        description: "Coupon expire type first_billing_period|number_of_days|never_expire"
      clientIds:
        type: "array"
        example: []
        description: "Clients ids the coupon will be available"
        items:
          type: "integer"
      type:
        type: "string"
        example: "%"
        description: "Coupon type %|$|credit"
      maxUsageLimit:
        type: "integer"
        example: 0
        description: "Coupon max uses"
      customerEligibilityRules:
        type: "array"
        example: []
        description: "Eligible client rules to use this coupon block_enterprise_client|block_reseller|block_partner|has_no_purchase|has_one_purchase|has_multiple_purchase|account_created_recently"
        items:
          type: "string"
      name:
        type: "string"
        description: "Coupon name"
      customerEligibility:
        type: "string"
        example: "all"
        description: "Coupon customer eligibility all|rules|specific"
      maximumPurchaseAmount:
        type: "number"
        example: 0.0
        description: "Maximum purchase requirement max"
      maxUseSameCart:
        type: "integer"
        example: 0
        description: "Max use same cart"
      minimumPurchaseAmount:
        type: "number"
        example: 0.0
        description: "Minimum purchase requirement"
      maxUseSameCartUseType:
        type: "string"
        example: "first_item"
        description: "Coupon max use same cart use type first_item|highest_price"
      allowOtherDiscounts:
        type: "boolean"
        example: false
        description: "Allow other discounts"
  CartCouponUsageStatistics-dump:
    type: "object"
    properties:
      totalAccountCredits:
        type: "integer"
        description: "Total of the coupon applied to accounts"
      totalAbandonedCarts:
        type: "integer"
        description: "Coupon total abandoned carts"
      totalRemaining:
        type: "integer"
        description: "Coupon total remaining"
      totalUses:
        type: "integer"
        description: "Coupon total uses"
      totalCompletedCarts:
        type: "integer"
        description: "Total of completed carts with coupon"
      totalServices:
        type: "integer"
        description: "Total of the coupon applied to existing services"
      totalCarts:
        type: "integer"
        description: "Total of carts with coupon"
  Device-dump:
    type: "object"
    required:
    - "name"
    properties:
      deviceId:
        type: "integer"
        description: "The unique ID of the device."
      name:
        type: "string"
        description: "User given custom name."
      status:
        type: "string"
        description: "active|inactive"
      deviceType:
        type: "string"
        description: "Generic description of device. Usually type and rack unit size."
      deviceTypeGroup:
        type: "string"
        description: "Generic group"
      powerStatus:
        type: "object"
        description: "ON|OFF"
        properties: {}
      hasCancellation:
        type: "boolean"
        description: "True if device has active cancellation request."
      billingStatus:
        type: "string"
        description: "Device's service billing status."
      billingCancelDate:
        type: "integer"
        description: "Device's service expected cancel date."
      isManaged:
        type: "boolean"
        description: "True if device enrolled in managed services."
      isReload:
        type: "boolean"
        description: "True if device currently reloading."
      monitorsUp:
        type: "integer"
        description: "# of passing device monitors"
      monitorsTotal:
        type: "integer"
        description: "Total # device monitors"
      managedAlertsTotal:
        type: "integer"
        description: "# of managed service alerts."
      ports:
        type: "array"
        description: "Device Ports (Network Interfaces)."
        items:
          type: "object"
          properties: {}
      hostname:
        type: "string"
        description: "a fqdn for the device. for example: `example.hivelocity.net`."
      ipmiEnabled:
        type: "boolean"
        description: "True if device is accessible over IPMI by customer."
      displayedTags:
        type: "array"
        description: "List containing key/values of device info based on tag order."
        items:
          type: "object"
          properties: {}
      tags:
        type: "array"
        description: "List of all user set device tags."
        items:
          type: "string"
      location:
        type: "object"
        description: "Detailed information on the device location."
        properties: {}
      networkAutomation:
        type: "object"
        description: "Network Automation status for device."
        properties: {}
      primaryIp:
        type: "string"
        description: "The first assigned public IP for accessing this device."
      ipmiAddress:
        type: "object"
        description: "IP address for IPMI connection. Requires you to whitelist your\
          \ current IP or be on IPMI VPN."
        properties: {}
      serviceMonitors:
        type: "array"
        items:
          type: "string"
      billingInfo:
        type: "object"
        description: "If set, detailed info on this device's billing method. Otherwise\
          \ null. When null the accounts default billing info is used for payments."
        properties: {}
      servicePlan:
        type: "integer"
        description: "The unique ID of the associated service."
      lastInvoiceId:
        type: "integer"
        description: "The unique ID of the last invoice for this device."
      selfProvisioning:
        type: "boolean"
        description: "True if instant server."
      metadata:
        type: "object"
        description: "Additional metadata."
        properties: {}
      spsStatus:
        type: "string"
        description: "BUILDING|IPMI_READY|PROVISIONABLE|RESERVED|WAIT_FOR_PXE|PROVISION_STARTED|PROVISION_WAIT_FOR_ADDONS|PROVISION_FINISHED|WAIT_TO_COMPLETE_ORDER|WAIT_TO_ASSIGN_SERVICE|WAIT_FOR_HARDWARE_SCAN|IN_USE|RELOADING|DEVICE_READY_TO_TEST|DEVICE_READY_TO_WIPE|DEVICE_READY_TO_UPGRADE_FIRMWARE|FAILED|CLEANUP_MOVE_TO_FAILED|IN_REVIEW|READY_FOR_MIGRATION"
      clientId:
        type: "integer"
        description: "The unique ID of the associated client."
    example:
      metadata: "{}"
      networkAutomation: "{}"
      ipmiEnabled: true
      ports:
      - "{}"
      - "{}"
      ipmiAddress: "{}"
      deviceId: 0
      powerStatus: "{}"
      hostname: "hostname"
      billingCancelDate: 6
      isReload: true
      deviceTypeGroup: "deviceTypeGroup"
      monitorsTotal: 5
      managedAlertsTotal: 5
      deviceType: "deviceType"
      clientId: 9
      spsStatus: "spsStatus"
      lastInvoiceId: 7
      billingStatus: "billingStatus"
      isManaged: true
      tags:
      - "tags"
      - "tags"
      serviceMonitors:
      - "serviceMonitors"
      - "serviceMonitors"
      monitorsUp: 1
      billingInfo: "{}"
      servicePlan: 2
      displayedTags:
      - "{}"
      - "{}"
      name: "name"
      primaryIp: "primaryIp"
      hasCancellation: true
      selfProvisioning: true
      location: "{}"
      status: "status"
  DeviceUpdate:
    type: "object"
    properties:
      name:
        type: "string"
        example: "User given custom name"
      hostname:
        type: "string"
        example: "server1.mydomain.com"
        description: "A FQDN for the device. For example: `example.hivelocity.net`."
    example:
      hostname: "server1.mydomain.com"
      name: "User given custom name"
  DevicePower:
    type: "object"
    required:
    - "powerStatus"
    properties:
      powerStatus:
        type: "string"
        description: "ON|OFF"
    example:
      powerStatus: "powerStatus"
  DeviceTag:
    type: "object"
    properties:
      tags:
        type: "array"
        description: "List of user set device tags."
        items:
          type: "string"
    example:
      tags:
      - "tags"
      - "tags"
  DeviceIPMIThresholds:
    type: "object"
    required:
    - "thresholds"
    properties:
      thresholds:
        type: "object"
        description: "Alert thresholds for IPMI sensor values."
        properties: {}
    example:
      thresholds: "{}"
  UpdateDevicesIPMIThresholds:
    type: "object"
    required:
    - "device_ids"
    - "thresholds"
    properties:
      thresholds:
        type: "object"
        description: "Alert thresholds for IPMI sensor values."
        properties: {}
      device_ids:
        type: "array"
        description: "List of unique device IDs."
        items:
          type: "integer"
  DevicesIPMIThresholds:
    type: "object"
    required:
    - "devices"
    properties:
      devices:
        type: "object"
        properties: {}
    example:
      devices: "{}"
  DeviceIPMIInfo:
    type: "object"
    properties:
      info:
        $ref: "#/definitions/IPMIInfo"
      sensors:
        type: "array"
        items:
          $ref: "#/definitions/IPMISensor"
    example:
      sensors:
      - name: "name"
        reading: 0.80082819046101150206595775671303272247314453125
        units: "units"
        group: "group"
        status: true
        sensorId: "sensorId"
      - name: "name"
        reading: 0.80082819046101150206595775671303272247314453125
        units: "units"
        group: "group"
        status: true
        sensorId: "sensorId"
      info:
        fruInventoryDevice: "fruInventoryDevice"
        sdrRepositoryDevice: "sdrRepositoryDevice"
        productId: "productId"
        deviceAvailable: "deviceAvailable"
        manufacturerName: "manufacturerName"
        deviceSDRs: "deviceSDRs"
        deviceRevision: "deviceRevision"
        manufacturerId: "manufacturerId"
        ipmbEventGenerator: "ipmbEventGenerator"
        deviceId: "deviceId"
        ipmiVersion: "ipmiVersion"
        chassisDevice: "chassisDevice"
        selDevice: "selDevice"
        ipmbEventReceiver: "ipmbEventReceiver"
        auxFirmwareRevInfo: "auxFirmwareRevInfo"
        bridge: "bridge"
        sensorDevice: "sensorDevice"
        firmwareRevision: "firmwareRevision"
  IPMIInfo:
    type: "object"
    properties:
      manufacturerName:
        type: "string"
      deviceRevision:
        type: "string"
      firmwareRevision:
        type: "string"
      deviceSDRs:
        type: "string"
      selDevice:
        type: "string"
      ipmbEventReceiver:
        type: "string"
      ipmiVersion:
        type: "string"
      auxFirmwareRevInfo:
        type: "string"
      bridge:
        type: "string"
      deviceId:
        type: "string"
        description: "The IPMI ID of the device."
      sdrRepositoryDevice:
        type: "string"
      manufacturerId:
        type: "string"
      chassisDevice:
        type: "string"
      fruInventoryDevice:
        type: "string"
      deviceAvailable:
        type: "string"
      ipmbEventGenerator:
        type: "string"
      productId:
        type: "string"
      sensorDevice:
        type: "string"
    example:
      fruInventoryDevice: "fruInventoryDevice"
      sdrRepositoryDevice: "sdrRepositoryDevice"
      productId: "productId"
      deviceAvailable: "deviceAvailable"
      manufacturerName: "manufacturerName"
      deviceSDRs: "deviceSDRs"
      deviceRevision: "deviceRevision"
      manufacturerId: "manufacturerId"
      ipmbEventGenerator: "ipmbEventGenerator"
      deviceId: "deviceId"
      ipmiVersion: "ipmiVersion"
      chassisDevice: "chassisDevice"
      selDevice: "selDevice"
      ipmbEventReceiver: "ipmbEventReceiver"
      auxFirmwareRevInfo: "auxFirmwareRevInfo"
      bridge: "bridge"
      sensorDevice: "sensorDevice"
      firmwareRevision: "firmwareRevision"
  IPMISensor:
    type: "object"
    properties:
      group:
        type: "string"
      status:
        type: "boolean"
      sensorId:
        type: "string"
      units:
        type: "string"
      name:
        type: "string"
      reading:
        type: "number"
    example:
      name: "name"
      reading: 0.80082819046101150206595775671303272247314453125
      units: "units"
      group: "group"
      status: true
      sensorId: "sensorId"
  IPMILoginData:
    type: "object"
    properties:
      host:
        type: "string"
        description: "IP for IPMI access. Requires your current IP to be whitelisted\
          \ or the IPMI VPN."
      drivertype:
        type: "string"
      password:
        type: "string"
        description: "Password for IPMI console."
      username:
        type: "string"
        description: "Username for IPMI console."
    example:
      password: "password"
      host: "host"
      drivertype: "drivertype"
      username: "username"
  IPMIValidLogin:
    type: "object"
    required:
    - "valid"
    properties:
      valid:
        type: "boolean"
    example:
      valid: true
  DevicePassword:
    type: "object"
    required:
    - "password"
    properties:
      password:
        type: "string"
        description: "Password for initial ssh access. Will be deleted from api 7\
          \ days after initial provision."
    example:
      password: "password"
  DeviceInitialCreds:
    type: "object"
    properties:
      passwordReturnsUntil:
        type: "integer"
        description: "Date password will expire from API."
      lockerUrl:
        type: "string"
        description: "Link to encrypted locker containing password for initial ssh\
          \ access. Locker contents be expired from api 7 days after initial provision."
      user:
        type: "string"
        description: "User for initial ssh access."
      password:
        type: "string"
        description: "Password for initial ssh access. Will expire from api 7 days\
          \ after initial provision."
      port:
        type: "integer"
        description: "Port for initial ssh access."
    example:
      lockerUrl: "lockerUrl"
      password: "password"
      port: 6
      user: "user"
      passwordReturnsUntil: 0
  DeviceIPMIWhitelistIP:
    type: "object"
    required:
    - "custIp"
    properties:
      custIp:
        type: "string"
  DeviceEvent:
    type: "object"
    properties:
      action:
        type: "string"
      time:
        type: "integer"
    example:
      action: "action"
      time: 0
  DeviceReload:
    type: "object"
    required:
    - "operatingSystemId"
    properties:
      ignitionId:
        type: "integer"
        description: "The unique ID of an Ignition File for FlatcarOS provisions."
      operatingSystemId:
        type: "integer"
        description: "The unique ID of the operating system product option to provision\
          \ on this device."
      script:
        type: "string"
        description: "A Cloud-Init script or a post-install script (Bash for Linux\
          \ or Powershell for Windows)."
      controlPanelId:
        type: "integer"
        description: "The unique ID of the control panel product option to provision\
          \ on this device. This is used only for custom devices."
      customIPXEScriptUrl:
        type: "string"
        description: "Custom IPXE script URL. If device was provisioned was one before\
          \ and this field is omitted, the original custom iPXE script is used. Otherwise\
          \ specifying the script will override."
      body:
        type: "string"
        description: "Describe any special requests for custom devices."
      publicSshKeyIds:
        type: "array"
        description: "List of public ssh keys"
        items:
          type: "integer"
    example:
      operatingSystemId: 6
      controlPanelId: 1
      publicSshKeyIds:
      - 5
      - 5
      customIPXEScriptUrl: "customIPXEScriptUrl"
      body: "body"
      ignitionId: 0
      script: "script"
  ServiceOption:
    type: "object"
    properties:
      optionId:
        type: "integer"
      optionName:
        type: "string"
        description: "Option name of hardware option"
      upgradeId:
        type: "integer"
        description: "Upgrade ID of hardware option"
      upgradeName:
        type: "string"
        description: "Upgrade name of hardware option"
    example:
      optionId: 0
      optionName: "optionName"
      upgradeName: "upgradeName"
      upgradeId: 6
  IPAssignment:
    type: "object"
    required:
    - "version"
    properties:
      version:
        type: "integer"
        description: "IP version of this assignment (ipv4 or ipv6)"
      assignmentId:
        type: "integer"
        description: "Unique ID of this assignment"
      clientId:
        type: "integer"
        example: 0
        description: "Unique ID of the assignment owner"
      subnet:
        type: "string"
        description: "CIDR representation of this assignment."
      netmask:
        type: "string"
        description: "Netmask for this assignment."
      broadcastIp:
        type: "string"
        description: "Broadcast address for this subnet."
      gatewayIp:
        type: "string"
        description: "Gateway address for this subnet."
      dnsResolvers:
        type: "array"
        example: []
        description: "DNS resolvers for this subnet. Only applicable to VPS instances."
        items:
          type: "string"
      firstUsableIp:
        type: "string"
        description: "First address available for use by Devices on this subnet."
      lastUsableIp:
        type: "string"
        description: "Last address available for use by Devices on this subnet."
      usableIps:
        type: "array"
        example: []
        description: "A list of usable IP addresses on assignment. It is only filled\
          \ for IPv4 subnets."
        items:
          type: "string"
      facilityCode:
        type: "string"
        description: "Facility code of this assignment."
      description:
        type: "string"
        description: "Description for this assignment."
      deviceId:
        type: "integer"
        description: "The device receiving traffic from the assignment."
      portId:
        type: "integer"
        description: "The port receiving traffic from the assignment."
      vlanId:
        type: "integer"
        description: "The VLAN receiving traffic from the assignment."
      nextHopIp:
        type: "string"
        description: "Next Hop IP address, if this assignment is statically routed."
    example:
      facilityCode: "facilityCode"
      subnet: "subnet"
      broadcastIp: "broadcastIp"
      clientId: 0
      vlanId: 5
      description: "description"
      gatewayIp: "gatewayIp"
      portId: 5
      version: 0
      assignmentId: 6
      dnsResolvers: []
      deviceId: 1
      lastUsableIp: "lastUsableIp"
      usableIps: []
      netmask: "netmask"
      firstUsableIp: "firstUsableIp"
      nextHopIp: "nextHopIp"
  DevicePortsUpdate:
    type: "object"
    properties:
      ports:
        type: "array"
        items:
          $ref: "#/definitions/DevicePortUpdate"
    example:
      ports:
      - nativeVlanId: 1
        ipAssignments:
        - 6
        - 6
        portId: 0
        enabled: true
      - nativeVlanId: 1
        ipAssignments:
        - 6
        - 6
        portId: 0
        enabled: true
  DevicePortUpdate:
    type: "object"
    required:
    - "ipAssignments"
    - "portId"
    properties:
      portId:
        type: "integer"
        description: "The unique ID of the port."
      enabled:
        type: "boolean"
        default: true
      ipAssignments:
        type: "array"
        description: "IP Assignments IDs currently routed to this port."
        items:
          type: "integer"
      nativeVlanId:
        type: "integer"
        description: "The unique ID of the port's native vlan, if applicable. Send\
          \ value `0` to remove the native vlan from this port."
    example:
      nativeVlanId: 1
      ipAssignments:
      - 6
      - 6
      portId: 0
      enabled: true
  DevicePort:
    type: "object"
    required:
    - "private"
    properties:
      status:
        type: "string"
        description: "ENABLED|DISABLED|UNKOWN"
      nativeVlanId:
        type: "integer"
        description: "The unique ID of the native VLAN, if applicable."
      ips:
        type: "array"
        description: "IPs applied to this port."
        items:
          $ref: "#/definitions/IPAssignment"
      portId:
        type: "integer"
        description: "The unique ID of the port."
      type:
        type: "string"
        description: "Indicates if is a bond interface. If not, indicates the Mbps\
          \ rate of the port."
      clientId:
        type: "integer"
        example: 0
        description: "Your client account's unique ID."
      nativeVlanTag:
        type: "integer"
        description: "The vlan tag of the port's native vlan, if applicable."
      private:
        type: "boolean"
      deviceId:
        type: "integer"
        description: "The unique ID of the port's device."
      name:
        type: "string"
      mtu:
        type: "integer"
    example:
      private: true
      nativeVlanId: 0
      clientId: 0
      name: "name"
      portId: 6
      type: "type"
      nativeVlanTag: 1
      ips:
      - facilityCode: "facilityCode"
        subnet: "subnet"
        broadcastIp: "broadcastIp"
        clientId: 0
        vlanId: 5
        description: "description"
        gatewayIp: "gatewayIp"
        portId: 5
        version: 0
        assignmentId: 6
        dnsResolvers: []
        deviceId: 1
        lastUsableIp: "lastUsableIp"
        usableIps: []
        netmask: "netmask"
        firstUsableIp: "firstUsableIp"
        nextHopIp: "nextHopIp"
      - facilityCode: "facilityCode"
        subnet: "subnet"
        broadcastIp: "broadcastIp"
        clientId: 0
        vlanId: 5
        description: "description"
        gatewayIp: "gatewayIp"
        portId: 5
        version: 0
        assignmentId: 6
        dnsResolvers: []
        deviceId: 1
        lastUsableIp: "lastUsableIp"
        usableIps: []
        netmask: "netmask"
        firstUsableIp: "firstUsableIp"
        nextHopIp: "nextHopIp"
      deviceId: 5
      status: "status"
      mtu: 5
  NetworkTask-dump:
    type: "object"
    properties:
      clientId:
        type: "integer"
        description: "Unique ID of the client triggering the task."
      taskId:
        type: "string"
        description: "Unique ID of the network task."
      deviceId:
        type: "integer"
        description: "Unique ID of the target device."
      result:
        type: "string"
        description: "Success|Pending|Failed. Null value also means Pending."
      metaData:
        type: "string"
        description: "Key value arguments used to trigger the task."
      taskCreated:
        type: "object"
        description: "Timestamp of task creation date."
        properties: {}
      taskUpdated:
        type: "object"
        description: "Timestamp of most recent activity taken on the network task.\
          \ This will update multiple times for multi-step tasks."
        properties: {}
    example:
      result: "result"
      metaData: "metaData"
      clientId: 0
      taskCreated: "{}"
      taskUpdated: "{}"
      deviceId: 6
      taskId: "taskId"
  EffectiveIgnitionResponse:
    type: "object"
    required:
    - "contents"
    properties:
      contents:
        type: "string"
    example:
      contents: "contents"
  PreviewEffectiveIgnition:
    type: "object"
    required:
    - "ignition"
    properties:
      primaryInterface:
        $ref: "#/definitions/PrimaryInterface"
      hostname:
        type: "string"
      bonded:
        type: "boolean"
        example: false
        default: false
      publicKeys:
        type: "array"
        example: []
        items:
          type: "string"
      password:
        type: "string"
      ignition:
        type: "object"
        properties: {}
    example:
      hostname: "hostname"
      publicKeys: []
      password: "password"
      bonded: false
      primaryInterface:
        subnet: "subnet"
        ip: "ip"
        dnsServers: []
        gateway: "gateway"
      ignition: "{}"
  PrimaryInterface:
    type: "object"
    properties:
      ip:
        type: "string"
      dnsServers:
        type: "array"
        example: []
        items:
          type: "string"
      gateway:
        type: "string"
      subnet:
        type: "string"
    example:
      subnet: "subnet"
      ip: "ip"
      dnsServers: []
      gateway: "gateway"
  PreviewEffectiveIgnitionResponse:
    type: "object"
    properties:
      result:
        type: "object"
        properties: {}
      original:
        type: "object"
        properties: {}
      modifications:
        type: "array"
        items:
          $ref: "#/definitions/Modification"
    example:
      result: "{}"
      original: "{}"
      modifications:
      - reason: "reason"
        path: "path"
        contents: "{}"
      - reason: "reason"
        path: "path"
        contents: "{}"
  Modification:
    type: "object"
    properties:
      reason:
        type: "string"
      path:
        type: "string"
      contents:
        type: "object"
        properties: {}
    example:
      reason: "reason"
      path: "path"
      contents: "{}"
  Services:
    type: "object"
    additionalProperties:
      type: "array"
      items:
        $ref: "#/definitions/Service"
  DomainCreate:
    type: "object"
    required:
    - "name"
    properties:
      name:
        type: "string"
    example:
      name: "name"
  DomainReturn:
    type: "object"
    required:
    - "directsTo"
    - "domainId"
    - "name"
    properties:
      name:
        type: "string"
      domainId:
        type: "integer"
      summary:
        type: "object"
        properties: {}
      directsTo:
        type: "string"
    example:
      summary: "{}"
      directsTo: "directsTo"
      name: "name"
      domainId: 0
  ARecord:
    type: "object"
    required:
    - "name"
    - "ttl"
    properties:
      addresses:
        type: "array"
        items:
          type: "string"
      ttl:
        type: "integer"
      name:
        type: "string"
    example:
      addresses:
      - "addresses"
      - "addresses"
      name: "name"
      ttl: 0
  AAAARecordCreate:
    type: "object"
    required:
    - "address"
    - "name"
    - "ttl"
    properties:
      ttl:
        type: "integer"
      name:
        type: "string"
      address:
        type: "string"
  AAAARecordReturn:
    type: "object"
    required:
    - "domainId"
    - "name"
    - "ttl"
    - "type"
    properties:
      ttl:
        type: "integer"
      id:
        type: "integer"
      address:
        type: "string"
      type:
        type: "string"
      name:
        type: "string"
      domainId:
        type: "integer"
    example:
      address: "address"
      name: "name"
      id: 6
      type: "type"
      ttl: 0
      domainId: 1
  AAAARecordUpdate:
    type: "object"
    properties:
      ttl:
        type: "integer"
      name:
        type: "string"
      address:
        type: "string"
  MXRecordCreate:
    type: "object"
    required:
    - "exchange"
    - "name"
    - "preference"
    - "ttl"
    properties:
      ttl:
        type: "integer"
      name:
        type: "string"
      preference:
        type: "integer"
      exchange:
        type: "string"
  MXRecordReturn:
    type: "object"
    required:
    - "domainId"
    - "exchange"
    - "id"
    - "name"
    - "preference"
    - "ttl"
    - "type"
    properties:
      id:
        type: "integer"
      ttl:
        type: "integer"
      exchange:
        type: "string"
      type:
        type: "string"
      name:
        type: "string"
      preference:
        type: "integer"
      domainId:
        type: "integer"
    example:
      preference: 1
      name: "name"
      exchange: "exchange"
      id: 0
      type: "type"
      ttl: 6
      domainId: 5
  MXRecordUpdate:
    type: "object"
    required:
    - "exchange"
    - "preference"
    properties:
      ttl:
        type: "integer"
      name:
        type: "string"
      preference:
        type: "integer"
      exchange:
        type: "string"
  PTRRecordReturn:
    type: "object"
    properties:
      id:
        type: "integer"
      ttl:
        type: "integer"
      address:
        type: "string"
      type:
        type: "string"
      disabled:
        type: "boolean"
      name:
        type: "string"
      domainId:
        type: "integer"
    example:
      address: "address"
      name: "name"
      disabled: true
      id: 0
      type: "type"
      ttl: 6
      domainId: 1
  PTRRecordUpdate:
    type: "object"
    required:
    - "name"
    properties:
      ttl:
        type: "integer"
      name:
        type: "string"
  CreateIgnition:
    type: "object"
    properties:
      name:
        type: "string"
      contents:
        type: "string"
    example:
      contents: "contents"
      name: "name"
  IgnitionResponse:
    type: "object"
    properties:
      name:
        type: "string"
      id:
        type: "integer"
      contents:
        type: "string"
    example:
      contents: "contents"
      name: "name"
      id: 0
  UpdateIgnition:
    type: "object"
    required:
    - "contents"
    properties:
      contents:
        type: "string"
    example:
      contents: "contents"
  Inventory:
    type: "object"
    additionalProperties:
      type: "array"
      items:
        $ref: "#/definitions/Stock"
  Stock:
    type: "object"
    properties:
      product_drive:
        type: "string"
        description: "Human readable drive specs. Can include multiple drives."
      core:
        type: "boolean"
        description: "true|false if core site."
      product_disabled_billing_periods:
        type: "array"
        description: "Orders for the periods in the array will fail. Possible values:\
          \ hourly|monthly|quarterly|semi-annually|biennial|triennial"
        items:
          type: "string"
      product_display_price:
        type: "number"
        description: "*DEPRECATED*."
      location_option_id:
        type: "integer"
        description: "Location option ID for datacenter"
      biennial_location_premium:
        type: "number"
        description: "Additional biennial fee for this `product_id` in this `data_center`."
      monthly_location_premium:
        type: "number"
        description: "Additional monthly fee for this `product_id` in this `data_center`."
      product_name:
        type: "string"
        description: "The unique name of this product."
      product_monthly_price:
        type: "number"
        description: "Price per month."
      product_cpu_cores:
        type: "string"
        description: "Human readable CPU core and thread info in HTML format."
      stock:
        type: "string"
        description: "available|limited|unavailable. Limited denotes minimal stock."
      quarterly_location_premium:
        type: "number"
        description: "Additional quarterly fee for this `product_id` in this `data_center`."
      product_id:
        type: "integer"
        description: "The unique ID of this product."
      hourly_location_premium:
        type: "number"
        description: "Additional hourly fee for this `product_id` in this `data_center`."
      product_quarterly_price:
        type: "number"
        description: "Price per quarter (3 months)."
      annually_location_premium:
        type: "number"
        description: "Additional annual fee for this `product_id` in this `data_center`."
      triennial_location_premium:
        type: "number"
        description: "Additional triennial fee for this `product_id` in this `data_center`."
      is_vps:
        type: "boolean"
        description: "true|false. If SPS product is VPS type"
      is_sps:
        type: "boolean"
        description: "true|false. If product is SPS"
      product_on_sale:
        type: "boolean"
        description: "true|false. Use with `product_original_price`."
      product_original_price:
        type: "number"
        description: "Retail price of product. Use with `product_on_sale`."
      product_cpu:
        type: "string"
        description: "Human readable CPU specs."
      semi_annually_location_premium:
        type: "number"
        description: "Additional semi-annual fee for this `product_id` in this `data_center`."
      product_triennial_price:
        type: "number"
        description: "Price per 3 year period (36 months)."
      product_hourly_price:
        type: "number"
        description: "Price per hour."
      data_center:
        type: "string"
        description: "A facility code. For example `NYC1`."
      product_gpu:
        type: "string"
        description: "Human readable GPU specs."
      product_semi_annually_price:
        type: "number"
        description: "Price per half year (6 months)."
      processor_info:
        type: "object"
        description: "JSON CPU info for cores, threads, sockets, and vCPUs."
        properties: {}
      product_annually_price:
        type: "number"
        description: "Price per year (12 months)."
      product_memory:
        type: "string"
        description: "Human readable memory specs."
      edge:
        type: "boolean"
        description: "true|false if edge site."
      product_bandwidth:
        type: "string"
        description: "Human readable networking specs in the format: Free Outbound\
          \ Transfer / NIC Size"
      product_biennial_price:
        type: "number"
        description: "Price per 2 year period (24 months)."
    example:
      product_gpu: "product_gpu"
      product_cpu: "product_cpu"
      processor_info: "{}"
      biennial_location_premium: 1.46581298050294517310021547018550336360931396484375
      is_vps: true
      is_sps: true
      product_memory: "product_memory"
      product_monthly_price: 5.63737665663332876420099637471139430999755859375
      edge: true
      product_hourly_price: 1.489415909854170383397331534069962799549102783203125
      quarterly_location_premium: 2.3021358869347654518833223846741020679473876953125
      product_id: 7
      semi_annually_location_premium: 1.231513536777255612975068288506008684635162353515625
      location_option_id: 6
      stock: "stock"
      hourly_location_premium: 9.301444243932575517419536481611430644989013671875
      data_center: "data_center"
      product_name: "product_name"
      product_annually_price: 7.4577447736837658709418974467553198337554931640625
      triennial_location_premium: 4.1456080298839363962315474054776132106781005859375
      core: true
      product_disabled_billing_periods:
      - "product_disabled_billing_periods"
      - "product_disabled_billing_periods"
      product_triennial_price: 1.024645700144157789424070870154537260532379150390625
      product_drive: "product_drive"
      product_cpu_cores: "product_cpu_cores"
      product_quarterly_price: 3.61607674925191080461672754609026014804840087890625
      product_bandwidth: "product_bandwidth"
      annually_location_premium: 2.027123023002321833274663731572218239307403564453125
      product_on_sale: true
      product_display_price: 0.80082819046101150206595775671303272247314453125
      monthly_location_premium: 5.962133916683182377482808078639209270477294921875
      product_biennial_price: 1.173074250955943309548956676735542714595794677734375
      product_original_price: 7.3862819483858839220147274318151175975799560546875
      product_semi_annually_price: 6.8468526983526398765889098285697400569915771484375
  Location:
    type: "object"
    properties:
      id:
        type: "integer"
        description: "The unique identifier for a facility"
      code:
        type: "string"
        description: "The unique facility code."
      core:
        type: "boolean"
        description: "true|false if core site."
      title:
        type: "string"
        description: "The unique facility name."
      edge:
        type: "boolean"
        description: "true|false if edge site."
      location:
        $ref: "#/definitions/Location_location"
      location_option_ids:
        type: "array"
        description: "Location option IDs of location"
        items:
          type: "integer"
    example:
      core: true
      edge: true
      code: "code"
      location: {}
      id: 0
      location_option_ids:
      - 6
      - 6
      title: "title"
  CityStateCountry:
    type: "object"
    properties:
      city:
        type: "string"
      country:
        type: "string"
      state:
        type: "string"
  Invoice:
    type: "object"
    properties:
      id:
        type: "integer"
      amount:
        type: "number"
      amountUnpaid:
        type: "number"
      clientId:
        type: "integer"
      created:
        type: "integer"
      datePaid:
        type: "integer"
      due:
        type: "integer"
      sent:
        type: "integer"
      status:
        type: "string"
    example:
      amount: 6.02745618307040320615897144307382404804229736328125
      clientId: 5
      datePaid: 2
      due: 7
      created: 5
      id: 0
      amountUnpaid: 1.46581298050294517310021547018550336360931396484375
      sent: 9
      status: "status"
  InvoiceUnpaid:
    type: "object"
    properties:
      amountUnpaid:
        type: "number"
    example:
      amountUnpaid: 0.80082819046101150206595775671303272247314453125
  InvoicePDF:
    type: "object"
    properties:
      invoiceId:
        type: "integer"
      pdfData:
        type: "string"
    example:
      pdfData: "pdfData"
      invoiceId: 0
  InvoiceDetails:
    type: "object"
    properties:
      accountBalance:
        type: "number"
      clientAddress:
        type: "string"
      clientName:
        type: "string"
      companyName:
        type: "string"
      invoiceDate:
        type: "string"
        format: "date-time"
      invoiceDue:
        type: "string"
        format: "date-time"
      invoiceNumber:
        type: "string"
      serviceItems:
        type: "array"
        items:
          $ref: "#/definitions/InvoiceDetailsServiceItems"
      taxesValue:
        type: "number"
      totalDue:
        type: "number"
      paymentHistory:
        type: "array"
        items:
          type: "object"
          properties: {}
      refundHistory:
        type: "array"
        items:
          type: "object"
          properties: {}
      taxesList:
        type: "array"
        items:
          type: "object"
          properties: {}
      priorBalance:
        type: "number"
      paymentsRefunds:
        type: "number"
    example:
      clientName: "clientName"
      taxesList:
      - "{}"
      - "{}"
      taxesValue: 5.63737665663332876420099637471139430999755859375
      companyName: "companyName"
      totalDue: 2.3021358869347654518833223846741020679473876953125
      refundHistory:
      - "{}"
      - "{}"
      paymentHistory:
      - "{}"
      - "{}"
      serviceItems:
      - unitPrice: 1.46581298050294517310021547018550336360931396484375
        quantity: 5
        dateRange: "{}"
        description: "description"
        serviceId: 6
      - unitPrice: 1.46581298050294517310021547018550336360931396484375
        quantity: 5
        dateRange: "{}"
        description: "description"
        serviceId: 6
      invoiceDate: "2000-01-23T04:56:07.000+00:00"
      clientAddress: "clientAddress"
      priorBalance: 7.061401241503109105224211816675961017608642578125
      invoiceDue: "2000-01-23T04:56:07.000+00:00"
      paymentsRefunds: 9.301444243932575517419536481611430644989013671875
      invoiceNumber: "invoiceNumber"
      accountBalance: 0.80082819046101150206595775671303272247314453125
  InvoiceDetailsServiceItems:
    type: "object"
    properties:
      dateRange:
        type: "object"
        properties: {}
      serviceId:
        type: "integer"
      unitPrice:
        type: "number"
      quantity:
        type: "integer"
      description:
        type: "string"
    example:
      unitPrice: 1.46581298050294517310021547018550336360931396484375
      quantity: 5
      dateRange: "{}"
      description: "description"
      serviceId: 6
  InvoiceSeachResult:
    type: "object"
    properties:
      perPage:
        type: "integer"
      items:
        $ref: "#/definitions/Invoice"
      total:
        type: "integer"
      page:
        type: "integer"
      hasNext:
        type: "boolean"
      prevPage:
        type: "integer"
      hasPrev:
        type: "boolean"
      nextPage:
        type: "integer"
      pages:
        type: "integer"
    example:
      total: 6
      perPage: 0
      pages: 2
      hasPrev: true
      nextPage: 5
      hasNext: true
      prevPage: 5
      page: 1
      items:
        amount: 6.02745618307040320615897144307382404804229736328125
        clientId: 5
        datePaid: 2
        due: 7
        created: 5
        id: 0
        amountUnpaid: 1.46581298050294517310021547018550336360931396484375
        sent: 9
        status: "status"
  IpAssignmentRequest:
    type: "object"
    properties:
      facilityCode:
        type: "string"
        description: "For example: `NYC1`."
      purpose:
        type: "string"
        description: "List the intended use of each IP in the subnet. Required by\
          \ ICANN."
      prefixLength:
        type: "integer"
        description: "For example: `/27`."
    example:
      facilityCode: "facilityCode"
      prefixLength: 0
      purpose: "purpose"
  IpAssignmentCombine:
    type: "object"
    properties:
      assignmentIds:
        type: "array"
        description: "List of Unique assignment IDs."
        items:
          type: "integer"
    example:
      assignmentIds:
      - 0
      - 0
  IpAssignmentPut:
    type: "object"
    properties:
      nextHopIp:
        type: "string"
        description: "Route traffic from the IPs in the assignment to this IPv4 or\
          \ IPv6 IP."
    example:
      nextHopIp: "nextHopIp"
  MaintenanceEvent:
    type: "object"
    properties:
      start:
        type: "string"
        format: "date-time"
        description: "Maintenance Event Start (UTC)"
      description:
        type: "string"
        description: "Maintenance Event Description"
      title:
        type: "string"
        description: "Maintenance Event Title"
      device_ids:
        type: "array"
        description: "Device IDs affected by event"
        items:
          type: "integer"
      end:
        type: "string"
        format: "date-time"
        description: "Maintenance Event End (UTC)"
      maintenanceEventId:
        type: "integer"
        description: "Maintenance Event ID"
    example:
      start: "2000-01-23T04:56:07.000+00:00"
      description: "description"
      end: "2000-01-23T04:56:07.000+00:00"
      device_ids:
      - 0
      - 0
      title: "title"
      maintenanceEventId: 6
  NullRouteRequest:
    type: "object"
    required:
    - "ip"
    properties:
      ip:
        type: "string"
        description: "Public IPv4 Address"
      comment:
        type: "string"
        description: "User comments about reason for null routing"
    example:
      ip: "ip"
      comment: "comment"
  NullRoute:
    type: "object"
    properties:
      clientId:
        type: "integer"
        description: "Client ID who owns the IP"
      adminId:
        type: "integer"
        description: "Filled if IP was nulled by an admin user"
      ip:
        type: "string"
        description: "IP address"
      comment:
        type: "string"
        description: "Comment of the null route"
      created:
        type: "string"
        format: "date-time"
        description: "Timestamp the null route was created"
    example:
      clientId: 0
      created: "2000-01-23T04:56:07.000+00:00"
      ip: "ip"
      adminId: 6
      comment: "comment"
  Order-dump:
    type: "object"
    properties:
      info:
        type: "object"
        properties: {}
      status:
        type: "string"
      total:
        type: "number"
      orderId:
        type: "integer"
      owner:
        type: "string"
    example:
      owner: "owner"
      total: 0.80082819046101150206595775671303272247314453125
      orderId: 6
      info: "{}"
      status: "status"
  OrderGroupCreate:
    type: "object"
    required:
    - "name"
    properties:
      same_rack:
        type: "boolean"
        default: false
      name:
        type: "string"
    example:
      same_rack: false
      name: "name"
  OrderGroup:
    type: "object"
    properties:
      same_rack:
        type: "boolean"
      name:
        type: "string"
      id:
        type: "integer"
      device_ids:
        type: "array"
        items:
          type: "integer"
    example:
      same_rack: true
      name: "name"
      id: 0
      device_ids:
      - 6
      - 6
  OrderGroupUpdate:
    type: "object"
    required:
    - "name"
    properties:
      name:
        type: "string"
    example:
      name: "name"
  Permission:
    type: "object"
    required:
    - "permissions"
    - "userId"
    properties:
      permissions:
        type: "array"
        items:
          type: "string"
      userId:
        type: "integer"
    example:
      permissions:
      - "permissions"
      - "permissions"
      userId: 0
  PermissionReturn:
    type: "object"
    properties:
      name:
        type: "string"
    example:
      name: "name"
  Options:
    type: "object"
    additionalProperties:
      type: "array"
      items:
        $ref: "#/definitions/Option-dump"
  Option-dump:
    type: "object"
    required:
    - "name"
    properties:
      id:
        type: "integer"
        description: "Unique ID of the option. Stays the same across products."
      currency:
        type: "string"
        description: "USD|other"
      monthlyPrice:
        type: "number"
        description: "Monthly price of the option."
      tags:
        type: "array"
        description: "Used with `expressions` to determine option compatibility. See\
          \ product docs."
        items:
          type: "string"
      name:
        type: "string"
        description: "Unique option name."
      operatingSystemFeatures:
        $ref: "#/definitions/OperatingSystem"
      expressions:
        type: "array"
        description: "Used with `tags` to determine option compatibility. See product\
          \ docs."
        items:
          type: "string"
    example:
      name: "name"
      currency: "currency"
      id: 0
      monthlyPrice: 6.02745618307040320615897144307382404804229736328125
      operatingSystemFeatures:
        cloudInit: true
        sshKey: true
        postInstall: true
      expressions:
      - "expressions"
      - "expressions"
      tags:
      - "tags"
      - "tags"
  OperatingSystem:
    type: "object"
    properties:
      sshKey:
        type: "boolean"
      postInstall:
        type: "boolean"
      cloudInit:
        type: "boolean"
    example:
      cloudInit: true
      sshKey: true
      postInstall: true
  ProductOption:
    type: "object"
    properties:
      productId:
        type: "integer"
        description: "Unique product id."
      options:
        type: "object"
        description: "List of available options."
        properties: {}
      pricing:
        type: "object"
        description: "*DEPRECATED*"
        properties: {}
    example:
      productId: 0
      options: "{}"
      pricing: "{}"
  ProfileUpdate:
    type: "object"
    properties:
      phone:
        type: "string"
      first:
        type: "string"
      fullName:
        type: "string"
      city:
        type: "string"
      email:
        type: "string"
      requirePayPalOauthLogin:
        type: "string"
      company:
        type: "string"
      country:
        type: "string"
      password:
        type: "string"
      zip:
        type: "string"
      disableInvoiceEmails:
        type: "boolean"
      requireOauthLogin:
        type: "string"
      directToZendesk:
        type: "string"
      last:
        type: "string"
      address:
        type: "string"
      state:
        type: "string"
    example:
      requirePayPalOauthLogin: "requirePayPalOauthLogin"
      zip: "zip"
      country: "country"
      address: "address"
      last: "last"
      city: "city"
      fullName: "fullName"
      directToZendesk: "directToZendesk"
      password: "password"
      phone: "phone"
      company: "company"
      state: "state"
      requireOauthLogin: "requireOauthLogin"
      first: "first"
      email: "email"
      disableInvoiceEmails: true
  Profile-dump:
    type: "object"
    properties:
      phone:
        type: "string"
      first:
        type: "string"
      id:
        type: "integer"
      isClient:
        type: "boolean"
      metaData:
        type: "object"
        properties: {}
      address:
        type: "object"
        properties: {}
      city:
        type: "object"
        properties: {}
      email:
        type: "string"
      company:
        type: "object"
        properties: {}
      fax:
        type: "object"
        properties: {}
      country:
        type: "object"
        properties: {}
      zip:
        type: "object"
        properties: {}
      last:
        type: "string"
      login:
        type: "string"
      fullName:
        type: "object"
        properties: {}
      state:
        type: "object"
        properties: {}
      created:
        type: "object"
        properties: {}
    example:
      zip: "{}"
      country: "{}"
      address: "{}"
      last: "last"
      city: "{}"
      created: "{}"
      fullName: "{}"
      isClient: true
      login: "login"
      metaData: "{}"
      phone: "phone"
      company: "{}"
      id: 0
      state: "{}"
      fax: "{}"
      first: "first"
      email: "email"
  BasicProfile-dump:
    type: "object"
    properties:
      first:
        type: "string"
      id:
        type: "integer"
      isClient:
        type: "boolean"
      metaData:
        type: "object"
        properties: {}
      city:
        type: "object"
        properties: {}
      email:
        type: "string"
      company:
        type: "object"
        properties: {}
      country:
        type: "object"
        properties: {}
      zip:
        type: "object"
        properties: {}
      last:
        type: "string"
      login:
        type: "string"
      fullName:
        type: "object"
        properties: {}
      state:
        type: "object"
        properties: {}
    example:
      zip: "{}"
      country: "{}"
      last: "last"
      city: "{}"
      fullName: "{}"
      isClient: true
      login: "login"
      metaData: "{}"
      company: "{}"
      id: 0
      state: "{}"
      first: "first"
      email: "email"
  Deployment:
    type: "object"
    properties:
      deploymentConfiguration:
        type: "array"
        items:
          type: "object"
          properties: {}
      price:
        type: "number"
      orderNumber:
        type: "string"
        example: ""
      deploymentName:
        type: "string"
      deploymentId:
        type: "integer"
      startedProvisioning:
        type: "boolean"
      empty:
        type: "boolean"
    example:
      deploymentConfiguration:
      - "{}"
      - "{}"
      orderNumber: ""
      price: 0.80082819046101150206595775671303272247314453125
      deploymentId: 6
      deploymentName: "deploymentName"
      startedProvisioning: true
      empty: true
  DeploymentStart:
    type: "object"
    required:
    - "billingInfo"
    properties:
      billingInfo:
        type: "integer"
      script:
        type: "string"
    example:
      billingInfo: 0
      script: "script"
  DeploymentCustomization:
    type: "object"
    required:
    - "hostnames"
    - "operatingSystem"
    - "productId"
    properties:
      options:
        type: "array"
        items:
          type: "integer"
      publicSshKeyId:
        type: "integer"
        description: "ID of SSH Key to use for deployment"
      customIPXEScriptURL:
        type: "string"
        description: "URL to download custom iPXE script if not supplying script in\
          \ entirety"
      hostnames:
        type: "array"
        items:
          type: "string"
      locationCode:
        type: "string"
        default: ""
      operatingSystem:
        type: "string"
        description: "Operating System's Name or ID"
      forceDeviceIds:
        type: "array"
        example: []
        description: "Either deploy these Device IDs or fail"
        items:
          type: "integer"
      quantity:
        type: "integer"
      customIPXEScriptContents:
        type: "string"
        description: "Contents of iPXE script if not supplying URL"
      billingPeriod:
        type: "string"
        description: "must be one of ['monthly', 'quarterly', 'semi-annually', 'annually',\
          \ 'biennial', 'triennial', 'hourly']"
        default: "monthly"
      additionalNotes:
        type: "array"
        items:
          type: "string"
      ignitionIds:
        type: "array"
        example: []
        description: "Specify Ignition file ID for CoreOS/Flatcar provisions"
        items:
          type: "integer"
      productId:
        type: "integer"
    example:
      ignitionIds: []
      quantity: 1
      productId: 5
      billingPeriod: "monthly"
      hostnames:
      - "hostnames"
      - "hostnames"
      customIPXEScriptContents: "customIPXEScriptContents"
      operatingSystem: "operatingSystem"
      publicSshKeyId: 6
      forceDeviceIds: []
      customIPXEScriptURL: "customIPXEScriptURL"
      options:
      - 0
      - 0
      locationCode: "locationCode"
      additionalNotes:
      - "additionalNotes"
      - "additionalNotes"
  FastService-dump:
    type: "object"
    properties:
      serviceId:
        type: "integer"
      created:
        type: "integer"
      billedPrice:
        type: "number"
      billedPricePerPeriod:
        type: "number"
      serviceCost:
        type: "number"
      lastRenew:
        type: "integer"
      renewDate:
        type: "integer"
      quantity:
        type: "number"
      orderId:
        type: "integer"
      status:
        type: "string"
      period:
        type: "string"
      discount:
        type: "number"
      discountType:
        type: "string"
      discountedCost:
        type: "number"
      serviceDiscount:
        type: "number"
      serviceDiscountPerPeriod:
        type: "number"
      ipAddress:
        type: "string"
      cancelAfter:
        type: "integer"
      startDate:
        type: "integer"
      endDate:
        type: "integer"
      serviceOptions:
        type: "array"
        items:
          $ref: "#/definitions/ServiceOptionData"
      usage:
        type: "object"
        properties: {}
      serviceDevices:
        type: "array"
        items:
          type: "object"
          properties: {}
      childServices:
        type: "array"
        items:
          type: "object"
          properties: {}
      productId:
        type: "integer"
      productName:
        type: "string"
      reseller:
        type: "string"
      serviceType:
        type: "string"
      contractTerm:
        type: "integer"
      billingInfoId:
        type: "integer"
      autoBill:
        type: "boolean"
      colocationCharge:
        type: "number"
      resellerBmaasCharge:
        type: "number"
      facilityName:
        type: "string"
      typeCode:
        type: "string"
        description: "The service type code. The list of service types can be accessed\
          \ on https://core.hivelocity.net/api/v2/service/types ."
      bandwidthBilling:
        $ref: "#/definitions/ServiceBandwidthBilling"
    example:
      serviceType: "serviceType"
      discountedCost: 4.1456080298839363962315474054776132106781005859375
      orderId: 3
      endDate: 6
      billingInfoId: 9
      usage: "{}"
      discount: 2.027123023002321833274663731572218239307403564453125
      serviceDiscountPerPeriod: 1.231513536777255612975068288506008684635162353515625
      productName: "productName"
      lastRenew: 2
      colocationCharge: 9.3693102714106686335071572102606296539306640625
      discountType: "discountType"
      facilityName: "facilityName"
      serviceId: 0
      renewDate: 7
      serviceDevices:
      - "{}"
      - "{}"
      period: "period"
      billedPrice: 1.46581298050294517310021547018550336360931396484375
      quantity: 9.301444243932575517419536481611430644989013671875
      productId: 4
      serviceCost: 5.63737665663332876420099637471139430999755859375
      created: 6
      cancelAfter: 1
      ipAddress: "ipAddress"
      reseller: "reseller"
      serviceOptions:
      - serviceOptionId: 7
        groupName: "groupName"
        invoiceHide: "invoiceHide"
        name: "name"
        optionId: 1
        upgradeName: "upgradeName"
      - serviceOptionId: 7
        groupName: "groupName"
        invoiceHide: "invoiceHide"
        name: "name"
        optionId: 1
        upgradeName: "upgradeName"
      autoBill: true
      typeCode: "typeCode"
      childServices:
      - "{}"
      - "{}"
      serviceDiscount: 7.3862819483858839220147274318151175975799560546875
      resellerBmaasCharge: 6.683562403749608193948006373830139636993408203125
      contractTerm: 5
      bandwidthBilling:
        notification: "notification"
        billingMethod: "billingMethod"
        includedTransferUnit: "includedTransferUnit"
        overageUnit: "overageUnit"
      startDate: 1
      billedPricePerPeriod: 5.962133916683182377482808078639209270477294921875
      status: "status"
  ServiceOptionData:
    type: "object"
    properties:
      serviceOptionId:
        type: "integer"
      name:
        type: "string"
      optionId:
        type: "integer"
      upgradeName:
        type: "string"
      groupName:
        type: "string"
      invoiceHide:
        type: "string"
    example:
      serviceOptionId: 7
      groupName: "groupName"
      invoiceHide: "invoiceHide"
      name: "name"
      optionId: 1
      upgradeName: "upgradeName"
  ServiceBandwidthBilling:
    type: "object"
    properties:
      billingMethod:
        type: "string"
      includedTransferUnit:
        type: "string"
      notification:
        type: "string"
      overageUnit:
        type: "string"
    example:
      notification: "notification"
      billingMethod: "billingMethod"
      includedTransferUnit: "includedTransferUnit"
      overageUnit: "overageUnit"
  Service:
    type: "object"
    properties:
      serviceId:
        type: "integer"
      created:
        type: "integer"
      billedPrice:
        type: "number"
      billedPricePerPeriod:
        type: "number"
      serviceCost:
        type: "number"
      lastRenew:
        type: "integer"
      renewDate:
        type: "integer"
      quantity:
        type: "number"
      orderId:
        type: "integer"
      status:
        type: "string"
      period:
        type: "string"
      discount:
        type: "number"
      discountType:
        type: "string"
      discountedCost:
        type: "number"
      serviceDiscount:
        type: "number"
      serviceDiscountPerPeriod:
        type: "number"
      ipAddress:
        type: "string"
      cancelAfter:
        type: "integer"
      startDate:
        type: "integer"
      endDate:
        type: "integer"
      serviceOptions:
        type: "array"
        items:
          $ref: "#/definitions/ServiceOption"
      usage:
        type: "object"
        properties: {}
      serviceDevices:
        type: "array"
        items:
          type: "object"
          properties: {}
      childServices:
        type: "array"
        items:
          type: "object"
          properties: {}
      productId:
        type: "integer"
      productName:
        type: "string"
      reseller:
        type: "string"
      serviceType:
        type: "string"
      contractTerm:
        type: "integer"
      billingInfoId:
        type: "integer"
      autoBill:
        type: "boolean"
      colocationCharge:
        type: "number"
      resellerBmaasCharge:
        type: "number"
      facilityName:
        type: "string"
      typeCode:
        type: "string"
        description: "The service type code. The list of service types can be accessed\
          \ on https://core.hivelocity.net/api/v2/service/types ."
      bandwidthBilling:
        $ref: "#/definitions/ServiceBandwidthBilling"
    example:
      serviceType: "serviceType"
      discountedCost: 4.1456080298839363962315474054776132106781005859375
      orderId: 3
      endDate: 6
      billingInfoId: 4
      usage: "{}"
      discount: 2.027123023002321833274663731572218239307403564453125
      serviceDiscountPerPeriod: 1.231513536777255612975068288506008684635162353515625
      productName: "productName"
      lastRenew: 2
      colocationCharge: 5.02500479152029466689555192715488374233245849609375
      discountType: "discountType"
      facilityName: "facilityName"
      serviceId: 0
      renewDate: 7
      serviceDevices:
      - "{}"
      - "{}"
      period: "period"
      billedPrice: 1.46581298050294517310021547018550336360931396484375
      quantity: 9.301444243932575517419536481611430644989013671875
      productId: 7
      serviceCost: 5.63737665663332876420099637471139430999755859375
      created: 6
      cancelAfter: 1
      ipAddress: "ipAddress"
      reseller: "reseller"
      serviceOptions:
      - optionId: 0
        optionName: "optionName"
        upgradeName: "upgradeName"
        upgradeId: 6
      - optionId: 0
        optionName: "optionName"
        upgradeName: "upgradeName"
        upgradeId: 6
      autoBill: true
      typeCode: "typeCode"
      childServices:
      - "{}"
      - "{}"
      serviceDiscount: 7.3862819483858839220147274318151175975799560546875
      resellerBmaasCharge: 9.965781217890562260208753286860883235931396484375
      contractTerm: 1
      bandwidthBilling:
        notification: "notification"
        billingMethod: "billingMethod"
        includedTransferUnit: "includedTransferUnit"
        overageUnit: "overageUnit"
      startDate: 1
      billedPricePerPeriod: 5.962133916683182377482808078639209270477294921875
      status: "status"
  ServiceManageable:
    type: "object"
    properties:
      eligible:
        type: "boolean"
      os_detected:
        type: "string"
      panel_detected:
        type: "string"
    example:
      panel_detected: "panel_detected"
      eligible: true
      os_detected: "os_detected"
  ServiceManagedReq:
    type: "object"
    properties:
      eligible_os:
        type: "object"
        properties: {}
      eligible_panel:
        type: "object"
        properties: {}
    example:
      eligible_os: "{}"
      eligible_panel: "{}"
  ServiceType:
    type: "object"
    properties:
      name:
        type: "string"
        description: "The name of the service type"
      code:
        type: "string"
        description: "The unique Code of the service type"
    example:
      code: "code"
      name: "name"
  SshKey:
    type: "object"
    required:
    - "name"
    - "publicKey"
    properties:
      publicKey:
        type: "string"
        description: "Public key content (RSA or Ed25519 supported)"
      name:
        type: "string"
    example:
      name: "name"
      publicKey: "publicKey"
  SshKeyResponse:
    type: "object"
    properties:
      sshKeyId:
        type: "integer"
      name:
        type: "string"
      publicKey:
        type: "string"
    example:
      name: "name"
      publicKey: "publicKey"
      sshKeyId: 0
  SshKeyUpdate:
    type: "object"
    properties:
      publicKey:
        type: "string"
        description: "Public key content (RSA or Ed25519 supported)"
      name:
        type: "string"
    example:
      name: "name"
      publicKey: "publicKey"
  TicketCreate:
    type: "object"
    required:
    - "queue"
    - "subject"
    properties:
      status:
        type: "string"
        example: "open"
      queue:
        type: "string"
      assignment:
        type: "number"
        example: 0.0
      body:
        type: "string"
        example: ""
      subject:
        type: "string"
      source:
        type: "number"
        example: 0.0
      priority:
        type: "number"
        example: 0.0
    example:
      assignment: 0.0
      subject: "subject"
      source: 0.0
      body: ""
      priority: 0.0
      queue: "queue"
      status: "open"
  Ticket:
    type: "object"
    properties:
      status:
        type: "string"
        example: ""
      subject:
        type: "string"
        example: ""
      queue:
        type: "string"
        example: ""
      updated:
        type: "number"
        example: 0.0
      opened:
        type: "number"
        example: 1.707406648E9
      serviceId:
        type: "number"
        example: 0.0
      client:
        $ref: "#/definitions/Client"
      priority:
        type: "string"
        example: ""
      id:
        type: "number"
      posts:
        type: "number"
      contact:
        $ref: "#/definitions/Contact-dump"
      body:
        type: "string"
        example: ""
      newReply:
        type: "boolean"
      metaData:
        type: "object"
        properties: {}
      replies:
        type: "array"
        items:
          $ref: "#/definitions/TicketPost"
      clientId:
        type: "number"
      contactId:
        type: "number"
      duration:
        type: "number"
      internalTicket:
        type: "number"
    example:
      clientId: 1.231513536777255612975068288506008684635162353515625
      contactId: 1.024645700144157789424070870154537260532379150390625
      subject: ""
      opened: 1.707406648E9
      priority: ""
      body: ""
      posts: 1.46581298050294517310021547018550336360931396484375
      newReply: true
      duration: 1.489415909854170383397331534069962799549102783203125
      metaData: "{}"
      internalTicket: 6.8468526983526398765889098285697400569915771484375
      replies:
      - date: 7.3862819483858839220147274318151175975799560546875
        clientId: 7.061401241503109105224211816675961017608642578125
        attachments: 2.027123023002321833274663731572218239307403564453125
        hidden: 5.63737665663332876420099637471139430999755859375
        fromAdmin: true
        contactId: 2.3021358869347654518833223846741020679473876953125
        subject: ""
        body: ""
        ubersmith_attached_files:
        - name: ""
          id: 4.1456080298839363962315474054776132106781005859375
        - name: ""
          id: 4.1456080298839363962315474054776132106781005859375
        adminId: 9.301444243932575517419536481611430644989013671875
        from: {}
        id: 5.962133916683182377482808078639209270477294921875
        ticketId: 3.61607674925191080461672754609026014804840087890625
      - date: 7.3862819483858839220147274318151175975799560546875
        clientId: 7.061401241503109105224211816675961017608642578125
        attachments: 2.027123023002321833274663731572218239307403564453125
        hidden: 5.63737665663332876420099637471139430999755859375
        fromAdmin: true
        contactId: 2.3021358869347654518833223846741020679473876953125
        subject: ""
        body: ""
        ubersmith_attached_files:
        - name: ""
          id: 4.1456080298839363962315474054776132106781005859375
        - name: ""
          id: 4.1456080298839363962315474054776132106781005859375
        adminId: 9.301444243932575517419536481611430644989013671875
        from: {}
        id: 5.962133916683182377482808078639209270477294921875
        ticketId: 3.61607674925191080461672754609026014804840087890625
      contact:
        clientId: 1
        phone: "phone"
        contactId: 6
        referralCode: "referralCode"
        active: 0
        fullName: "fullName"
        description: "description"
        isClient: true
        email: "email"
      client:
        zip: "zip"
        country: "country"
        last: "last"
        city: "city"
        fullName: "fullName"
        isClient: true
        login: "login"
        metaData: {}
        company: "company"
        id: 0.80082819046101150206595775671303272247314453125
        state: "state"
        first: "first"
        email: "email"
      id: 6.02745618307040320615897144307382404804229736328125
      serviceId: 0.0
      updated: 0.0
      queue: ""
      status: ""
  Client:
    type: "object"
    properties:
      first:
        type: "string"
      id:
        type: "number"
      email:
        type: "string"
      city:
        type: "string"
      isClient:
        type: "boolean"
      company:
        type: "string"
      country:
        type: "string"
      zip:
        type: "string"
      fullName:
        type: "string"
      last:
        type: "string"
      login:
        type: "string"
      state:
        type: "string"
      metaData:
        type: "object"
        example: {}
        properties: {}
    example:
      zip: "zip"
      country: "country"
      last: "last"
      city: "city"
      fullName: "fullName"
      isClient: true
      login: "login"
      metaData: {}
      company: "company"
      id: 0.80082819046101150206595775671303272247314453125
      state: "state"
      first: "first"
      email: "email"
  TicketPost:
    type: "object"
    properties:
      id:
        type: "number"
      hidden:
        type: "number"
      contactId:
        type: "number"
      clientId:
        type: "number"
      adminId:
        type: "number"
      ticketId:
        type: "number"
      body:
        type: "string"
        example: ""
      from:
        type: "object"
        example: {}
        properties: {}
      subject:
        type: "string"
        example: ""
      attachments:
        type: "number"
      ubersmith_attached_files:
        type: "array"
        items:
          $ref: "#/definitions/TicketAttach"
      date:
        type: "number"
      fromAdmin:
        type: "boolean"
    example:
      date: 7.3862819483858839220147274318151175975799560546875
      clientId: 7.061401241503109105224211816675961017608642578125
      attachments: 2.027123023002321833274663731572218239307403564453125
      hidden: 5.63737665663332876420099637471139430999755859375
      fromAdmin: true
      contactId: 2.3021358869347654518833223846741020679473876953125
      subject: ""
      body: ""
      ubersmith_attached_files:
      - name: ""
        id: 4.1456080298839363962315474054776132106781005859375
      - name: ""
        id: 4.1456080298839363962315474054776132106781005859375
      adminId: 9.301444243932575517419536481611430644989013671875
      from: {}
      id: 5.962133916683182377482808078639209270477294921875
      ticketId: 3.61607674925191080461672754609026014804840087890625
  TicketAttach:
    type: "object"
    properties:
      name:
        type: "string"
        example: ""
      id:
        type: "number"
    example:
      name: ""
      id: 4.1456080298839363962315474054776132106781005859375
  TicketSeachResult:
    type: "object"
    properties:
      perPage:
        type: "integer"
      items:
        $ref: "#/definitions/TicketPost"
      total:
        type: "integer"
      page:
        type: "integer"
      hasNext:
        type: "boolean"
      prevPage:
        type: "integer"
      hasPrev:
        type: "boolean"
      nextPage:
        type: "integer"
      pages:
        type: "integer"
    example:
      total: 6
      perPage: 0
      pages: 2
      hasPrev: true
      nextPage: 5
      hasNext: true
      prevPage: 5
      page: 1
      items:
        date: 7.3862819483858839220147274318151175975799560546875
        clientId: 7.061401241503109105224211816675961017608642578125
        attachments: 2.027123023002321833274663731572218239307403564453125
        hidden: 5.63737665663332876420099637471139430999755859375
        fromAdmin: true
        contactId: 2.3021358869347654518833223846741020679473876953125
        subject: ""
        body: ""
        ubersmith_attached_files:
        - name: ""
          id: 4.1456080298839363962315474054776132106781005859375
        - name: ""
          id: 4.1456080298839363962315474054776132106781005859375
        adminId: 9.301444243932575517419536481611430644989013671875
        from: {}
        id: 5.962133916683182377482808078639209270477294921875
        ticketId: 3.61607674925191080461672754609026014804840087890625
  TicketPut:
    type: "object"
    properties:
      status:
        type: "string"
        example: ""
    example:
      status: ""
  TicketCreateReply:
    type: "object"
    required:
    - "body"
    properties:
      headers:
        type: "string"
      hidden:
        type: "number"
      contactId:
        type: "number"
      encrypted:
        type: "string"
      type:
        type: "number"
      cc:
        type: "string"
      body:
        type: "string"
      recipient:
        type: "string"
      subject:
        type: "string"
      attachments:
        type: "array"
        example:
        - name: ""
          file: ""
        items:
          type: "object"
          properties: {}
      replyTo:
        type: "string"
      date:
        type: "number"
    example:
      cc: "cc"
      date: 5.962133916683182377482808078639209270477294921875
      headers: "headers"
      attachments:
      - name: ""
        file: ""
      hidden: 0.80082819046101150206595775671303272247314453125
      encrypted: "encrypted"
      contactId: 6.02745618307040320615897144307382404804229736328125
      subject: "subject"
      recipient: "recipient"
      replyTo: "replyTo"
      type: 1.46581298050294517310021547018550336360931396484375
      body: "body"
  DeleteApiToken-load:
    type: "object"
    properties:
      apiTokenId:
        type: "string"
  PublicApiToken:
    type: "object"
    properties:
      ipAddresses:
        $ref: "#/definitions/PublicApiTokenIp"
      name:
        type: "string"
      timeExpiration:
        type: "string"
        format: "date-time"
        description: "Token expiration datetime in Unix time format."
    example:
      name: "name"
      ipAddresses:
        name: "name"
        ips:
        - "ips"
        - "ips"
      timeExpiration: "2000-01-23T04:56:07.000+00:00"
  PublicApiTokenIp:
    type: "object"
    required:
    - "ips"
    properties:
      name:
        type: "string"
      ips:
        type: "array"
        items:
          type: "string"
    example:
      name: "name"
      ips:
      - "ips"
      - "ips"
  PublicApiToken-load:
    type: "object"
    properties:
      apiTokenId:
        type: "string"
      name:
        type: "string"
  PublicApiHideToken-dump:
    type: "object"
    required:
    - "timeExpiration"
    - "token"
    properties:
      ipAddresses:
        $ref: "#/definitions/PublicApiTokenIp"
      apiTokenId:
        type: "string"
      timeCreated:
        type: "string"
        format: "date-time"
      name:
        type: "string"
      token:
        type: "string"
      timeUpdated:
        type: "string"
        format: "date-time"
      timeExpiration:
        type: "string"
        format: "date-time"
        description: "Token expiration datetime in UTC format."
    example:
      apiTokenId: "apiTokenId"
      timeUpdated: "2000-01-23T04:56:07.000+00:00"
      name: "name"
      ipAddresses:
        name: "name"
        ips:
        - "ips"
        - "ips"
      timeCreated: "2000-01-23T04:56:07.000+00:00"
      timeExpiration: "2000-01-23T04:56:07.000+00:00"
      token: "token"
  PublicApiTokenResponsePost-dump:
    type: "object"
    required:
    - "timeExpiration"
    - "token"
    properties:
      ipAddresses:
        $ref: "#/definitions/PublicApiTokenIp"
      apiTokenId:
        type: "string"
      timeCreated:
        type: "string"
        format: "date-time"
      name:
        type: "string"
      token:
        type: "string"
      timeUpdated:
        type: "string"
        format: "date-time"
      timeExpiration:
        type: "string"
        format: "date-time"
        description: "Token expiration datetime in UTC format."
    example:
      apiTokenId: "apiTokenId"
      timeUpdated: "2000-01-23T04:56:07.000+00:00"
      name: "name"
      ipAddresses:
        name: "name"
        ips:
        - "ips"
        - "ips"
      timeCreated: "2000-01-23T04:56:07.000+00:00"
      timeExpiration: "2000-01-23T04:56:07.000+00:00"
      token: "token"
  VlanCreate:
    type: "object"
    required:
    - "facilityCode"
    - "type"
    properties:
      facilityCode:
        type: "string"
        description: "The Facility where the VLAN will be created, for example: `NYC1`.\
          \ Only Devices from the same Facility are allowed in the VLANs."
      type:
        type: "string"
        example: "private"
        description: "Choose `public` if you want to be able to assign IPs to the\
          \ VLAN, making it reachable from the internet. Choose `private` if the VLAN\
          \ should never be reachable from the internet. All VLANs are subject to\
          \ traffic billing and overages, with the exception of private VLAN traffic\
          \ on unbonded Devices."
        enum:
        - "public"
        - "private"
    example:
      facilityCode: "facilityCode"
      type: "private"
  Vlan:
    type: "object"
    properties:
      ipIds:
        type: "array"
        description: "Unique IDs of IP Assignments."
        items:
          type: "integer"
      vlanTag:
        type: "integer"
        description: "The VLAN Tag id from the switch. Use this value when configuring\
          \ your OS interfaces to use the VLAN."
      qInQ:
        type: "boolean"
        description: "If true, VLAN is configured in Q-in-Q Mode. Automation is not\
          \ currently supported on Q-in-Q VLANs."
      type:
        type: "string"
        description: "If `public`, this VLAN can have IPs assigned to become reachable\
          \ from the internet. If `private`, this VLAN can not have IPs assigned and\
          \ will never be reachabled from the internet. All VLANs are subject to traffic\
          \ billing and overages, with the exception of private VLAN traffic on unbonded\
          \ Devices."
      facilityCode:
        type: "string"
        description: "For example: `NYC1`."
      automated:
        type: "boolean"
        description: "If true, VLAN can be automated via API. If false, contact support\
          \ to enable automation."
      portIds:
        type: "array"
        description: "Unique IDs of ports or bonds."
        items:
          type: "integer"
      vlanId:
        type: "integer"
        description: "Unique ID of the VLAN."
    example:
      facilityCode: "facilityCode"
      automated: true
      vlanTag: 6
      vlanId: 5
      portIds:
      - 1
      - 1
      ipIds:
      - 0
      - 0
      type: "type"
      qInQ: true
  VlanUpdate:
    type: "object"
    required:
    - "portIds"
    properties:
      ipIds:
        type: "array"
        description: "Unique IDs of IP Assignments."
        items:
          type: "integer"
      portIds:
        type: "array"
        description: "Unique IDs of ports or bonds."
        items:
          type: "integer"
    example:
      portIds:
      - 6
      - 6
      ipIds:
      - 0
      - 0
  VPS:
    type: "object"
    properties:
      isoId:
        type: "string"
        description: "The unique ID of the VPS ISO."
      status:
        type: "string"
        description: "VPS Instance Status. Example: `Running`"
      sshKeyIds:
        type: "array"
        description: "List of SSH Key IDs"
        items:
          type: "integer"
      cloudInit:
        type: "string"
        description: "Cloud-init script"
      vcpu:
        type: "integer"
        description: "Number of vCPUs"
      memory:
        type: "integer"
        description: "Memory in MB"
      facilityCode:
        type: "string"
        description: "Facility Code. Example: `LAX3`"
      deviceId:
        type: "integer"
        description: "Device ID"
      password:
        type: "string"
        description: "VPS Instance root password"
      nics:
        type: "array"
        items:
          type: "object"
          description: "Network Interfaces"
          allOf:
          - $ref: "#/definitions/VPSNetworkInterface"
      templateId:
        type: "string"
        description: "Template used for the install"
    example:
      facilityCode: "facilityCode"
      cloudInit: "cloudInit"
      password: "password"
      memory: 1
      vcpu: 6
      nics:
      - ""
      - ""
      templateId: "templateId"
      isoId: "isoId"
      deviceId: 5
      sshKeyIds:
      - 0
      - 0
      status: "status"
  VPSNetworkInterface:
    type: "object"
    properties:
      ipv6Cidr:
        type: "string"
        description: "The IPv6 CIDR assigned to the VPS instance NIC."
      netmask:
        type: "string"
        description: "The netmask assigned to the VPS instance NIC."
      ipv6Gateway:
        type: "string"
        description: "The IPv6 gateway assigned to the VPS instance NIC."
      nicName:
        type: "string"
        description: "The name of the VPS instance NIC."
      vlanTag:
        type: "integer"
        description: "The VLAN tag of the VPS Network. This will be returned for VLAN\
          \ enabled networks."
      macAddress:
        type: "string"
        description: "The MAC address of the VPS instance NIC."
      gateway:
        type: "string"
        description: "The gateway assigned to the VPS instance NIC."
      nicId:
        type: "string"
        description: "The unique ID of the VPS instance NIC."
      networkName:
        type: "string"
        description: "The name of the VPS Network."
      ipv6Address:
        type: "string"
        description: "The IPv6 address assigned to the VPS instance NIC."
      networkId:
        type: "string"
        description: "The unique ID of the VPS Network."
      vlanId:
        type: "integer"
        description: "The VLAN ID of the VPS Network. This will be returned for VLAN\
          \ enabled networks."
      ipAddress:
        type: "string"
        description: "The IP address assigned to the VPS instance NIC."
  VPSUpdate:
    type: "object"
    properties:
      cloudInit:
        type: "string"
        description: "Cloud-init script"
      productId:
        type: "integer"
        description: "ID of VPS product to scale to"
      sshKeyIds:
        type: "array"
        description: "List of SSH Key IDs"
        items:
          type: "integer"
  VPSResetRootPassword:
    type: "object"
    required:
    - "token"
    properties:
      token:
        type: "string"
        description: "The token used to reset the root password for the VPS instance."
  VPSMetricsResponse:
    type: "object"
    properties:
      metricType:
        type: "string"
        description: "The Metric Type requested."
      startTime:
        type: "integer"
        description: "Actual Start Time for Chart Data."
      imageData:
        type: "string"
        description: "Base64 encoded Image Data."
      endTime:
        type: "integer"
        description: "Actual End Time for Chart Data."
    example:
      metricType: "metricType"
      imageData: "imageData"
      startTime: 0
      endTime: 6
  VPSConsoleAccess:
    type: "object"
    properties:
      url:
        type: "string"
        description: "URL for console access"
    example:
      url: "url"
  VPSEvent:
    type: "object"
    properties:
      type:
        type: "string"
        description: "The type of event being logged for the VPS instance."
      eventId:
        type: "string"
        description: "The unique ID corresponding to the event recorded."
      createdAt:
        type: "string"
        format: "date-time"
        description: "The created date/time of the VPS instance event."
      level:
        type: "string"
        description: "The level of the event ie. INFO, ERROR or WARNING."
      state:
        type: "string"
        description: "The state of the event at the time of recording ie. Scheduled,\
          \ Started or Completed."
    example:
      eventId: "eventId"
      createdAt: "2000-01-23T04:56:07.000+00:00"
      level: "level"
      state: "state"
      type: "type"
  VPSInstanceNetworkAdd:
    type: "object"
    properties:
      networkId:
        type: "string"
        description: "The unique ID of the network to add to the VPS instance."
  VPSNetworkCreate:
    type: "object"
    required:
    - "facilityCode"
    properties:
      facilityCode:
        type: "string"
        description: "The facility code where the VPS Network should be created. For\
          \ example: `TPA1`."
      name:
        type: "string"
        description: "The name of the VPS Network."
      vlanId:
        type: "integer"
        description: "The VLAN ID of the VPS Network. This will make the network bridgeble\
          \ to dedicated servers."
      clientId:
        type: "integer"
        description: "The unique client account ID."
  VPSNetwork:
    type: "object"
    properties:
      vlanTag:
        type: "integer"
        description: "The VLAN tag of the VPS Network. This will be returned for VLAN\
          \ enabled networks."
      facilityCode:
        type: "string"
        description: "The facility code associated with the VPS Network. For example:\
          \ `TPA1`."
      name:
        type: "string"
        description: "The name of the VPS Network."
      networkId:
        type: "string"
        description: "The unique ID of the VPS Network."
      vlanId:
        type: "integer"
        description: "The VLAN ID of the VPS Network. This will be returned for VLAN\
          \ enabled networks."
    example:
      facilityCode: "facilityCode"
      vlanTag: 0
      vlanId: 6
      name: "name"
      networkId: "networkId"
  VPSNetworkUpdate:
    type: "object"
    required:
    - "name"
    properties:
      name:
        type: "string"
        description: "The name of the VPS Network."
  VPSISOCreate:
    type: "object"
    required:
    - "bootable"
    - "description"
    - "facilityCode"
    - "name"
    - "url"
    properties:
      clientId:
        type: "integer"
        description: "The unique client account ID."
      facilityCode:
        type: "string"
        description: "The facility code associated wth the VPS instance.  For example:TPA1."
      name:
        type: "string"
        description: "The name of the VPS instance ISO."
      description:
        type: "string"
        description: "The description of the VPS instance ISO."
      bootable:
        type: "boolean"
        description: "Determines whether the VPS instance ISO is bootable or not."
      url:
        type: "string"
        description: "The URL to be directed to when downloading the VPS instance\
          \ ISO."
  VPSISO:
    type: "object"
    properties:
      isoId:
        type: "string"
        description: "The unique ID of the VPS instance ISO."
      status:
        type: "string"
        description: "The status of the VPS instance ISO."
      deviceIds:
        type: "array"
        description: "These are the device IDs with the ISO attached."
        items:
          type: "integer"
      size:
        type: "integer"
        description: "The size of the VPS instance ISO."
      ready:
        type: "boolean"
        description: "The ready state of the VPS instance ISO."
      facilityCode:
        type: "string"
        description: "The facility code associated with the ISO instance. For example:TPA1."
      name:
        type: "string"
        description: "The name of the VPS instance ISO."
      description:
        type: "string"
        description: "The description of the VPS instance ISO."
      bootable:
        type: "boolean"
        description: "Determines whether the VPS instance ISO is bootable or not."
      url:
        type: "string"
        description: "The URL to be directed to when downloading the VPS instance\
          \ ISO."
    example:
      facilityCode: "facilityCode"
      deviceIds:
      - 0
      - 0
      size: 6
      ready: true
      name: "name"
      description: "description"
      isoId: "isoId"
      bootable: true
      url: "url"
      status: "status"
  VPSISOAttach:
    type: "object"
    required:
    - "isoId"
    properties:
      isoId:
        type: "string"
        description: "The unique ID of the VPS instance ISO."
  VPSVolumeCreate:
    type: "object"
    required:
    - "deviceId"
    - "size"
    properties:
      deviceId:
        type: "integer"
        description: "Device ID to attach the disk to"
      size:
        type: "integer"
        description: "Disk size in GiB"
  VPSVolume:
    type: "object"
    properties:
      type:
        type: "string"
        description: "Disk type. Options are `ROOT` for root volumes and `DATADISK`\
          \ for additional disks."
      facilityCode:
        type: "string"
        description: "The facility code associated with the VPS Volume. For example:\
          \ `TPA1`."
      deviceId:
        type: "integer"
        description: "Device ID the disk is attached to"
      createdAt:
        type: "string"
        format: "date-time"
        description: "The created date/time of the VPS instance volume."
      volumeId:
        type: "string"
        description: "The unique VPS instance volume ID."
      size:
        type: "integer"
        description: "Disk size in bytes"
    example:
      facilityCode: "facilityCode"
      createdAt: "2000-01-23T04:56:07.000+00:00"
      size: 6
      volumeId: "volumeId"
      type: "type"
      deviceId: 0
  VPSAvailableNewVolumeSizes:
    type: "object"
    properties:
      volumeProducts:
        type: "array"
        description: "List volume products that can be created"
        items:
          $ref: "#/definitions/VPSVolumeProduct"
    example:
      volumeProducts:
      - size: 0
        monthlyPrice: 6.02745618307040320615897144307382404804229736328125
      - size: 0
        monthlyPrice: 6.02745618307040320615897144307382404804229736328125
  VPSVolumeProduct:
    type: "object"
    properties:
      size:
        type: "integer"
        description: "Size of available volume size in GiB"
      monthlyPrice:
        type: "number"
        description: "Monthly cost of volume size"
    example:
      size: 0
      monthlyPrice: 6.02745618307040320615897144307382404804229736328125
  VPSAvailableUpgradeSizes:
    type: "object"
    properties:
      volumeProducts:
        type: "array"
        description: "List volume products to upgrade to for volume (in GiB)"
        items:
          $ref: "#/definitions/VPSVolumeProduct"
    example:
      volumeProducts:
      - size: 0
        monthlyPrice: 6.02745618307040320615897144307382404804229736328125
      - size: 0
        monthlyPrice: 6.02745618307040320615897144307382404804229736328125
  VPSVolumeDelete:
    type: "object"
    properties:
      deviceId:
        type: "integer"
        description: "Device ID the disk is attached to"
  VPSVolumeUpdate:
    type: "object"
    required:
    - "size"
    properties:
      deviceId:
        type: "integer"
        description: "Device ID the disk is attached to"
      size:
        type: "integer"
        description: "Disk size in GiB"
  VPSSnapshotCreate:
    type: "object"
    required:
    - "facilityCode"
    - "name"
    - "volumeId"
    properties:
      facilityCode:
        type: "string"
        description: "The facility code associated with the VPS instance. For example:TPA1."
      name:
        type: "string"
        description: "The name of the VPS instance snapshot."
      clientId:
        type: "integer"
        description: "The unique client account ID."
      volumeId:
        type: "string"
        description: "The unique VPS instance volume ID the snapshot is taken of."
  VPSSnapshot:
    type: "object"
    properties:
      snapshotId:
        type: "string"
        description: "The unique ID associated with the snapshot."
      snapshotType:
        type: "string"
        description: "Snapshot interval options: HOURLY, DAILY, WEEKLY, MONTHLY."
      name:
        type: "string"
        description: "The name of the VPS instance snapshot."
      createdAt:
        type: "string"
        format: "date-time"
        description: "The created date/tie of the VPS instance snapshot."
      volumeId:
        type: "string"
        description: "The unique VPS instance volume ID the snapshot is taken of."
      size:
        type: "integer"
        description: "Snapshot size in bytes"
      state:
        type: "string"
        description: "The state of the snapshot ie. Scheduled, Started or Completed."
    example:
      createdAt: "2000-01-23T04:56:07.000+00:00"
      snapshotId: "snapshotId"
      snapshotType: "snapshotType"
      size: 0
      name: "name"
      volumeId: "volumeId"
      state: "state"
  VPSSnapshotRestore:
    type: "object"
    required:
    - "facilityCode"
    properties:
      facilityCode:
        type: "string"
        description: "The facility code associated with the VPS instance. For example:TPA1."
      clientId:
        type: "integer"
        description: "The unique client acount ID."
  VPSSnapshotScheduleCreate:
    type: "object"
    required:
    - "facilityCode"
    - "hour"
    - "intervalType"
    - "maxSnapshots"
    - "minute"
    - "timezone"
    - "volumeId"
    properties:
      weekday:
        type: "integer"
        description: "The day of the week to run the snapshot process (1-7 with 1\
          \ being Monday). This is required for Weekly."
      hour:
        type: "integer"
        description: "The hour of the day to run the snapshot process (0-23)."
      day:
        type: "integer"
        description: "The day of the month to run th snapshot process (1-28). This\
          \ is required for Monthly."
      timezone:
        type: "string"
        description: "Timezone in IANA format. Example: `America/New_York`"
      clientId:
        type: "integer"
        description: "The unique client account ID."
      facilityCode:
        type: "string"
        description: "The facility code associated witht he VPS instance. For example:TPA1."
      minute:
        type: "integer"
        description: "The minute of the hour to run the snapshot process (0-59)."
      volumeId:
        type: "string"
        description: "The unique ID of the VPS instance volume to take a snapshot\
          \ of."
      intervalType:
        type: "string"
        description: "Options: `HOURLY`, `DAILY`, `WEEKLY`, `MONTHLY`"
      maxSnapshots:
        type: "integer"
        description: "The maximum number of snapshots to retain at a time for this\
          \ schedule."
  VPSSnapshotSchedule:
    type: "object"
    properties:
      weekday:
        type: "integer"
        description: "The day of the week to run the snapshot process (1-7 with 1\
          \ being Monday)."
      hour:
        type: "integer"
        description: "The hour of the day to run the snapshot process (0-23)."
      day:
        type: "integer"
        description: "The day of the month to run the snapshot process (1-28)."
      timezone:
        type: "string"
        description: "The timezone to use for the snapshot schedule in IANA format.\
          \ Example: America/New_York."
      minute:
        type: "integer"
        description: "The minute of the hour to run the snapshot process (0-59)."
      volumeId:
        type: "string"
        description: "The unique ID of the VPS instance volume to take a snapshot\
          \ of."
      snapshotScheduleId:
        type: "string"
        description: "The unique ID associated with the snapshot schedule."
      intervalType:
        type: "string"
        description: "Snapshot interval options: HOURLY, DAILY, WEEKLY, MONTHLY."
      maxSnapshots:
        type: "integer"
        description: "The maximum number of snapshots to take within the interval\
          \ period."
    example:
      maxSnapshots: 5
      intervalType: "intervalType"
      hour: 6
      timezone: "timezone"
      weekday: 0
      volumeId: "volumeId"
      day: 1
      snapshotScheduleId: "snapshotScheduleId"
      minute: 5
  WebhookEvent:
    type: "object"
    required:
    - "desc"
    - "name"
    properties:
      name:
        type: "string"
      desc:
        type: "string"
    example:
      name: "name"
      desc: "desc"
  WebhookCreate:
    type: "object"
    required:
    - "event"
    - "url"
    properties:
      name:
        type: "string"
        example: "My Webhook"
      event:
        type: "string"
      url:
        type: "string"
      headers:
        type: "object"
        example: {}
        properties: {}
    example:
      headers: {}
      name: "My Webhook"
      event: "event"
      url: "url"
  Webhook:
    type: "object"
    required:
    - "event"
    - "name"
    - "url"
    - "webhookId"
    properties:
      webhookId:
        type: "integer"
      name:
        type: "string"
      event:
        type: "string"
      url:
        type: "string"
      headers:
        type: "object"
        properties: {}
    example:
      headers: "{}"
      webhookId: 0
      name: "name"
      event: "event"
      url: "url"
  WebhookUpdate:
    type: "object"
    properties:
      name:
        type: "string"
        example: "My Webhook"
      event:
        type: "string"
      url:
        type: "string"
      headers:
        type: "object"
        example: {}
        properties: {}
    example:
      headers: {}
      name: "My Webhook"
      event: "event"
      url: "url"
  ValidateCartCoupondump_coupon:
    type: "object"
    description: "The coupon object."
  Location_location:
    type: "object"
    description: "JSON city info: city, state, & country."
responses:
  ParseError:
    description: "When a mask can't be parsed"
  MaskError:
    description: "When any error occurs on mask"
