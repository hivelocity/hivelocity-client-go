---
swagger: "2.0"
info:
  description: "Interact with Hivelocity"
  version: "2.0"
  title: "Hivelocity API"
host: "core.hivelocity.net"
basePath: "/api/v2"
tags:
- name: "Account"
  description: "Endpoints to manage Account"
- name: "Bandwidth"
  description: "Request Bandwidth Data."
- name: "Bare Metal Devices"
  description: "Endpoints to handle bare metal devices."
- name: "BillingInfo"
  description: "Endpoints to manage Billing Info"
- name: "Cancellations"
  description: "Cancellation information"
- name: "Contact"
  description: "Endpoints to manager Contacts"
- name: "Credit"
  description: "Endpoints to manage Credit"
- name: "Device"
  description: "Access to your Bare-Metal or Virtual Devices"
- name: "Domains"
  description: "Manage your DNS Domains"
- name: "Ignition"
  description: "Endpoints to manage CoreOS ignition files."
- name: "Inventory"
  description: "Products Inventory Data"
- name: "Invoice"
  description: "Invoice information and PDF download"
- name: "IPAssignment"
  description: "Endpoints to manage IP Assignments"
- name: "Network"
  description: "Endpoints to perform network related tasks"
- name: "Order"
  description: "Get Order and its details"
- name: "Order Groups"
  description: "Endpoints to manage Order Groups"
- name: "Permission"
  description: "Endpoints to manage Permissions"
- name: "Product"
  description: "Endpoints to manage Products"
- name: "Profile"
  description: "Endpoints to manage Profiles"
- name: "Deployment"
  description: "Endpoints to handle your servers provisioning"
- name: "Service"
  description: "Service information"
- name: "SshKey"
  description: "Endpoints to manage SSH key."
- name: "Ticket"
  description: "Ticket information"
- name: "Token"
  description: "Endpoints to manage Public API Token"
- name: "VLAN"
  description: "Endpoints to manage VLANs"
- name: "Webhook"
  description: "Access and modify your Hivelocity webhooks."
schemes:
- "https"
consumes:
- "application/json"
produces:
- "application/json"
security:
- apiKey: []
paths:
  /account/controlled-client:
    get:
      tags:
      - "Account"
      summary: "Get all controlled clients for enterprise owner"
      operationId: "get_account_create"
      parameters:
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Success"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/ControlledClient-dump"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
    post:
      tags:
      - "Account"
      summary: "Create controlled client for enterprise owner"
      operationId: "post_account_create"
      parameters:
      - in: "body"
        name: "payload"
        required: true
        schema:
          $ref: "#/definitions/CreateEnterpriseControlledClient"
        x-exportParamName: "Payload"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "201":
          description: "Success"
          schema:
            $ref: "#/definitions/ClientCreate-dump"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
    put:
      tags:
      - "Account"
      summary: "Deactivate client"
      operationId: "put_account_create"
      parameters:
      - in: "body"
        name: "payload"
        required: true
        schema:
          $ref: "#/definitions/DeactivateEnterpriseControlledClient"
        x-exportParamName: "Payload"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/ControlledClient-dump"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
  /bandwidth/device/{deviceId}:
    post:
      tags:
      - "Bandwidth"
      summary: "Get data by device"
      operationId: "post_device_id_bandwidth_resource"
      parameters:
      - name: "deviceId"
        in: "path"
        description: "ID of Device to View"
        required: true
        type: "integer"
        x-exportParamName: "DeviceId"
      - name: "period"
        in: "query"
        description: "Return data in the given period. Day, week, month will return\
          \ the previous day, week, month from now."
        required: true
        type: "string"
        default: "day"
        enum:
        - "day"
        - "week"
        - "month"
        - "custom"
        x-exportParamName: "Period"
      - name: "interface"
        in: "query"
        description: "Network interface to get bandwidth usage from. eth0 and eth1\
          \ are your first and second nic respectively. If unsure use the public,\
          \ private, and all values. Overages are billed on public traffic."
        required: true
        type: "string"
        default: "eth0"
        enum:
        - "eth0"
        - "eth1"
        - "public"
        - "private"
        - "all"
        x-exportParamName: "Interface_"
      - name: "historical"
        in: "query"
        description: "If you are a reseller, this will include historical interface\
          \ data for device regardless of the current device owner."
        required: false
        type: "boolean"
        default: false
        x-exportParamName: "Historical"
        x-optionalDataType: "Bool"
      - name: "step"
        in: "query"
        description: "Interval of data in seconds. Historical data is condensed, if\
          \ provided value is smaller than existing steps for the date range the endpoint\
          \ will return data with the smallest available step."
        required: true
        type: "integer"
        default: 300
        x-exportParamName: "Step"
      - name: "start"
        in: "query"
        description: "Start time of custom time period. (Unix Epoch Time)"
        required: false
        type: "integer"
        default: 0
        x-exportParamName: "Start"
        x-optionalDataType: "Int32"
      - name: "end"
        in: "query"
        description: "End time of custom time period (Unix Epoch Time)"
        required: false
        type: "integer"
        default: 1678795545
        x-exportParamName: "End"
        x-optionalDataType: "Int32"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Device Bandwidth Graph retrieved."
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Bandwidth"
        "400":
          description: "Unable to retrieve Bandwidth Graph for this Device."
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
  /bandwidth/device/{deviceId}/image:
    post:
      tags:
      - "Bandwidth"
      summary: "Get PNG by device"
      operationId: "post_device_id_bandwidth_image_resource"
      parameters:
      - name: "deviceId"
        in: "path"
        description: "ID of Device to View"
        required: true
        type: "integer"
        x-exportParamName: "DeviceId"
      - name: "period"
        in: "query"
        description: "Return data in the given period. Day, week, month will return\
          \ the previous day, week, month from now."
        required: true
        type: "string"
        default: "day"
        enum:
        - "day"
        - "week"
        - "month"
        - "custom"
        x-exportParamName: "Period"
      - name: "interface"
        in: "query"
        description: "Network interface to get bandwidth usage from. eth0 and eth1\
          \ are your first and second nic respectively. If unsure use the public,\
          \ private, and all values. Overages are billed on public traffic."
        required: true
        type: "string"
        default: "eth0"
        enum:
        - "eth0"
        - "eth1"
        - "public"
        - "private"
        - "all"
        x-exportParamName: "Interface_"
      - name: "start"
        in: "query"
        description: "Start Time of Custom Time Period. (Unix Epoch Time)"
        required: false
        type: "integer"
        default: 0
        x-exportParamName: "Start"
        x-optionalDataType: "Int32"
      - name: "end"
        in: "query"
        description: "End Time of Custom Time Period (Unix Epoch Time)"
        required: false
        type: "integer"
        default: 1678795545
        x-exportParamName: "End"
        x-optionalDataType: "Int32"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Device Bandwidth Graph retrieved."
          schema:
            type: "array"
            items:
              $ref: "#/definitions/BandwidthImage"
        "400":
          description: "Unable to retrieve Bandwidth Graph for this Device."
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
  /bandwidth/service/{serviceId}:
    post:
      tags:
      - "Bandwidth"
      summary: "Get data by service"
      operationId: "post_service_id_bandwidth_resource"
      parameters:
      - name: "serviceId"
        in: "path"
        description: "ID of Service to View"
        required: true
        type: "integer"
        x-exportParamName: "ServiceId"
      - name: "period"
        in: "query"
        description: "Return data in the given period. Day, week, month will return\
          \ the previous day, week, month from now."
        required: true
        type: "string"
        default: "day"
        enum:
        - "day"
        - "week"
        - "month"
        - "custom"
        x-exportParamName: "Period"
      - name: "interface"
        in: "query"
        description: "Network interface to get bandwidth usage from. eth0 and eth1\
          \ are your first and second nic respectively. If unsure use the public,\
          \ private, and all values. Overages are billed on public traffic."
        required: true
        type: "string"
        default: "eth0"
        enum:
        - "eth0"
        - "eth1"
        - "public"
        - "private"
        - "all"
        x-exportParamName: "Interface_"
      - name: "step"
        in: "query"
        description: "Interval of data in seconds. Historical data is condensed, if\
          \ provided value is smaller than existing steps for the date range the endpoint\
          \ will return data with the smallest available step."
        required: true
        type: "integer"
        default: 300
        x-exportParamName: "Step"
      - name: "start"
        in: "query"
        description: "Start Time of Custom Time Period. (Unix Epoch Time)"
        required: false
        type: "integer"
        default: 0
        x-exportParamName: "Start"
        x-optionalDataType: "Int32"
      - name: "end"
        in: "query"
        description: "End Time of Custom Time Period (Unix Epoch Time)"
        required: false
        type: "integer"
        default: 1678795545
        x-exportParamName: "End"
        x-optionalDataType: "Int32"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Service Bandwidth Graph retrieved."
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Bandwidth"
        "400":
          description: "Unable to retrieve Bandwidth Graph for this Service."
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
  /bandwidth/service/{serviceId}/image:
    post:
      tags:
      - "Bandwidth"
      summary: "Get PNG by service"
      operationId: "post_service_id_bandwidth_image_resource"
      parameters:
      - name: "serviceId"
        in: "path"
        description: "ID of Service to View"
        required: true
        type: "integer"
        x-exportParamName: "ServiceId"
      - name: "period"
        in: "query"
        description: "Return data in the given period. Day, week, month will return\
          \ the previous day, week, month from now."
        required: true
        type: "string"
        default: "day"
        enum:
        - "day"
        - "week"
        - "month"
        - "custom"
        x-exportParamName: "Period"
      - name: "interface"
        in: "query"
        description: "Network interface to get bandwidth usage from. eth0 and eth1\
          \ are your first and second nic respectively. If unsure use the public,\
          \ private, and all values. Overages are billed on public traffic."
        required: true
        type: "string"
        default: "eth0"
        enum:
        - "eth0"
        - "eth1"
        - "public"
        - "private"
        - "all"
        x-exportParamName: "Interface_"
      - name: "start"
        in: "query"
        description: "Start Time of Custom Time Period. (Unix Epoch Time)"
        required: false
        type: "integer"
        default: 0
        x-exportParamName: "Start"
        x-optionalDataType: "Int32"
      - name: "end"
        in: "query"
        description: "End Time of Custom Time Period (Unix Epoch Time)"
        required: false
        type: "integer"
        default: 1678795545
        x-exportParamName: "End"
        x-optionalDataType: "Int32"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Service Bandwidth Graph retrieved."
          schema:
            type: "array"
            items:
              $ref: "#/definitions/BandwidthImage"
        "400":
          description: "Unable to retrieve Bandwidth Graph for this Service."
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
  /bare-metal-devices/:
    get:
      tags:
      - "Bare Metal Devices"
      summary: "Get all devices"
      operationId: "get_bare_metal_device_resource"
      parameters:
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Devices found successfuly"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/BareMetalDevice"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
    post:
      tags:
      - "Bare Metal Devices"
      summary: "Provision an instant device"
      operationId: "post_bare_metal_device_resource"
      parameters:
      - in: "body"
        name: "payload"
        required: true
        schema:
          $ref: "#/definitions/BareMetalDeviceCreate"
        x-exportParamName: "Payload"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/BareMetalDevice"
        "201":
          description: "Device provisioning started"
        "400":
          description: "Invalid device parameters."
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
  /bare-metal-devices/batch:
    post:
      tags:
      - "Bare Metal Devices"
      summary: "Batch provision instant devices"
      operationId: "post_bare_metal_device_batch_resource"
      parameters:
      - in: "body"
        name: "payload"
        required: true
        schema:
          $ref: "#/definitions/BareMetalDeviceBatchCreate"
        x-exportParamName: "Payload"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/BareMetalDeviceBatch"
        "201":
          description: "Device provisioning started"
        "400":
          description: "Invalid device parameters."
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
  /bare-metal-devices/{deviceId}:
    get:
      tags:
      - "Bare Metal Devices"
      summary: "Get device"
      operationId: "get_bare_metal_device_id_resource"
      parameters:
      - name: "deploymentId"
        in: "query"
        description: "Id of the deployment to interact with"
        required: false
        type: "string"
        x-exportParamName: "DeploymentId"
        x-optionalDataType: "String"
      - name: "deviceId"
        in: "path"
        required: true
        type: "integer"
        x-exportParamName: "DeviceId"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Deployment Found"
          schema:
            $ref: "#/definitions/BareMetalDevice"
        "401":
          description: "Access to Deployment not Allowed"
        "404":
          description: "Deployment Not Found"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
    put:
      tags:
      - "Bare Metal Devices"
      summary: "Update/reload instant device"
      operationId: "put_bare_metal_device_id_resource"
      parameters:
      - name: "deploymentId"
        in: "query"
        description: "Id of the deployment to interact with"
        required: false
        type: "string"
        x-exportParamName: "DeploymentId"
        x-optionalDataType: "String"
      - name: "deviceId"
        in: "path"
        required: true
        type: "integer"
        x-exportParamName: "DeviceId"
      - in: "body"
        name: "payload"
        required: true
        schema:
          $ref: "#/definitions/BareMetalDeviceUpdate"
        x-exportParamName: "Payload"
      - name: "skipPowerCheck"
        in: "query"
        description: "If true, bypass the powered off check."
        required: false
        type: "boolean"
        x-exportParamName: "SkipPowerCheck"
        x-optionalDataType: "Bool"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Device updated."
          schema:
            $ref: "#/definitions/BareMetalDevice"
        "400":
          description: "Invalid device parameters."
        "404":
          description: "Device Not Found"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
    delete:
      tags:
      - "Bare Metal Devices"
      summary: "Cancel/delete device"
      operationId: "delete_bare_metal_device_id_resource"
      parameters:
      - name: "deploymentId"
        in: "query"
        description: "Id of the deployment to interact with"
        required: false
        type: "string"
        x-exportParamName: "DeploymentId"
        x-optionalDataType: "String"
      - name: "deviceId"
        in: "path"
        required: true
        type: "integer"
        x-exportParamName: "DeviceId"
      responses:
        "201":
          description: "Cancellation Started."
        "204":
          description: "Device Deleted"
        "400":
          description: "Device Cancellation Failed."
        "401":
          description: "Not Allowed"
        "404":
          description: "Device Not Found"
        "409":
          description: "Device Already Being Cancelled."
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
  /billing-info/:
    get:
      tags:
      - "BillingInfo"
      summary: "Return a list with all Billing Info"
      operationId: "get_billing_info_resource"
      parameters:
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Success"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/BillingInfo"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
    post:
      tags:
      - "BillingInfo"
      summary: "Create verification for credit card with all Billing Info"
      operationId: "post_billing_info_resource"
      parameters:
      - in: "body"
        name: "payload"
        required: true
        schema:
          $ref: "#/definitions/BillingInfoVerification"
        x-exportParamName: "Payload"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "201":
          description: "Success"
          schema:
            $ref: "#/definitions/BillingInfo"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
    put:
      tags:
      - "BillingInfo"
      summary: "Verify credit card with all Billing Info"
      operationId: "put_billing_info_resource"
      parameters:
      - in: "body"
        name: "payload"
        required: true
        schema:
          $ref: "#/definitions/BillingInfoVerification"
        x-exportParamName: "Payload"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "201":
          description: "Success"
          schema:
            $ref: "#/definitions/Credit"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
  /cancellation/cancellation:
    get:
      tags:
      - "Cancellations"
      summary: "Get all cancel requests"
      operationId: "get_cancellation_resource"
      parameters:
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Success"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Cancellation"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
    post:
      tags:
      - "Cancellations"
      summary: "Create cancel request"
      operationId: "post_cancellation_resource"
      parameters:
      - in: "body"
        name: "payload"
        required: true
        schema:
          $ref: "#/definitions/CancellationCreate"
        x-exportParamName: "Payload"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/Cancellation"
        "500":
          description: "Service/Device already being cancelled"
        "404":
          description: "Device not found"
        "401":
          description: "Access to this resource is not permitted."
        "400":
          description: "Service/Device already being cancelled"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
  /cancellation/cancellation/{cancellationId}:
    get:
      tags:
      - "Cancellations"
      summary: "Get cancel request"
      operationId: "get_cancellation_id_client_resource"
      parameters:
      - name: "cancellationId"
        in: "path"
        required: true
        type: "integer"
        x-exportParamName: "CancellationId"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/Cancellation"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
  /cancellation/device/{deviceId}:
    get:
      tags:
      - "Cancellations"
      summary: "Get cancel request by device"
      operationId: "get_cancellation_device_resource"
      parameters:
      - name: "deviceId"
        in: "path"
        required: true
        type: "integer"
        x-exportParamName: "DeviceId"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/Cancellation"
        "404":
          description: "Device not found"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
  /cancellation/service/{serviceId}:
    get:
      tags:
      - "Cancellations"
      summary: "Get cancel request by service"
      operationId: "get_cancellation_service_resource"
      parameters:
      - name: "serviceId"
        in: "path"
        required: true
        type: "integer"
        x-exportParamName: "ServiceId"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/Cancellation"
        "404":
          description: "Service not found"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
  /contact/:
    get:
      tags:
      - "Contact"
      summary: "Return a list with all Contacts"
      operationId: "get_contact_resource"
      parameters:
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Success"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Contact-dump"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
    post:
      tags:
      - "Contact"
      summary: "Create a new Contact"
      operationId: "post_contact_resource"
      parameters:
      - in: "body"
        name: "payload"
        required: true
        schema:
          $ref: "#/definitions/ContactCreate"
        x-exportParamName: "Payload"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "201":
          description: "Contact successfully created"
          schema:
            $ref: "#/definitions/Contact-dump"
        "400":
          description: "Unable to create Contact"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
  /contact/password:
    post:
      tags:
      - "Contact"
      summary: "Recieve a request to reset password, and send a link by email with\
        \ token"
      operationId: "post_password_reset"
      parameters:
      - in: "body"
        name: "payload"
        required: true
        schema:
          $ref: "#/definitions/PasswordRequest"
        x-exportParamName: "Payload"
      responses:
        "200":
          description: "Success"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
    put:
      tags:
      - "Contact"
      summary: "Recieve a token and password, verify the user and reset your password"
      operationId: "put_password_reset"
      parameters:
      - in: "body"
        name: "payload"
        required: true
        schema:
          $ref: "#/definitions/PasswordResponse"
        x-exportParamName: "Payload"
      responses:
        "200":
          description: "Success"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
  /contact/{contactId}:
    get:
      tags:
      - "Contact"
      summary: "Return details of a specific Contact"
      operationId: "get_contact_id_resource"
      parameters:
      - name: "contactId"
        in: "path"
        description: "ID of Contact to View / Update"
        required: true
        type: "integer"
        x-exportParamName: "ContactId"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/Contact-dump"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
    put:
      tags:
      - "Contact"
      summary: "Edit a Contact"
      operationId: "put_contact_id_resource"
      parameters:
      - name: "contactId"
        in: "path"
        description: "ID of Contact to View / Update"
        required: true
        type: "integer"
        x-exportParamName: "ContactId"
      - in: "body"
        name: "payload"
        required: true
        schema:
          $ref: "#/definitions/ContactUpdate"
        x-exportParamName: "Payload"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Contact successfully updated."
          schema:
            $ref: "#/definitions/Contact-dump"
        "400":
          description: "Unable to update Contact Data."
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
    delete:
      tags:
      - "Contact"
      summary: "Delete a Contact"
      operationId: "delete_contact_id_resource"
      parameters:
      - name: "contactId"
        in: "path"
        description: "ID of Contact to View / Update"
        required: true
        type: "integer"
        x-exportParamName: "ContactId"
      responses:
        "404":
          description: "Contact not found."
        "204":
          description: "Contact successfully deleted."
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
  /contact/{contactId}/password:
    put:
      tags:
      - "Contact"
      summary: "Change password for a Contact"
      operationId: "put_password_resource"
      parameters:
      - name: "contactId"
        in: "path"
        description: "\"ID of Contact to change password\""
        required: true
        type: "integer"
        x-exportParamName: "ContactId"
      - in: "body"
        name: "payload"
        required: true
        schema:
          $ref: "#/definitions/Password"
        x-exportParamName: "Payload"
      responses:
        "400":
          description: "Invalid password for authentication."
        "200":
          description: "Password was changed."
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
  /credit/:
    get:
      tags:
      - "Credit"
      summary: "Return a list with all Credits"
      operationId: "get_credit_resource"
      parameters:
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Success"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Credit"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
    post:
      tags:
      - "Credit"
      summary: "Receive billing method id and amount and return the created Credit"
      operationId: "post_credit_resource"
      parameters:
      - in: "body"
        name: "payload"
        required: true
        schema:
          $ref: "#/definitions/CreateCredit"
        x-exportParamName: "Payload"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/Credit"
        "503":
          description: "Unable to add new credit."
        "201":
          description: "Successfully added a new credit."
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
  /credit/total:
    get:
      tags:
      - "Credit"
      summary: "Return the client's total active credit amount"
      operationId: "get_total_active_credit_resource"
      parameters:
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/TotalActiveCredit"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
  /deploy/:
    get:
      tags:
      - "Deployment"
      summary: "Return a list with all client deployments"
      operationId: "get_deployment_resource"
      parameters:
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Deployments found successfully"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Deployment"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
    post:
      tags:
      - "Deployment"
      summary: "Start a new deployment"
      operationId: "post_deployment_resource"
      parameters:
      - name: "deploymentName"
        in: "query"
        required: false
        type: "string"
        x-exportParamName: "DeploymentName"
        x-optionalDataType: "String"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "201":
          description: "Deployment Created"
          schema:
            $ref: "#/definitions/Deployment"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
  /deploy/{deploymentId}:
    get:
      tags:
      - "Deployment"
      summary: "Return a dictionary with deployment information"
      operationId: "get_deployment_id_resource"
      parameters:
      - name: "deploymentId"
        in: "path"
        description: "Id of the deployment to interact with"
        required: true
        type: "integer"
        x-exportParamName: "DeploymentId"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Deployment Found"
          schema:
            $ref: "#/definitions/Deployment"
        "401":
          description: "Access to Deployment not Allowed"
        "404":
          description: "Deployment Not Found"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
    post:
      tags:
      - "Deployment"
      summary: "Input a billing info id and script to process and finish a deployment"
      operationId: "post_deployment_id_resource"
      parameters:
      - name: "deploymentId"
        in: "path"
        description: "Id of the deployment to interact with"
        required: true
        type: "integer"
        x-exportParamName: "DeploymentId"
      - in: "body"
        name: "payload"
        required: true
        schema:
          $ref: "#/definitions/DeploymentStart"
        x-exportParamName: "Payload"
      responses:
        "201":
          description: "Deployment Started"
        "401":
          description: "Access to Deployment not Allowed"
        "404":
          description: "Deployment Not Found"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
    put:
      tags:
      - "Deployment"
      summary: "Receive product, quantity and options to be added on the deployment"
      operationId: "put_deployment_id_resource"
      parameters:
      - name: "deploymentId"
        in: "path"
        description: "Id of the deployment to interact with"
        required: true
        type: "integer"
        x-exportParamName: "DeploymentId"
      - in: "body"
        name: "payload"
        required: true
        schema:
          $ref: "#/definitions/DeploymentCustomization"
        x-exportParamName: "Payload"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Server configuration added to Deployment"
          schema:
            $ref: "#/definitions/Deployment"
        "400":
          description: "Your configuration have incompatible or unavailable options"
        "401":
          description: "Access to this Deployment not Allowed"
        "404":
          description: "Deployment Not Found"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
    delete:
      tags:
      - "Deployment"
      summary: "Delete the specified deployment"
      operationId: "delete_deployment_id_resource"
      parameters:
      - name: "deploymentId"
        in: "path"
        description: "Id of the deployment to interact with"
        required: true
        type: "integer"
        x-exportParamName: "DeploymentId"
      responses:
        "204":
          description: "Deployment Deleted"
        "401":
          description: "Access to this Deployment not Allowed"
        "404":
          description: "Deployment Not Found"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
  /device/:
    get:
      tags:
      - "Device"
      summary: "Get all devices"
      operationId: "get_device_resource"
      parameters:
      - name: "rack_id"
        in: "query"
        description: "Filter Devices only in this Rack ID"
        required: false
        type: "integer"
        default: "null"
        x-exportParamName: "RackId"
        x-optionalDataType: "Int32"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Success"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Device-dump"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
  /device/devicelist: {}
  /device/ipmi/thresholds:
    put:
      tags:
      - "Device"
      summary: "Bulk update IPMI thresholds"
      operationId: "put_ipmi_devices_thresholds_id_resource"
      parameters:
      - in: "body"
        name: "payload"
        required: true
        schema:
          $ref: "#/definitions/UpdateDevicesIPMIThresholds"
        x-exportParamName: "Payload"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Devices IPMI Thresholds updated."
          schema:
            $ref: "#/definitions/DevicesIPMIThresholds"
        "400":
          description: "Unable to update IPMI Thresholds for this Device list."
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
  /device/preview-ignition:
    post:
      tags:
      - "Device"
      summary: "Preview Ignition injections"
      operationId: "post_preview_effective_ignition_resource"
      parameters:
      - in: "body"
        name: "payload"
        required: true
        schema:
          $ref: "#/definitions/PreviewEffectiveIgnition"
        x-exportParamName: "Payload"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/PreviewEffectiveIgnitionResponse"
        "422":
          description: "Error"
        "400":
          description: "Error"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
  /device/tags:
    get:
      tags:
      - "Device"
      summary: "Get all tags"
      operationId: "get_client_device_tag_resource"
      parameters:
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/DeviceTag"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
  /device/tags-order:
    get:
      tags:
      - "Device"
      summary: "Get tag order"
      operationId: "get_client_device_tag_order_resource"
      parameters:
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/DeviceTag"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
    put:
      tags:
      - "Device"
      summary: "Update tag order"
      operationId: "put_client_device_tag_order_resource"
      parameters:
      - in: "body"
        name: "payload"
        required: true
        schema:
          $ref: "#/definitions/DeviceTag"
        x-exportParamName: "Payload"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Device tags order updated."
          schema:
            $ref: "#/definitions/DeviceTag"
        "400":
          description: "Bad request."
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
  /device/tags-order/all:
    get:
      tags:
      - "Device"
      summary: "Get all tag orders"
      operationId: "get_all_device_tag_order_resource"
      parameters:
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/DeviceTag"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
  /device/{deviceId}:
    get:
      tags:
      - "Device"
      summary: "Get device"
      operationId: "get_device_id_resource"
      parameters:
      - name: "deviceId"
        in: "path"
        description: "ID of Device to View / Update"
        required: true
        type: "integer"
        x-exportParamName: "DeviceId"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/Device-dump"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
    put:
      tags:
      - "Device"
      summary: "Update device"
      operationId: "put_device_id_resource"
      parameters:
      - name: "deviceId"
        in: "path"
        description: "ID of Device to View / Update"
        required: true
        type: "integer"
        x-exportParamName: "DeviceId"
      - in: "body"
        name: "payload"
        required: true
        schema:
          $ref: "#/definitions/DeviceUpdate"
        x-exportParamName: "Payload"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Device MetaData was updated."
          schema:
            $ref: "#/definitions/Device-dump"
        "400":
          description: "Unable to update Device MetaData."
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
  /device/{deviceId}/deploy/script: {}
  /device/{deviceId}/deploy/ssh_key: {}
  /device/{deviceId}/events:
    get:
      tags:
      - "Device"
      summary: "Get all events"
      operationId: "get_device_id_event_resource"
      parameters:
      - name: "deviceId"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "DeviceId"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Success"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/DeviceEvent"
        "404":
          description: "Device not found"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
  /device/{deviceId}/ignition:
    get:
      tags:
      - "Device"
      summary: "Get Ignition injections"
      operationId: "get_effective_ignition_id_resource"
      parameters:
      - name: "deviceId"
        in: "path"
        required: true
        type: "integer"
        x-exportParamName: "DeviceId"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/EffectiveIgnitionResponse"
        "404":
          description: "Not Found"
        "400":
          description: "Error"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
  /device/{deviceId}/initial-creds:
    get:
      tags:
      - "Device"
      summary: "Get initial creds"
      operationId: "get_initial_creds_id_resource"
      parameters:
      - name: "deviceId"
        in: "path"
        description: "ID of Device to retrieve initial authentication credentials\
          \ for"
        required: true
        type: "integer"
        x-exportParamName: "DeviceId"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Device initial credentials."
          schema:
            $ref: "#/definitions/DeviceInitialCreds"
        "400":
          description: "Unable to get initial credentials for this Device."
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
  /device/{deviceId}/initial-password:
    get:
      tags:
      - "Device"
      summary: "Get initial password"
      operationId: "get_initial_password_id_resource"
      parameters:
      - name: "deviceId"
        in: "path"
        description: "ID of Device to retrieve initial password"
        required: true
        type: "integer"
        x-exportParamName: "DeviceId"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Device initial password."
          schema:
            $ref: "#/definitions/DevicePassword"
        "400":
          description: "Unable to get initial password this Device."
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
  /device/{deviceId}/ipmi:
    get:
      tags:
      - "Device"
      summary: "Get IPMI data"
      operationId: "get_ipmi_info_id_resource"
      parameters:
      - name: "deviceId"
        in: "path"
        description: "ID of Device to retrieve IPMI info."
        required: true
        type: "integer"
        x-exportParamName: "DeviceId"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Device IPMI Thresholds retrieved"
          schema:
            $ref: "#/definitions/DeviceIPMIInfo"
        "400":
          description: "Unable to retrieve IPMI Thresholds for this Device."
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
  /device/{deviceId}/ipmi/login-data:
    get:
      tags:
      - "Device"
      summary: "Get IPMI creds"
      operationId: "get_ipmi_info_login_data_resource"
      parameters:
      - name: "deviceId"
        in: "path"
        description: "ID of Device to retrieve IPMI Login data."
        required: true
        type: "integer"
        x-exportParamName: "DeviceId"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Device IPMI Login data retrieved"
          schema:
            $ref: "#/definitions/IPMILoginData"
        "400":
          description: "Unable to retrieve IPMI Login data for this Device."
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
  /device/{deviceId}/ipmi/nat:
    get:
      tags:
      - "Device"
      summary: "Clear IPMI whitelist"
      operationId: "get_device_ipminat_rule_resource"
      parameters:
      - name: "deviceId"
        in: "path"
        description: "ID of a client Device"
        required: true
        type: "integer"
        x-exportParamName: "DeviceId"
      responses:
        "400":
          description: "The request has problems. Revise it and try again."
        "202":
          description: "The request was accepted."
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
  /device/{deviceId}/ipmi/thresholds:
    get:
      tags:
      - "Device"
      summary: "Get IPMI thresholds"
      operationId: "get_ipmi_thresholds_id_resource"
      parameters:
      - name: "deviceId"
        in: "path"
        description: "ID of Device to View"
        required: true
        type: "integer"
        x-exportParamName: "DeviceId"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Device IPMI Thresholds retrieved."
          schema:
            $ref: "#/definitions/DeviceIPMIThresholds"
        "400":
          description: "Unable to retrieve IPMI Thresholds for this Device."
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
    put:
      tags:
      - "Device"
      summary: "Update IPMI thresholds"
      operationId: "put_ipmi_thresholds_id_resource"
      parameters:
      - name: "deviceId"
        in: "path"
        description: "ID of Device to View"
        required: true
        type: "integer"
        x-exportParamName: "DeviceId"
      - in: "body"
        name: "payload"
        required: true
        schema:
          $ref: "#/definitions/DeviceIPMIThresholds"
        x-exportParamName: "Payload"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Device IPMI Thresholds retrieved."
          schema:
            $ref: "#/definitions/DeviceIPMIThresholds"
        "400":
          description: "Unable to update IPMI Thresholds for this Device."
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
  /device/{deviceId}/ipmi/valid-login:
    get:
      tags:
      - "Device"
      summary: "Get IPMI access status"
      operationId: "get_ipmi_valid_login_id_resource"
      parameters:
      - name: "deviceId"
        in: "path"
        description: "ID of Device to check IPMI credentials"
        required: true
        type: "integer"
        x-exportParamName: "DeviceId"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "IPMI credentials validated."
          schema:
            $ref: "#/definitions/IPMIValidLogin"
        "400":
          description: "Unable to validate IPMI credentials this Device."
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
  /device/{deviceId}/ipmi/whitelist/:
    post:
      tags:
      - "Device"
      summary: "Whitelist IP for IPMI"
      operationId: "post_device_ipmi_whitelist_resource"
      parameters:
      - name: "deviceId"
        in: "path"
        description: "ID of the Device to put IP in Whitelist"
        required: true
        type: "integer"
        x-exportParamName: "DeviceId"
      - in: "body"
        name: "payload"
        required: true
        schema:
          $ref: "#/definitions/DeviceIPMIWhitelistIP"
        x-exportParamName: "Payload"
      responses:
        "400":
          description: "The request has problems. Revise it and try again."
        "202":
          description: "The request was accepted."
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
  /device/{deviceId}/ips:
    get:
      tags:
      - "Device"
      summary: "Get IPs"
      operationId: "get_device_ip_assignments_resource"
      parameters:
      - name: "deviceId"
        in: "path"
        required: true
        type: "integer"
        x-exportParamName: "DeviceId"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Device Ip Assignments retrieved"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/IPAssignment"
        "400":
          description: "Unable to retrieve IP Assignments for this Device."
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
  /device/{deviceId}/port/{portId}/clear:
    post:
      tags:
      - "Device"
      summary: "Clear all Port configurations"
      operationId: "post_device_port_id_clear_resource"
      parameters:
      - name: "deviceId"
        in: "path"
        required: true
        type: "integer"
        x-exportParamName: "DeviceId"
      - name: "portId"
        in: "path"
        required: true
        type: "integer"
        x-exportParamName: "PortId"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "202":
          description: "Accepted"
          schema:
            $ref: "#/definitions/NetworkTask-dump"
        "429":
          description: "Request was Rate Limited"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
  /device/{deviceId}/ports:
    get:
      tags:
      - "Device"
      summary: "Get ports"
      operationId: "get_device_port_resource"
      parameters:
      - name: "deviceId"
        in: "path"
        required: true
        type: "integer"
        x-exportParamName: "DeviceId"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Success"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/DevicePort"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
    put:
      tags:
      - "Device"
      summary: "Update port network"
      operationId: "put_device_port_resource"
      parameters:
      - name: "deviceId"
        in: "path"
        required: true
        type: "integer"
        x-exportParamName: "DeviceId"
      - in: "body"
        name: "payload"
        required: true
        schema:
          $ref: "#/definitions/DevicePortsUpdate"
        x-exportParamName: "Payload"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "202":
          description: "Accepted"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/NetworkTask-dump"
        "429":
          description: "Request was Rate Limited"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
  /device/{deviceId}/ports/bond:
    post:
      tags:
      - "Device"
      summary: "Bond ports"
      operationId: "post_device_bond_resource"
      parameters:
      - name: "deviceId"
        in: "path"
        required: true
        type: "integer"
        x-exportParamName: "DeviceId"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "202":
          description: "Accepted"
          schema:
            $ref: "#/definitions/NetworkTask-dump"
        "429":
          description: "Request was Rate Limited"
        "404":
          description: "Device not found"
        "401":
          description: "Access to this Device is not allowed"
        "400":
          description: "Invalid action"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
    delete:
      tags:
      - "Device"
      summary: "Unbond ports"
      operationId: "delete_device_bond_resource"
      parameters:
      - name: "deviceId"
        in: "path"
        required: true
        type: "integer"
        x-exportParamName: "DeviceId"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "202":
          description: "Accepted"
          schema:
            $ref: "#/definitions/NetworkTask-dump"
        "429":
          description: "Request was Rate Limited"
        "404":
          description: "Device not found"
        "401":
          description: "Access to this Device is not allowed"
        "400":
          description: "Invalid action"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
  /device/{deviceId}/power:
    get:
      tags:
      - "Device"
      summary: "Get power status"
      operationId: "get_power_resource"
      parameters:
      - name: "deviceId"
        in: "path"
        description: "ID of Device to View / Update"
        required: true
        type: "integer"
        x-exportParamName: "DeviceId"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/DevicePower"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
    post:
      tags:
      - "Device"
      summary: "Update power status"
      operationId: "post_power_resource"
      parameters:
      - name: "deviceId"
        in: "path"
        description: "ID of Device to View / Update"
        required: true
        type: "integer"
        x-exportParamName: "DeviceId"
      - name: "action"
        in: "query"
        description: "Must be one of boot|reboot|shutdown"
        required: true
        type: "string"
        pattern: "boot|reboot|shutdown"
        x-exportParamName: "Action"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "202":
          description: "Success"
          schema:
            $ref: "#/definitions/DevicePower"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
  /device/{deviceId}/reload:
    post:
      tags:
      - "Device"
      summary: "Reload device"
      operationId: "post_device_reload_resource"
      parameters:
      - name: "deviceId"
        in: "path"
        required: true
        type: "integer"
        x-exportParamName: "DeviceId"
      - in: "body"
        name: "payload"
        required: true
        schema:
          $ref: "#/definitions/DeviceReload"
        x-exportParamName: "Payload"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/ServiceOption"
        "400":
          description: "Error"
        "404":
          description: "Device not found"
        "202":
          description: "Success"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
  /device/{deviceId}/services:
    get:
      tags:
      - "Device"
      summary: "Get all device services"
      operationId: "get_device_id_service_resource"
      parameters:
      - name: "group_by"
        in: "query"
        description: "Get results grouped by service type code 'type_code', or 'flat'"
        required: false
        type: "string"
        default: "flat"
        x-exportParamName: "GroupBy"
        x-optionalDataType: "String"
      - name: "type_code"
        in: "query"
        description: "Return service having the same service type code, the default\
          \ value is all\n The list of service types can be accessed on https://core.hivelocity.net/api/v2/service/types"
        required: false
        type: "string"
        default: "all"
        x-exportParamName: "TypeCode"
        x-optionalDataType: "String"
      - name: "deviceId"
        in: "path"
        description: "ID of Device to get all services by type"
        required: true
        type: "integer"
        x-exportParamName: "DeviceId"
      responses:
        "404":
          description: "Unable to find the device or the device does not have a service"
        "400":
          description: "Unable to retrieve services for this device"
        "200":
          description: "Device services retrieved"
          schema:
            $ref: "#/definitions/Services"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
  /device/{deviceId}/tags:
    get:
      tags:
      - "Device"
      summary: "Get device tags"
      operationId: "get_device_tag_id_resource"
      parameters:
      - name: "deviceId"
        in: "path"
        description: "ID of Device to View / Update"
        required: true
        type: "integer"
        x-exportParamName: "DeviceId"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/DeviceTag"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
    put:
      tags:
      - "Device"
      summary: "Update device tags"
      operationId: "put_device_tag_id_resource"
      parameters:
      - name: "deviceId"
        in: "path"
        description: "ID of Device to View / Update"
        required: true
        type: "integer"
        x-exportParamName: "DeviceId"
      - in: "body"
        name: "payload"
        required: true
        schema:
          $ref: "#/definitions/DeviceTag"
        x-exportParamName: "Payload"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Device tags updated."
          schema:
            $ref: "#/definitions/DeviceTag"
        "400":
          description: "Bad request."
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
  /domains/:
    get:
      tags:
      - "Domains"
      summary: "Return the domains of a client"
      operationId: "get_domain_resource"
      parameters:
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Success."
          schema:
            type: "array"
            items:
              $ref: "#/definitions/DomainReturn"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
    post:
      tags:
      - "Domains"
      summary: "Create a new domain"
      operationId: "post_domain_resource"
      parameters:
      - in: "body"
        name: "payload"
        required: true
        schema:
          $ref: "#/definitions/DomainCreate"
        x-exportParamName: "Payload"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/DomainReturn"
        "400":
          description: "Bad request."
        "201":
          description: "Created."
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
  /domains/ptr:
    get:
      tags:
      - "Domains"
      summary: "Return the PTR records of a client"
      operationId: "get_ptr_record_resource"
      parameters:
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Success."
          schema:
            type: "array"
            items:
              $ref: "#/definitions/PTRRecordReturn"
        "400":
          description: "Error"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
  /domains/ptr/{recordId}:
    get:
      tags:
      - "Domains"
      operationId: "get_ptr_record_id_resource"
      parameters:
      - name: "recordId"
        in: "path"
        required: true
        type: "integer"
        x-exportParamName: "RecordId"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Success."
          schema:
            $ref: "#/definitions/PTRRecordReturn"
        "400":
          description: "Error"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
    put:
      tags:
      - "Domains"
      operationId: "put_ptr_record_id_resource"
      parameters:
      - name: "recordId"
        in: "path"
        required: true
        type: "integer"
        x-exportParamName: "RecordId"
      - in: "body"
        name: "payload"
        required: true
        schema:
          $ref: "#/definitions/PTRRecordUpdate"
        x-exportParamName: "Payload"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/PTRRecordReturn"
        "400":
          description: "Error"
        "202":
          description: "Success."
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
  /domains/{domainID}/aaaa-record:
    get:
      tags:
      - "Domains"
      summary: "Return all AAAA Records found for given zone"
      operationId: "get_aaaa_record_resource"
      parameters:
      - name: "domainID"
        in: "path"
        required: true
        type: "integer"
        x-exportParamName: "DomainID"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Success"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/AAAARecordReturn"
        "404":
          description: "Not found"
        "400":
          description: "Error"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
    post:
      tags:
      - "Domains"
      summary: "Create a new AAAA Record for given zone"
      operationId: "post_aaaa_record_resource"
      parameters:
      - name: "domainID"
        in: "path"
        required: true
        type: "integer"
        x-exportParamName: "DomainID"
      - in: "body"
        name: "payload"
        required: true
        schema:
          $ref: "#/definitions/AAAARecordCreate"
        x-exportParamName: "Payload"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/AAAARecordReturn"
        "404":
          description: "Not found"
        "400":
          description: "Error"
        "201":
          description: "Created"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
  /domains/{domainID}/aaaa-record/{recordId}:
    get:
      tags:
      - "Domains"
      summary: "Return Single AAAA Records found for given id"
      operationId: "get_aaaa_record_id_resource"
      parameters:
      - name: "domainID"
        in: "path"
        required: true
        type: "integer"
        x-exportParamName: "DomainID"
      - name: "recordId"
        in: "path"
        required: true
        type: "integer"
        x-exportParamName: "RecordId"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/AAAARecordReturn"
        "404":
          description: "Not found"
        "400":
          description: "Error"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
    put:
      tags:
      - "Domains"
      summary: "Update an AAAA Record for given id"
      operationId: "put_aaaa_record_id_resource"
      parameters:
      - name: "domainID"
        in: "path"
        required: true
        type: "integer"
        x-exportParamName: "DomainID"
      - name: "recordId"
        in: "path"
        required: true
        type: "integer"
        x-exportParamName: "RecordId"
      - in: "body"
        name: "payload"
        required: true
        schema:
          $ref: "#/definitions/AAAARecordUpdate"
        x-exportParamName: "Payload"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/AAAARecordReturn"
        "404":
          description: "Not Found"
        "400":
          description: "Error"
        "202":
          description: "Updated"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
    delete:
      tags:
      - "Domains"
      summary: "Delete an AAAA Record for given zone"
      operationId: "delete_aaaa_record_id_resource"
      parameters:
      - name: "domainID"
        in: "path"
        required: true
        type: "integer"
        x-exportParamName: "DomainID"
      - name: "recordId"
        in: "path"
        required: true
        type: "integer"
        x-exportParamName: "RecordId"
      responses:
        "404":
          description: "Not found"
        "400":
          description: "Error"
        "204":
          description: "Deleted"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
  /domains/{domainID}/mx-record:
    get:
      tags:
      - "Domains"
      summary: "Return all MX Records found for given zone"
      operationId: "get_mx_record_resource"
      parameters:
      - name: "domainID"
        in: "path"
        required: true
        type: "integer"
        x-exportParamName: "DomainID"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Success"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/MXRecordReturn"
        "404":
          description: "Not found"
        "400":
          description: "Error"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
    post:
      tags:
      - "Domains"
      summary: "Create a new MX Record for given zone"
      operationId: "post_mx_record_resource"
      parameters:
      - name: "domainID"
        in: "path"
        required: true
        type: "integer"
        x-exportParamName: "DomainID"
      - in: "body"
        name: "payload"
        required: true
        schema:
          $ref: "#/definitions/MXRecordCreate"
        x-exportParamName: "Payload"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/MXRecordReturn"
        "404":
          description: "Not found"
        "400":
          description: "Error"
        "201":
          description: "Created"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
  /domains/{domainID}/mx-record/{recordId}:
    get:
      tags:
      - "Domains"
      summary: "Return Single MX Records found for given id"
      operationId: "get_mx_record_id_resource"
      parameters:
      - name: "domainID"
        in: "path"
        required: true
        type: "integer"
        x-exportParamName: "DomainID"
      - name: "recordId"
        in: "path"
        required: true
        type: "integer"
        x-exportParamName: "RecordId"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/MXRecordReturn"
        "404":
          description: "Not found"
        "400":
          description: "Error"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
    put:
      tags:
      - "Domains"
      summary: "Update an MX Record for given zone"
      operationId: "put_mx_record_id_resource"
      parameters:
      - name: "domainID"
        in: "path"
        required: true
        type: "integer"
        x-exportParamName: "DomainID"
      - name: "recordId"
        in: "path"
        required: true
        type: "integer"
        x-exportParamName: "RecordId"
      - in: "body"
        name: "payload"
        required: true
        schema:
          $ref: "#/definitions/MXRecordUpdate"
        x-exportParamName: "Payload"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/MXRecordReturn"
        "404":
          description: "Not found"
        "400":
          description: "Error"
        "202":
          description: "Updated"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
    delete:
      tags:
      - "Domains"
      summary: "Delete an MX Record for given zone"
      operationId: "delete_mx_record_id_resource"
      parameters:
      - name: "domainID"
        in: "path"
        required: true
        type: "integer"
        x-exportParamName: "DomainID"
      - name: "recordId"
        in: "path"
        required: true
        type: "integer"
        x-exportParamName: "RecordId"
      responses:
        "404":
          description: "Not found"
        "400":
          description: "Error"
        "204":
          description: "Deleted"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
  /domains/{domainId}:
    get:
      tags:
      - "Domains"
      summary: "Return a domain for given id"
      operationId: "get_domain_id_resource"
      parameters:
      - name: "domainId"
        in: "path"
        required: true
        type: "integer"
        x-exportParamName: "DomainId"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Success."
          schema:
            $ref: "#/definitions/DomainReturn"
        "404":
          description: "Domain not found."
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
    delete:
      tags:
      - "Domains"
      summary: "Delete domain for given id"
      operationId: "delete_domain_id_resource"
      parameters:
      - name: "domainId"
        in: "path"
        required: true
        type: "integer"
        x-exportParamName: "DomainId"
      responses:
        "500":
          description: "Error."
        "404":
          description: "Domain not found."
        "204":
          description: "Deleted."
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
  /domains/{domain}/a-record:
    get:
      tags:
      - "Domains"
      summary: "Return all A Records found for given zone name"
      operationId: "get_a_record_resource"
      parameters:
      - name: "domain"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "Domain"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Success"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/ARecord"
        "404":
          description: "Not found"
        "400":
          description: "Error"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
    post:
      tags:
      - "Domains"
      summary: "Create a new A Record for given zone"
      operationId: "post_a_record_resource"
      parameters:
      - name: "domain"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "Domain"
      - in: "body"
        name: "payload"
        required: true
        schema:
          $ref: "#/definitions/ARecord"
        x-exportParamName: "Payload"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/ARecord"
        "409":
          description: "Record Already Exists"
        "404":
          description: "Not found"
        "400":
          description: "Error"
        "201":
          description: "Created"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
  /domains/{domain}/a-record/{record}:
    get:
      tags:
      - "Domains"
      summary: "Return Single A Records found for given domain name"
      operationId: "get_a_record_id_resource"
      parameters:
      - name: "domain"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "Domain"
      - name: "record"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "Record"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/ARecord"
        "404":
          description: "Not found"
        "400":
          description: "Error"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
    put:
      tags:
      - "Domains"
      summary: "Update an A Record for given zone"
      operationId: "put_a_record_id_resource"
      parameters:
      - name: "domain"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "Domain"
      - name: "record"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "Record"
      - in: "body"
        name: "payload"
        required: true
        schema:
          $ref: "#/definitions/ARecord"
        x-exportParamName: "Payload"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/ARecord"
        "404":
          description: "Not found"
        "400":
          description: "Error"
        "202":
          description: "Updated"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
    delete:
      tags:
      - "Domains"
      summary: "Delete a single A Record value for given zone"
      operationId: "delete_a_record_id_resource"
      parameters:
      - name: "domain"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "Domain"
      - name: "record"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "Record"
      responses:
        "404":
          description: "Not found"
        "400":
          description: "Error"
        "204":
          description: "Deleted"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
  /ignition/:
    get:
      tags:
      - "Ignition"
      summary: "Gets an Ignition configuration"
      operationId: "get_ignition_resource"
      parameters:
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Successfully returned ignition configs"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/IgnitionResponse"
        "400":
          description: "Unable to get ignition configs"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
    post:
      tags:
      - "Ignition"
      summary: "Creates a new Ignition configuration"
      operationId: "post_ignition_resource"
      parameters:
      - in: "body"
        name: "payload"
        required: true
        schema:
          $ref: "#/definitions/CreateIgnition"
        x-exportParamName: "Payload"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "201":
          description: "Successfully created ignition configs"
          schema:
            $ref: "#/definitions/IgnitionResponse"
        "400":
          description: "Unable to create ignition config"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
  /ignition/{ignitionId}:
    get:
      tags:
      - "Ignition"
      operationId: "get_ignition_resource_id"
      parameters:
      - name: "ignitionId"
        in: "path"
        required: true
        type: "integer"
        x-exportParamName: "IgnitionId"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Successfully returned ignition config"
          schema:
            $ref: "#/definitions/IgnitionResponse"
        "400":
          description: "Unable to get ignition config"
        "404":
          description: "Not found"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
    put:
      tags:
      - "Ignition"
      operationId: "put_ignition_resource_id"
      parameters:
      - name: "ignitionId"
        in: "path"
        required: true
        type: "integer"
        x-exportParamName: "IgnitionId"
      - in: "body"
        name: "payload"
        required: true
        schema:
          $ref: "#/definitions/UpdateIgnition"
        x-exportParamName: "Payload"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Successfully updated ignition config"
          schema:
            $ref: "#/definitions/IgnitionResponse"
        "400":
          description: "Unable to get ignition config"
        "404":
          description: "Not found"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
    delete:
      tags:
      - "Ignition"
      operationId: "delete_ignition_resource_id"
      parameters:
      - name: "ignitionId"
        in: "path"
        required: true
        type: "integer"
        x-exportParamName: "IgnitionId"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Successfully returned ignition configs"
        "400":
          description: "Unable to delete ignition configs"
        "404":
          description: "Not found"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
  /inventory/locations:
    get:
      tags:
      - "Inventory"
      summary: "Get all facilities"
      operationId: "get_location_resource"
      parameters:
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Location data was found"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Location"
        "500":
          description: "Unable to gather locations"
        "404":
          description: "Unable to find locations"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
  /inventory/product:
    get:
      tags:
      - "Inventory"
      summary: "Get all products"
      operationId: "get_stock_resource"
      parameters:
      - name: "location"
        in: "query"
        description: "Retrieve products by their location in the Hivelocity store:\
          \ \n\nMAIN: The main list of instant (and custom servers).\nMASSIVESTORAGE:\
          \ Servers with up to 90 drives.\nGPU: Servers with GPUs.\nOUTLET: Discounted\
          \ older hardware.\nLANDING: Periodic specials for events."
        required: false
        type: "string"
        default: "MAIN"
        enum:
        - "MAIN"
        - "MASSIVESTORAGE"
        - "GPU"
        - "OUTLET"
        - "LANDING"
        x-exportParamName: "Location"
        x-optionalDataType: "String"
      - name: "include_custom"
        in: "query"
        description: "Include custom server products."
        required: false
        type: "boolean"
        default: false
        x-exportParamName: "IncludeCustom"
        x-optionalDataType: "Bool"
      - name: "bonding_support"
        in: "query"
        description: "Filter by bonding support. Values are true/false. None will\
          \ return a mix of both.\n*DEPRECATED:* Soon, all servers sold will have\
          \ bonding support and this will be removed."
        required: false
        type: "string"
        default: "null"
        x-exportParamName: "BondingSupport"
        x-optionalDataType: "String"
      - name: "group_by"
        in: "query"
        description: "Get results grouped by 'city', 'facility', or 'flat'"
        required: false
        type: "string"
        default: "facility"
        x-exportParamName: "GroupBy"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Product data was found"
          schema:
            $ref: "#/definitions/Inventory"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
  /inventory/product/{productId}:
    get:
      tags:
      - "Inventory"
      summary: "Get product"
      operationId: "get_stock_by_product_resource"
      parameters:
      - name: "productId"
        in: "path"
        description: "Product database ID"
        required: true
        type: "integer"
        x-exportParamName: "ProductId"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Product data was found"
          schema:
            $ref: "#/definitions/Stock"
        "404":
          description: "Product with given id not found"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
  /invoice/:
    get:
      tags:
      - "Invoice"
      summary: "Return serialized data on all invoices"
      operationId: "get_invoice_resource"
      parameters:
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Success"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Invoice"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
  /invoice/search:
    get:
      tags:
      - "Invoice"
      summary: "Return results of invoice search"
      operationId: "get_invoice_search_resource"
      parameters:
      - name: "endDate"
        in: "query"
        description: "The end date range"
        required: false
        type: "integer"
        x-exportParamName: "EndDate"
        x-optionalDataType: "Int32"
      - name: "startDate"
        in: "query"
        description: "The start date range"
        required: false
        type: "integer"
        x-exportParamName: "StartDate"
        x-optionalDataType: "Int32"
      - name: "perPage"
        in: "query"
        description: "Number of items per page."
        required: false
        type: "integer"
        default: 10
        x-exportParamName: "PerPage"
        x-optionalDataType: "Int32"
      - name: "page"
        in: "query"
        description: "The page number of search."
        required: false
        type: "integer"
        default: 1
        x-exportParamName: "Page"
        x-optionalDataType: "Int32"
      - name: "q"
        in: "query"
        description: "Content search."
        required: false
        type: "string"
        x-exportParamName: "Q"
        x-optionalDataType: "String"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Invoice search results."
          schema:
            $ref: "#/definitions/InvoiceSeachResult"
        "400":
          description: "Invalid invoice search request."
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
  /invoice/unpaid:
    get:
      tags:
      - "Invoice"
      summary: "Return total balance of all unpaid invoices"
      operationId: "get_invoice_unpaid_resource"
      parameters:
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Unpaid data was found"
          schema:
            $ref: "#/definitions/InvoiceUnpaid"
        "500":
          description: "Unable to gather unpaid invoices"
        "404":
          description: "Unable to find unpaid invoices"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
  /invoice/{invoiceId}:
    get:
      tags:
      - "Invoice"
      summary: "Return serialized data on a single invoice"
      operationId: "get_invoice_id_resource"
      parameters:
      - name: "invoiceId"
        in: "path"
        description: "Invoice database ID"
        required: true
        type: "integer"
        x-exportParamName: "InvoiceId"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/Invoice"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
  /invoice/{invoiceId}/details:
    get:
      tags:
      - "Invoice"
      summary: "Return detailed information for an invoice"
      description: "Same data as the PDF file but serialized"
      operationId: "get_invoice_id_details"
      parameters:
      - name: "invoiceId"
        in: "path"
        description: "Invoice database ID"
        required: true
        type: "integer"
        x-exportParamName: "InvoiceId"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/InvoiceDetails"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
  /invoice/{invoiceId}/pdf-download:
    get:
      tags:
      - "Invoice"
      summary: "Return an Invoice PDF file in Base64 Encoded Format"
      operationId: "get_invoice_pdf_resource"
      parameters:
      - name: "invoiceId"
        in: "path"
        description: "Invoice database ID"
        required: true
        type: "integer"
        x-exportParamName: "InvoiceId"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/InvoicePDF"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
  /ip/:
    get:
      tags:
      - "IPAssignment"
      summary: "Get all assignments"
      operationId: "get_ip_assignment_resource"
      parameters:
      - name: "displayPrivateNetworks"
        in: "query"
        description: "Return Private (RFC 1918) Addresses in Results"
        required: false
        type: "boolean"
        default: false
        x-exportParamName: "DisplayPrivateNetworks"
        x-optionalDataType: "Bool"
      - name: "displayIPv6"
        in: "query"
        description: "Return IPv6 Addresses in Results"
        required: false
        type: "boolean"
        default: true
        x-exportParamName: "DisplayIPv6"
        x-optionalDataType: "Bool"
      - name: "clientId"
        in: "query"
        description: "Return IPs from this Client ID"
        required: false
        type: "integer"
        minimum: 0
        exclusiveMinimum: true
        x-exportParamName: "ClientId"
        x-optionalDataType: "Int32"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Success"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/IPAssignment"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
    post:
      tags:
      - "IPAssignment"
      summary: "Request new assignment"
      operationId: "post_ip_assignment_resource"
      parameters:
      - in: "body"
        name: "payload"
        required: true
        schema:
          $ref: "#/definitions/IpAssignmentRequest"
        x-exportParamName: "Payload"
      responses:
        "400":
          description: "Invalid action"
        "200":
          description: "Success"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
  /ip/address/{ipAddress}:
    get:
      tags:
      - "IPAssignment"
      summary: "Get assignment by IP"
      operationId: "get_ip_assignment_subnet_resource"
      parameters:
      - name: "ipAddress"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "IpAddress"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/IPAssignment"
        "404":
          description: "IP assignment not found"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
  /ip/combine:
    post:
      tags:
      - "IPAssignment"
      summary: "Combine assignments"
      operationId: "post_ip_assignment_combine_resource"
      parameters:
      - in: "body"
        name: "payload"
        required: true
        schema:
          $ref: "#/definitions/IpAssignmentCombine"
        x-exportParamName: "Payload"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/IPAssignment"
        "404":
          description: "IP assignment not found"
        "401":
          description: "Access to this IP Assignment is not allowed"
        "400":
          description: "Invalid action"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
  /ip/{ipAssignmentId}:
    get:
      tags:
      - "IPAssignment"
      summary: "Get assignment"
      operationId: "get_ip_assignment_id_resource"
      parameters:
      - name: "ipAssignmentId"
        in: "path"
        required: true
        type: "integer"
        x-exportParamName: "IpAssignmentId"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/IPAssignment"
        "404":
          description: "IP Assignment Not Found"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
    put:
      tags:
      - "IPAssignment"
      summary: "Route assignment to IP"
      operationId: "put_ip_assignment_id_resource"
      parameters:
      - name: "ipAssignmentId"
        in: "path"
        required: true
        type: "integer"
        x-exportParamName: "IpAssignmentId"
      - in: "body"
        name: "payload"
        required: true
        schema:
          $ref: "#/definitions/IpAssignmentPut"
        x-exportParamName: "Payload"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "202":
          description: "Accepted"
          schema:
            $ref: "#/definitions/NetworkTask-dump"
        "429":
          description: "Request was Rate Limited"
        "404":
          description: "IP assignment not found"
        "401":
          description: "Access to this IP Assignment is not allowed"
        "400":
          description: "Invalid action"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
    delete:
      tags:
      - "IPAssignment"
      summary: "Delete assignment"
      operationId: "delete_ip_assignment_id_resource"
      parameters:
      - name: "ipAssignmentId"
        in: "path"
        required: true
        type: "integer"
        x-exportParamName: "IpAssignmentId"
      responses:
        "404":
          description: "IP assignment not found"
        "401":
          description: "Access to this IP Assignment is not allowed"
        "400":
          description: "Invalid action"
        "204":
          description: "Success"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
  /ip/{ipAssignmentId}/clear:
    post:
      tags:
      - "IPAssignment"
      summary: "Clear all configuration on an IP Assignment"
      operationId: "post_ip_assignment_id_clear_resource"
      parameters:
      - name: "ipAssignmentId"
        in: "path"
        required: true
        type: "integer"
        x-exportParamName: "IpAssignmentId"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "202":
          description: "Accepted"
          schema:
            $ref: "#/definitions/NetworkTask-dump"
        "429":
          description: "Request was Rate Limited"
        "404":
          description: "IP assignment not found"
        "401":
          description: "Access to this IP Assignment is not allowed"
        "400":
          description: "Invalid action"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
  /ip/{ipAssignmentId}/split:
    post:
      tags:
      - "IPAssignment"
      summary: "Split assignment"
      operationId: "post_ip_assignment_split_resource"
      parameters:
      - name: "ipAssignmentId"
        in: "path"
        required: true
        type: "integer"
        x-exportParamName: "IpAssignmentId"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Success"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/IPAssignment"
        "404":
          description: "IP assignment not found"
        "401":
          description: "Access to this IP Assignment is not allowed"
        "400":
          description: "Invalid action"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
  /network/device/ports:
    get:
      tags:
      - "Network"
      summary: "Get all ports by device"
      operationId: "get_device_network_port_resource"
      parameters:
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Success"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/DevicePort"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
  /network/null:
    post:
      tags:
      - "Network"
      summary: "Null route IP - detailed"
      operationId: "post_detailed_null_route_resource"
      parameters:
      - in: "body"
        name: "payload"
        required: true
        schema:
          $ref: "#/definitions/DetailedNullIP"
        x-exportParamName: "Payload"
      responses:
        "401":
          description: "You are not authorized to null route this IP address."
        "400":
          description: "Bad Request"
        "201":
          description: "IP has been null routed!"
        "200":
          description: "IP address is already null routed."
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
  /network/null/{ip}:
    get:
      tags:
      - "Network"
      summary: "Null route IP"
      operationId: "get_null_route_resource"
      parameters:
      - name: "ip"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      responses:
        "401":
          description: "You are not authorized to null route this IP address."
        "400":
          description: "Bad Request"
        "201":
          description: "IP has been null routed!"
        "200":
          description: "IP address is already null routed."
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
  /network/status/:
    get:
      tags:
      - "Network"
      summary: "Get network task status"
      operationId: "get_network_task_client_resource"
      parameters:
      - name: "createdInLast"
        in: "query"
        description: "Filter to retrieve tasks created in the last timedelta hours."
        required: false
        type: "integer"
        x-exportParamName: "CreatedInLast"
        x-optionalDataType: "Int32"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Success."
          schema:
            type: "array"
            items:
              $ref: "#/definitions/NetworkTask-dump"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
        "400":
          description: "Bad Request."
  /network/status/{deviceId}:
    get:
      tags:
      - "Network"
      summary: "Get network task status by device"
      operationId: "get_network_task_device_resource"
      parameters:
      - name: "deviceId"
        in: "path"
        required: true
        type: "integer"
        x-exportParamName: "DeviceId"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Success."
          schema:
            $ref: "#/definitions/NetworkTask-dump"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
  /network/status/{taskId}:
    get:
      tags:
      - "Network"
      summary: "Get network task status by task id"
      operationId: "get_network_task_id_resource"
      parameters:
      - name: "taskId"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "TaskId"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Success."
          schema:
            $ref: "#/definitions/NetworkTask-dump"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
  /network/unnull/{ip}:
    get:
      tags:
      - "Network"
      summary: "Unnull IP"
      operationId: "get_remove_null_route_resource"
      parameters:
      - name: "ip"
        in: "path"
        required: true
        type: "string"
        x-exportParamName: "Ip"
      responses:
        "401":
          description: "You are not authorized to remove a null route on this IP address."
        "400":
          description: "Bad Request"
        "202":
          description: "Null route has been removed!"
        "200":
          description: "IP address is not null routed."
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
  /order-groups/:
    get:
      tags:
      - "Order Groups"
      summary: "Return a list with all Order Groups"
      operationId: "get_order_group_resource"
      parameters:
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Order groups found successfuly."
          schema:
            type: "array"
            items:
              $ref: "#/definitions/OrderGroup"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
    post:
      tags:
      - "Order Groups"
      summary: "Create a new Order Group"
      operationId: "post_order_group_resource"
      parameters:
      - in: "body"
        name: "payload"
        required: true
        schema:
          $ref: "#/definitions/OrderGroupCreate"
        x-exportParamName: "Payload"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/OrderGroup"
        "201":
          description: "Order Group created."
        "400":
          description: "Invalid Order Group parameters."
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
  /order-groups/{orderGroupId}:
    get:
      tags:
      - "Order Groups"
      summary: "Return an Order Group"
      operationId: "get_order_group_id_resource"
      parameters:
      - name: "orderGroupId"
        in: "path"
        description: "Id of the order group to interact with"
        required: true
        type: "integer"
        x-exportParamName: "OrderGroupId"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Order Group Found."
          schema:
            $ref: "#/definitions/OrderGroup"
        "401":
          description: "Access to Order Group not Allowed."
        "404":
          description: "Order Group Not Found."
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
    put:
      tags:
      - "Order Groups"
      summary: "Update an Order Group"
      operationId: "put_order_group_id_resource"
      parameters:
      - name: "orderGroupId"
        in: "path"
        description: "Id of the order group to interact with"
        required: true
        type: "integer"
        x-exportParamName: "OrderGroupId"
      - in: "body"
        name: "payload"
        required: true
        schema:
          $ref: "#/definitions/OrderGroupUpdate"
        x-exportParamName: "Payload"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Order Group updated."
          schema:
            $ref: "#/definitions/OrderGroup"
        "400":
          description: "Invalid Order Group parameters."
        "404":
          description: "Order Group Not Found."
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
    delete:
      tags:
      - "Order Groups"
      summary: "Delete the specified Order Group"
      operationId: "delete_order_group_id_resource"
      parameters:
      - name: "orderGroupId"
        in: "path"
        description: "Id of the order group to interact with"
        required: true
        type: "integer"
        x-exportParamName: "OrderGroupId"
      responses:
        "204":
          description: "Order Group Deleted"
        "401":
          description: "Access to Order Group not Allowed."
        "404":
          description: "Order Group Not Found"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
  /order/:
    get:
      tags:
      - "Order"
      summary: "Return a list with all Orders"
      operationId: "get_order_resource"
      parameters:
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "A list of orders if the current user has them."
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Order-dump"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
  /order/in-progress:
    get:
      tags:
      - "Order"
      summary: "Return a list with all Orders"
      operationId: "get_order_inprogress_resource"
      parameters:
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "A list of in-progress orders if the current user has them."
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Order-dump"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
  /order/{orderId}:
    get:
      tags:
      - "Order"
      summary: "Return details of a specific Order"
      operationId: "get_order_id_resource"
      parameters:
      - name: "orderId"
        in: "path"
        description: "\"ID of Order to View\""
        required: true
        type: "integer"
        x-exportParamName: "OrderId"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "An specific order with its details."
          schema:
            $ref: "#/definitions/Order-dump"
        "404":
          description: "Order ID not found."
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
  /permission/:
    get:
      tags:
      - "Permission"
      summary: "Endpoint to get All Permissions"
      operationId: "get_permission_all_resource"
      parameters: []
      responses:
        "200":
          description: "Success"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
  /permission/contact:
    post:
      tags:
      - "Permission"
      summary: "Endpoint to assign a new Permission to a Contact"
      operationId: "post_permission_assign_contact_resource"
      parameters:
      - in: "body"
        name: "payload"
        required: true
        schema:
          $ref: "#/definitions/Permission"
        x-exportParamName: "Payload"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Success"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/PermissionReturn"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
  /permission/contact/{contactId}:
    get:
      tags:
      - "Permission"
      summary: "Endpoint to get Contact Permissions"
      operationId: "get_permission_contact_resource"
      parameters:
      - name: "contactId"
        in: "path"
        required: true
        type: "integer"
        x-exportParamName: "ContactId"
      responses:
        "200":
          description: "Success"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
  /permission/user:
    get:
      tags:
      - "Permission"
      summary: "Endpoint to get User Permissions"
      operationId: "get_permission_user_resource"
      parameters: []
      responses:
        "200":
          description: "Success"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
  /product/options:
    get:
      tags:
      - "Product"
      summary: "Get all options"
      operationId: "get_products_and_options_resource"
      parameters:
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Success"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/ProductOption"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
  /product/{productId}/operating-systems:
    get:
      tags:
      - "Product"
      summary: "Get product operating systems"
      operationId: "get_product_operating_systems_resource"
      parameters:
      - name: "productId"
        in: "path"
        description: "ID of the Product"
        required: true
        type: "integer"
        x-exportParamName: "ProductId"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Success"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Option"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
  /product/{productId}/options:
    get:
      tags:
      - "Product"
      summary: "Get product options"
      operationId: "get_product_option_resource"
      parameters:
      - name: "groupBy"
        in: "query"
        description: "Get results grouped by 'upgrade' or without grouping."
        required: false
        type: "string"
        default: "upgrade"
        x-exportParamName: "GroupBy"
        x-optionalDataType: "String"
      - name: "productId"
        in: "path"
        description: "ID of the Product"
        required: true
        type: "integer"
        x-exportParamName: "ProductId"
      responses:
        "200":
          description: "Product data was found"
          schema:
            $ref: "#/definitions/Options"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
  /profile/:
    get:
      tags:
      - "Profile"
      summary: "Get Profile of current user or a contact with id"
      description: "The id is optional and if it is necessary must be sent as URL\
        \ param."
      operationId: "get_profile_resource"
      parameters:
      - name: "contactId"
        in: "query"
        description: "\"ID of Contact to manage Profile\""
        required: false
        type: "string"
        x-exportParamName: "ContactId"
        x-optionalDataType: "String"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/Profile"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
    put:
      tags:
      - "Profile"
      summary: "Update Profile of current user or a contact with id"
      description: "The id is optional and if it is necessary must be sent as URL\
        \ param."
      operationId: "put_profile_resource"
      parameters:
      - name: "contactId"
        in: "query"
        description: "\"ID of Contact to manage Profile\""
        required: false
        type: "string"
        x-exportParamName: "ContactId"
        x-optionalDataType: "String"
      - in: "body"
        name: "payload"
        required: true
        schema:
          $ref: "#/definitions/ProfileUpdate"
        x-exportParamName: "Payload"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Profile successfully updated."
          schema:
            $ref: "#/definitions/Profile"
        "400":
          description: "Unable to update Profile Data."
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
  /profile/basic:
    get:
      tags:
      - "Profile"
      summary: "Get Basic Profile of current user or a contact with id"
      description: "The id is optional and if it is necessary must be sent as URL\
        \ param."
      operationId: "get_basic_profile_resource"
      parameters:
      - name: "contactId"
        in: "query"
        description: "\"ID of Contact to manage Basic Profile\""
        required: false
        type: "string"
        x-exportParamName: "ContactId"
        x-optionalDataType: "String"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/BasicProfile"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
  /service/:
    get:
      tags:
      - "Service"
      summary: "Return a list of all account services"
      operationId: "get_service_resource"
      parameters:
      - name: "type_code"
        in: "query"
        description: "Return service having the same service type code, the default\
          \ value is all\n The list of service types can be accessed on https://core.hivelocity.net/api/v2/service/types"
        required: false
        type: "string"
        default: "null"
        x-exportParamName: "TypeCode"
        x-optionalDataType: "String"
      - name: "orderId"
        in: "query"
        description: "Order id of the service"
        required: false
        type: "integer"
        default: "null"
        x-exportParamName: "OrderId"
        x-optionalDataType: "Int32"
      - name: "status"
        in: "query"
        description: "The current status of the service"
        required: true
        type: "string"
        default: "all"
        enum:
        - "all"
        - "active"
        - "deactivated"
        - "pending"
        - "suspended"
        - "cancelled"
        x-exportParamName: "Status"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Success"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/FastService-dump"
        "404":
          description: "You don't own any services"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
  /service/managed-requirements:
    get:
      tags:
      - "Service"
      summary: "Return a dictionary with managed services operating system and panel\
        \ requirements"
      operationId: "get_service_managed_req_resource"
      parameters:
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/ServiceManagedReq"
        "404":
          description: "Service not found"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
  /service/types:
    get:
      tags:
      - "Service"
      summary: "Return all available service types"
      operationId: "get_service_type_resource"
      parameters:
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Service types retrieved"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/ServiceType"
        "404":
          description: "Unable to retrieve service types"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
  /service/{serviceId}:
    get:
      tags:
      - "Service"
      summary: "Return a dictionary with data from a specific account service"
      operationId: "get_service_id_resource"
      parameters:
      - name: "includeZeroPriceOptions"
        in: "query"
        description: "Includes on the field serviceOptions the options having price\
          \ equal to zero"
        required: false
        type: "boolean"
        x-exportParamName: "IncludeZeroPriceOptions"
        x-optionalDataType: "Bool"
      - name: "serviceId"
        in: "path"
        required: true
        type: "integer"
        x-exportParamName: "ServiceId"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/Service"
        "404":
          description: "Service not found"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
  /service/{serviceId}/manageable:
    get:
      tags:
      - "Service"
      summary: "Return a dictionary with data verifying managed services eligibility"
      operationId: "get_service_manageable_resource"
      parameters:
      - name: "serviceId"
        in: "path"
        required: true
        type: "integer"
        x-exportParamName: "ServiceId"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/ServiceManageable"
        "404":
          description: "Service not found"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
  /ssh_key/:
    get:
      tags:
      - "SshKey"
      summary: "Gets all public ssh key"
      operationId: "get_ssh_key_resource"
      parameters:
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "All Public ssh key successfully retrieved."
          schema:
            type: "array"
            items:
              $ref: "#/definitions/SshKeyResponse"
        "400":
          description: "Unable to get all public ssh keys"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
    post:
      tags:
      - "SshKey"
      summary: "Adds public ssh key"
      operationId: "post_ssh_key_resource"
      parameters:
      - in: "body"
        name: "payload"
        required: true
        schema:
          $ref: "#/definitions/SshKey"
        x-exportParamName: "Payload"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "201":
          description: "Public ssh key successfully added "
          schema:
            $ref: "#/definitions/SshKeyResponse"
        "400":
          description: "Unable to added public ssh key"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
  /ssh_key/{sshKeyId}:
    get:
      tags:
      - "SshKey"
      summary: "Get public ssh key"
      operationId: "get_ssh_key_id_resource"
      parameters:
      - name: "sshKeyId"
        in: "path"
        required: true
        type: "integer"
        x-exportParamName: "SshKeyId"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Public ssh key successfully retrieved."
          schema:
            $ref: "#/definitions/SshKeyResponse"
        "404":
          description: "Public ssh key not found."
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
    put:
      tags:
      - "SshKey"
      summary: "Updates public ssh key"
      operationId: "put_ssh_key_id_resource"
      parameters:
      - name: "sshKeyId"
        in: "path"
        required: true
        type: "integer"
        x-exportParamName: "SshKeyId"
      - in: "body"
        name: "payload"
        required: true
        schema:
          $ref: "#/definitions/SshKeyUpdate"
        x-exportParamName: "Payload"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Public ssh key successfully updated."
          schema:
            $ref: "#/definitions/SshKeyResponse"
        "400":
          description: "Unable to update public ssh key."
        "404":
          description: "Public ssh key not found."
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
    delete:
      tags:
      - "SshKey"
      summary: "Removes public ssh key"
      operationId: "delete_ssh_key_id_resource"
      parameters:
      - name: "sshKeyId"
        in: "path"
        required: true
        type: "integer"
        x-exportParamName: "SshKeyId"
      responses:
        "404":
          description: "Public ssh key not found."
        "200":
          description: "Public ssh key successfully removed."
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
  /tickets/:
    get:
      tags:
      - "Ticket"
      summary: "Returns a list with all Tickets"
      operationId: "get_ticket_resource"
      parameters:
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "All the tickets retrieved."
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Ticket"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
    post:
      tags:
      - "Ticket"
      summary: "Creates a new ticket"
      operationId: "post_ticket_resource"
      parameters:
      - in: "body"
        name: "payload"
        required: true
        schema:
          $ref: "#/definitions/TicketCreate"
        x-exportParamName: "Payload"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "201":
          description: "Ticket successfully created"
          schema:
            $ref: "#/definitions/Ticket"
        "400":
          description: "Unable to create ticket"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
  /tickets/search:
    get:
      tags:
      - "Ticket"
      summary: "Return results of ticket search"
      operationId: "get_ticket_search_resource"
      parameters:
      - name: "perPage"
        in: "query"
        description: "Number of items per page."
        required: false
        type: "integer"
        default: 10
        x-exportParamName: "PerPage"
        x-optionalDataType: "Int32"
      - name: "page"
        in: "query"
        description: "The page number of search."
        required: false
        type: "integer"
        default: 1
        x-exportParamName: "Page"
        x-optionalDataType: "Int32"
      - name: "q"
        in: "query"
        description: "Content search."
        required: false
        type: "string"
        x-exportParamName: "Q"
        x-optionalDataType: "String"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Ticket search results."
          schema:
            $ref: "#/definitions/TicketSeachResult"
        "400":
          description: "Invalid ticket search request."
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
  /tickets/{ticketId}:
    get:
      tags:
      - "Ticket"
      summary: "Returns details of a specific ticket"
      operationId: "get_ticket_id_resource"
      parameters:
      - name: "ticketId"
        in: "path"
        description: "ticket database ID"
        required: true
        type: "integer"
        x-exportParamName: "TicketId"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "The ticket retrieved."
          schema:
            $ref: "#/definitions/Ticket"
        "404":
          description: "The ticket id not found."
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
    put:
      tags:
      - "Ticket"
      summary: "Updates a specific ticket"
      operationId: "put_ticket_id_resource"
      parameters:
      - name: "ticketId"
        in: "path"
        description: "ticket database ID"
        required: true
        type: "integer"
        x-exportParamName: "TicketId"
      - in: "body"
        name: "payload"
        required: true
        schema:
          $ref: "#/definitions/TicketPut"
        x-exportParamName: "Payload"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Ticket successfully updated."
          schema:
            $ref: "#/definitions/Ticket"
        "404":
          description: "The ticket id not found."
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
  /tickets/{ticketId}/reply:
    get:
      tags:
      - "Ticket"
      summary: "Returns a reply for a specific ticket"
      operationId: "get_ticket_reply_resource"
      parameters:
      - name: "ticketId"
        in: "path"
        description: "ticket database ID"
        required: true
        type: "integer"
        x-exportParamName: "TicketId"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "The ticket replies retrieved."
          schema:
            type: "array"
            items:
              $ref: "#/definitions/TicketPost"
        "404":
          description: "The ticket id not found."
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
    post:
      tags:
      - "Ticket"
      summary: "Creates reply for a specific Ticket"
      operationId: "post_ticket_reply_resource"
      parameters:
      - name: "ticketId"
        in: "path"
        description: "ticket database ID"
        required: true
        type: "integer"
        x-exportParamName: "TicketId"
      - in: "body"
        name: "payload"
        required: true
        schema:
          $ref: "#/definitions/TicketCreateReply"
        x-exportParamName: "Payload"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "201":
          description: "Ticket reply successfully created."
          schema:
            $ref: "#/definitions/TicketPost"
        "404":
          description: "The ticket id not found."
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
  /token/:
    get:
      tags:
      - "Token"
      summary: "Returns a list of Public API Tokens for the current user (last 4 characters\
        \ only)"
      operationId: "get_token_resource"
      parameters:
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Public API Tokens retrieved."
          schema:
            type: "array"
            items:
              $ref: "#/definitions/PublicApiHideToken-dump"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
    post:
      tags:
      - "Token"
      summary: "Create a new Public API Token for the current user"
      operationId: "post_token_resource"
      parameters:
      - in: "body"
        name: "payload"
        required: true
        schema:
          $ref: "#/definitions/PublicApiToken"
        x-exportParamName: "Payload"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/PublicApiToken-dump"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
        "201":
          description: "Public API Token created."
    put:
      tags:
      - "Token"
      summary: "Updates the Public API Token with apiTokenId"
      operationId: "put_token_resource"
      parameters:
      - in: "body"
        name: "payload"
        required: true
        schema:
          $ref: "#/definitions/PublicApiToken-load"
        x-exportParamName: "Payload"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Public API Token successfully updated."
          schema:
            $ref: "#/definitions/PublicApiHideToken-dump"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
    delete:
      tags:
      - "Token"
      summary: "Deletes the Public API Token with apiTokenId"
      operationId: "delete_token_resource"
      parameters:
      - in: "body"
        name: "payload"
        required: true
        schema:
          $ref: "#/definitions/DeleteApiToken-load"
        x-exportParamName: "Payload"
      responses:
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
        "201":
          description: "Public API Token successfully removed."
  /vlan/:
    get:
      tags:
      - "VLAN"
      summary: "Get all VLANs"
      operationId: "get_vlan_resource"
      parameters:
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "VLANs retrieved successfuly"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Vlan"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
    post:
      tags:
      - "VLAN"
      summary: "Create VLAN"
      operationId: "post_vlan_resource"
      parameters:
      - in: "body"
        name: "payload"
        required: true
        schema:
          $ref: "#/definitions/VlanCreate"
        x-exportParamName: "Payload"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/Vlan"
        "400":
          description: "Invalid VLAN creation parameter."
        "201":
          description: "VLAN created successfully."
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
  /vlan/{vlanId}:
    get:
      tags:
      - "VLAN"
      summary: "Get VLAN"
      operationId: "get_vlan_id_resource"
      parameters:
      - name: "vlanId"
        in: "path"
        description: "Id of the VLAN to interact with"
        required: true
        type: "integer"
        x-exportParamName: "VlanId"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "VLAN Found"
          schema:
            $ref: "#/definitions/Vlan"
        "404":
          description: "VLAN Not Found"
        "401":
          description: "Access to VLAN not Allowed"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
    put:
      tags:
      - "VLAN"
      summary: "Modify VLAN"
      operationId: "put_vlan_id_resource"
      parameters:
      - name: "vlanId"
        in: "path"
        description: "Id of the VLAN to interact with"
        required: true
        type: "integer"
        x-exportParamName: "VlanId"
      - in: "body"
        name: "payload"
        required: true
        schema:
          $ref: "#/definitions/VlanUpdate"
        x-exportParamName: "Payload"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "202":
          description: "Accepted."
          schema:
            $ref: "#/definitions/NetworkTask-dump"
        "429":
          description: "Request was Rate Limited"
        "404":
          description: "VLAN Not Found"
        "401":
          description: "Access to VLAN not Allowed"
        "400":
          description: "Error."
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
    delete:
      tags:
      - "VLAN"
      summary: "Delete VLAN"
      operationId: "delete_vlan_id_resource"
      parameters:
      - name: "vlanId"
        in: "path"
        description: "Id of the VLAN to interact with"
        required: true
        type: "integer"
        x-exportParamName: "VlanId"
      responses:
        "404":
          description: "VLAN Not Found"
        "401":
          description: "Access to VLAN not Allowed"
        "400":
          description: "Error."
        "204":
          description: "Success."
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
  /vlan/{vlanId}/clear:
    post:
      tags:
      - "VLAN"
      summary: "Clear all configurations on this VLAN, including Ports, IPs and associated\
        \ Static Routes"
      operationId: "post_vlan_id_clear_resource"
      parameters:
      - name: "vlanId"
        in: "path"
        description: "Id of the VLAN to interact with"
        required: true
        type: "integer"
        x-exportParamName: "VlanId"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "202":
          description: "Accepted."
          schema:
            $ref: "#/definitions/NetworkTask-dump"
        "404":
          description: "VLAN Not Found"
        "401":
          description: "Access to VLAN not Allowed"
        "400":
          description: "Error."
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
  /webhooks/:
    get:
      tags:
      - "Webhook"
      summary: "Returns your active Webhooks"
      operationId: "get_webhook_resource"
      parameters:
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Success"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Webhook"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
    post:
      tags:
      - "Webhook"
      summary: "Create a new Webhook for a Webhook Event"
      operationId: "post_webhook_resource"
      parameters:
      - in: "body"
        name: "payload"
        required: true
        schema:
          $ref: "#/definitions/WebhookCreate"
        x-exportParamName: "Payload"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Webhook was created."
          schema:
            $ref: "#/definitions/Webhook"
        "400":
          description: "Unable to create Webhook."
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
  /webhooks/events:
    get:
      tags:
      - "Webhook"
      summary: "Returns all available Webhook Events"
      operationId: "get_webhook_event_resource"
      parameters:
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Success"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/WebhookEvent"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
  /webhooks/trigger:
    post:
      tags:
      - "Webhook"
      summary: "Queues a webhook for the event script action that was triggered"
      operationId: "post_event_script_action_trigger_resource"
      parameters:
      - name: "webhookName"
        in: "query"
        description: "The name of the webhook to trigger."
        required: false
        type: "string"
        x-exportParamName: "WebhookName"
        x-optionalDataType: "String"
      responses:
        "202":
          description: "Accepted."
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
  /webhooks/{webhookId}:
    get:
      tags:
      - "Webhook"
      summary: "Returns detailed information for a Single Webhook"
      operationId: "get_webhook_id_resource"
      parameters:
      - name: "webhookId"
        in: "path"
        description: "ID of Webhook to View / Update"
        required: true
        type: "integer"
        x-exportParamName: "WebhookId"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/Webhook"
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
    put:
      tags:
      - "Webhook"
      summary: "Updates a Single Webhook"
      operationId: "put_webhook_id_resource"
      parameters:
      - name: "webhookId"
        in: "path"
        description: "ID of Webhook to View / Update"
        required: true
        type: "integer"
        x-exportParamName: "WebhookId"
      - in: "body"
        name: "payload"
        required: true
        schema:
          $ref: "#/definitions/WebhookUpdate"
        x-exportParamName: "Payload"
      - name: "X-Fields"
        in: "header"
        description: "An optional fields mask"
        required: false
        type: "string"
        format: "mask"
        x-exportParamName: "XFields"
        x-optionalDataType: "String"
      responses:
        "200":
          description: "Webhook was updated."
          schema:
            $ref: "#/definitions/Webhook"
        "400":
          description: "Unable to update Webhook."
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
    delete:
      tags:
      - "Webhook"
      summary: "Deletes a single webhook"
      operationId: "delete_webhook_id_resource"
      parameters:
      - name: "webhookId"
        in: "path"
        description: "ID of Webhook to View / Update"
        required: true
        type: "integer"
        x-exportParamName: "WebhookId"
      responses:
        "204":
          description: "Webhook was deleted."
        "403":
          description: "You have not been granted permission to complete this action.\
            \ Please contact your account manager to grant the proper permission."
securityDefinitions:
  apiKey:
    type: "apiKey"
    name: "X-API-KEY"
    in: "header"
definitions:
  CreateEnterpriseControlledClient:
    type: "object"
    required:
    - "company"
    - "email"
    properties:
      company:
        type: "string"
      email:
        type: "string"
      password:
        type: "string"
    example:
      password: "password"
      company: "company"
      email: "email"
  DeactivateEnterpriseControlledClient:
    type: "object"
    required:
    - "clientId"
    properties:
      clientId:
        type: "integer"
    example:
      clientId: 0
  ClientCreate-dump:
    type: "object"
    properties:
      email:
        type: "string"
      password:
        type: "string"
      fax:
        type: "string"
      id:
        type: "integer"
      phone:
        type: "string"
      city:
        type: "string"
      active:
        type: "boolean"
      last:
        type: "string"
      state:
        type: "string"
      address:
        type: "string"
      company:
        type: "string"
      created:
        type: "integer"
      zip:
        type: "string"
      first:
        type: "string"
      country:
        type: "string"
    example:
      zip: "zip"
      country: "country"
      address: "address"
      last: "last"
      city: "city"
      created: 6
      active: true
      password: "password"
      phone: "phone"
      company: "company"
      id: 0
      state: "state"
      fax: "fax"
      email: "email"
      first: "first"
  ControlledClient-dump:
    type: "object"
    properties:
      email:
        type: "string"
      fax:
        type: "string"
      id:
        type: "integer"
      phone:
        type: "string"
      city:
        type: "string"
      active:
        type: "boolean"
      last:
        type: "string"
      state:
        type: "string"
      address:
        type: "string"
      company:
        type: "string"
      created:
        type: "integer"
      zip:
        type: "string"
      first:
        type: "string"
      country:
        type: "string"
    example:
      zip: "zip"
      country: "country"
      address: "address"
      last: "last"
      city: "city"
      created: 6
      active: true
      phone: "phone"
      company: "company"
      id: 0
      state: "state"
      fax: "fax"
      email: "email"
      first: "first"
  Bandwidth:
    type: "object"
    properties:
      metadata:
        type: "object"
        description: "Returns metadata about the query including the 95th percentile\
          \ values of the returned data, legend for returned data arrays, and query\
          \ args passed to the query."
        properties: {}
      bandwidthData:
        type: "array"
        description: "Returns an array where each item contains a dictionary of data\
          \ and an identifier for each requested interface. The data itself is an\
          \ array of arrays where each item is the measurementat the requested `step`\
          \ and the index of each integer value corresponds with the legend returned\
          \ in the `metadata`."
        items:
          type: "array"
          items:
            type: "number"
      interface:
        type: "string"
        description: "The interface(s) displayed in the image."
      switchId:
        type: "string"
        description: "The unique ID of the switch where bandwidth data is measured."
    example:
      metadata: "{}"
      switchId: "switchId"
      bandwidthData:
      - - 0.80082819046101150206595775671303272247314453125
        - 0.80082819046101150206595775671303272247314453125
      - - 0.80082819046101150206595775671303272247314453125
        - 0.80082819046101150206595775671303272247314453125
      interface: "interface"
  BandwidthImage:
    type: "object"
    properties:
      graphImage:
        type: "string"
        description: "A PNG image of bandwidth usage."
      interface:
        type: "string"
        description: "The interface(s) displayed in the image."
      switchId:
        type: "string"
        description: "The unique ID of the switch where bandwidth data is measured."
    example:
      switchId: "switchId"
      graphImage: "graphImage"
      interface: "interface"
  BareMetalDeviceCreate:
    type: "object"
    required:
    - "hostname"
    - "locationName"
    - "osName"
    - "productId"
    properties:
      period:
        type: "string"
        example: "hourly"
        description: "hourly|monthly|quarterly|semi-annually|annually|biennial|triennial"
        default: "hourly"
      ignitionId:
        type: "integer"
        description: "The unique ID of an Ignition File for FlatcarOS provisions."
      productId:
        type: "integer"
        description: "The unique ID of the desired product to provision."
      bondingSupport:
        type: "boolean"
        description: "If true, ensures the provisioned device supports port bonding.\
          \ If false, ensures no bonding support."
      tags:
        type: "array"
        example: []
        description: "User specified values."
        items:
          type: "string"
      vlanId:
        type: "integer"
      forceDeviceId:
        type: "integer"
        description: "For users with reserved devices. The unique ID of the target\
          \ device to provision."
      customIPXEScriptURL:
        type: "string"
        description: "URL to download custom iPXE script if not supplying script in\
          \ entirety"
      customIPXEScriptContents:
        type: "string"
        description: "Contents of iPXE script if not supplying URL"
      publicSshKeyId:
        type: "integer"
      hostname:
        type: "string"
        description: "A FQDN for the device. For example: `example.hivelocity.net`"
      locationName:
        type: "string"
        description: "A facility code. For example `NYC1`."
      osName:
        type: "string"
        description: "The name of the Operating System to provision on this device.\
          \ Must match name of an operating system product option."
      script:
        type: "string"
        description: "A Cloud-Init script or a post-install script (Bash for Linux\
          \ or Powershell for Windows)."
    example:
      period: "hourly"
      locationName: "locationName"
      productId: 6
      vlanId: 1
      customIPXEScriptContents: "customIPXEScriptContents"
      forceDeviceId: 5
      osName: "osName"
      ignitionId: 0
      script: "script"
      tags: []
      publicSshKeyId: 5
      hostname: "hostname"
      customIPXEScriptURL: "customIPXEScriptURL"
      bondingSupport: true
  BareMetalDevice:
    type: "object"
    properties:
      period:
        type: "string"
        example: "hourly"
        description: "This device's service's billing period."
      serviceId:
        type: "integer"
        description: "The unique ID of the service associated with this device."
      powerStatus:
        type: "string"
        description: "ON|OFF"
      script:
        type: "string"
        description: "The post-install/cloud-init script used during this device's\
          \ last provisioning."
      productId:
        type: "integer"
        description: "The unique ID of the product associated with this device."
      publicSshKeyId:
        type: "integer"
      tags:
        type: "array"
        description: "User specified values."
        items:
          type: "string"
      vlanId:
        type: "integer"
      customIPXEScriptContents:
        type: "string"
        description: "Contents of custom iPXE used to provision device"
      customIPXEScriptURL:
        type: "string"
        description: "URL of custom iPXE script used to provision device"
      locationName:
        type: "string"
        description: "A facility code. For example `NYC1`."
      orderId:
        type: "integer"
        description: "The unique ID of the order for this device."
      deviceId:
        type: "integer"
        description: "The unique ID of the device."
      hostname:
        type: "string"
        description: "The user specified hostname for the device. Note: If the hostname\
          \ is changed in the portal or on the device itself this value may not reflect\
          \ the actual hostname on the device."
      productName:
        type: "string"
        description: "The name of the product associated with this device."
      osName:
        type: "string"
        description: "The name of the operating system currently installed on this\
          \ device. Note: If you manually reload your own OS over IPMI this value\
          \ may not reflect the OS currently on your device."
      primaryIp:
        type: "string"
        description: "The first assigned public IP for accessing this device."
    example:
      period: "hourly"
      locationName: "locationName"
      productId: 6
      vlanId: 5
      orderId: 5
      customIPXEScriptContents: "customIPXEScriptContents"
      osName: "osName"
      deviceId: 2
      script: "script"
      productName: "productName"
      publicSshKeyId: 1
      tags:
      - "tags"
      - "tags"
      powerStatus: "powerStatus"
      hostname: "hostname"
      customIPXEScriptURL: "customIPXEScriptURL"
      primaryIp: "primaryIp"
      serviceId: 0
  BareMetalDeviceUpdate:
    type: "object"
    required:
    - "hostname"
    - "osName"
    properties:
      ignitionId:
        type: "integer"
        description: "The unique ID of an Ignition File for FlatcarOS provisions."
      tags:
        type: "array"
        items:
          type: "string"
      customIPXEScriptContents:
        type: "string"
        description: "Contents of iPXE script if not specifying URL. If both script\
          \ URL and contents are not specified, the last iPXE script contents are\
          \ used if OS selection requires an iPXE script."
      customIPXEScriptURL:
        type: "string"
        description: "URL to download custom iPXE script if not specifying contents\
          \ in entirety. If both script URL and contents are not specified, the last\
          \ iPXE script contents are used if OS selection requires an  iPXE script."
      forceReload:
        type: "boolean"
        example: false
        description: "Whether to force a reload even if fields have not changed"
        default: false
      publicSshKeyId:
        type: "integer"
      hostname:
        type: "string"
        description: "A FQDN for the device. For example: `example.hivelocity.net`"
      osName:
        type: "string"
        description: "The name of the Operating System to provision on this device.\
          \ Must match name of an operating system product option."
      script:
        type: "string"
        description: "A Cloud-Init script or a post-install script (Bash for Linux\
          \ or Powershell for Windows)."
    example:
      hostname: "hostname"
      customIPXEScriptURL: "customIPXEScriptURL"
      customIPXEScriptContents: "customIPXEScriptContents"
      osName: "osName"
      ignitionId: 0
      forceReload: false
      script: "script"
      tags:
      - "tags"
      - "tags"
      publicSshKeyId: 6
  BareMetalDeviceBatchCreate:
    type: "object"
    properties:
      devices:
        type: "array"
        description: "List of devices to provision."
        items:
          $ref: "#/definitions/BareMetalDeviceCreate"
      orderGroupId:
        type: "integer"
        description: "Unique ID to identify the group order."
    example:
      devices:
      - period: "hourly"
        locationName: "locationName"
        productId: 6
        vlanId: 1
        customIPXEScriptContents: "customIPXEScriptContents"
        forceDeviceId: 5
        osName: "osName"
        ignitionId: 0
        script: "script"
        tags: []
        publicSshKeyId: 5
        hostname: "hostname"
        customIPXEScriptURL: "customIPXEScriptURL"
        bondingSupport: true
      - period: "hourly"
        locationName: "locationName"
        productId: 6
        vlanId: 1
        customIPXEScriptContents: "customIPXEScriptContents"
        forceDeviceId: 5
        osName: "osName"
        ignitionId: 0
        script: "script"
        tags: []
        publicSshKeyId: 5
        hostname: "hostname"
        customIPXEScriptURL: "customIPXEScriptURL"
        bondingSupport: true
      orderGroupId: 0
  BareMetalDeviceBatch:
    type: "object"
    properties:
      devices:
        type: "array"
        description: "List of provisioned devices."
        items:
          $ref: "#/definitions/BareMetalDevice"
      orderGroupId:
        type: "integer"
        description: "Unique ID of the group order."
    example:
      devices:
      - period: "hourly"
        locationName: "locationName"
        productId: 6
        vlanId: 5
        orderId: 5
        customIPXEScriptContents: "customIPXEScriptContents"
        osName: "osName"
        deviceId: 2
        script: "script"
        productName: "productName"
        publicSshKeyId: 1
        tags:
        - "tags"
        - "tags"
        powerStatus: "powerStatus"
        hostname: "hostname"
        customIPXEScriptURL: "customIPXEScriptURL"
        primaryIp: "primaryIp"
        serviceId: 0
      - period: "hourly"
        locationName: "locationName"
        productId: 6
        vlanId: 5
        orderId: 5
        customIPXEScriptContents: "customIPXEScriptContents"
        osName: "osName"
        deviceId: 2
        script: "script"
        productName: "productName"
        publicSshKeyId: 1
        tags:
        - "tags"
        - "tags"
        powerStatus: "powerStatus"
        hostname: "hostname"
        customIPXEScriptURL: "customIPXEScriptURL"
        primaryIp: "primaryIp"
        serviceId: 0
      orderGroupId: 0
  BillingInfoVerification:
    type: "object"
    required:
    - "id"
    properties:
      id:
        type: "integer"
      verificationAmount:
        type: "number"
      provisionOrderId:
        type: "integer"
    example:
      provisionOrderId: 1
      verificationAmount: 6.02745618307040320615897144307382404804229736328125
      id: 0
  BillingInfo:
    type: "object"
    properties:
      email:
        type: "string"
      achAba:
        type: "string"
      paymentType:
        type: "string"
      isCCVerified:
        type: "boolean"
      phone:
        type: "string"
      achType:
        type: "string"
      zip:
        type: "string"
      first:
        type: "string"
      pendingVerification:
        type: "boolean"
      achBank:
        type: "string"
      id:
        type: "integer"
      city:
        type: "string"
      state:
        type: "string"
      last:
        type: "string"
      company:
        type: "string"
      address:
        type: "string"
      ccExpire:
        type: "string"
      ccNum:
        type: "string"
      clientId:
        type: "integer"
      status:
        type: "integer"
      achAccount:
        type: "string"
      ccType:
        type: "string"
      country:
        type: "string"
    example:
      zip: "zip"
      country: "country"
      address: "address"
      clientId: 6
      last: "last"
      city: "city"
      isCCVerified: true
      achBank: "achBank"
      ccNum: "ccNum"
      achType: "achType"
      paymentType: "paymentType"
      ccType: "ccType"
      achAba: "achAba"
      ccExpire: "ccExpire"
      phone: "phone"
      achAccount: "achAccount"
      pendingVerification: true
      company: "company"
      id: 0
      state: "state"
      email: "email"
      first: "first"
      status: 1
  Credit:
    type: "object"
    properties:
      id:
        type: "integer"
      amount:
        type: "number"
      balance:
        type: "number"
      clientId:
        type: "integer"
      created:
        type: "integer"
      orderId:
        type: "integer"
      reason:
        type: "string"
      status:
        type: "string"
      billingInfoId:
        type: "integer"
    example:
      reason: "reason"
      amount: 6.02745618307040320615897144307382404804229736328125
      clientId: 5
      balance: 1.46581298050294517310021547018550336360931396484375
      orderId: 2
      billingInfoId: 7
      created: 5
      id: 0
      status: "status"
  CancellationCreate:
    type: "object"
    required:
    - "deviceId"
    - "reason"
    - "serviceId"
    properties:
      reason:
        type: "string"
        description: "My current service is being upgraded|Hardware/software/network\
          \ or power issues|I think I have found a better deal|I have experienced\
          \ tech support problems|I am consolidating my Hivelocity accounts|I am a\
          \ reseller and my customer cancelled|I am moving to a different technology\
          \ solution: Public Cloud|I am moving to a different technology solution:\
          \ Managed Hosting Company|A product difference (Example: AWS)"
      comments:
        type: "string"
        description: "Details why the device is being cancelled"
      serviceId:
        type: "integer"
        description: "Unique ID of a service. Must be related to `device_id`."
      deviceId:
        type: "integer"
        description: "Unique ID of a device. Must be related to `service_id`."
    example:
      reason: "reason"
      comments: "comments"
      serviceId: 0
      deviceId: 6
  Cancellation:
    type: "object"
    properties:
      cancelled:
        type: "boolean"
        description: "True if cancel completed."
      planId:
        type: "integer"
        description: "Deprecated."
      clientId:
        type: "integer"
        description: "Unique ID of a client."
      deletedAt:
        type: "string"
        format: "date-time"
        description: "Date of cancellation completion."
      monthlyPayment:
        type: "integer"
        description: "The monthly cost of the cancelled device."
      deviceId:
        type: "integer"
        description: "Unique ID of a device."
      id:
        type: "integer"
        description: "Unique ID of the cancellation request."
      requestDate:
        type: "string"
        format: "date-time"
        description: "The requested cancellation date, if specified."
      activeMonths:
        type: "integer"
        description: "The number of months the target device has been active."
      name:
        type: "string"
        description: "Name of user who submitted the request"
      startDate:
        type: "string"
        format: "date-time"
        description: "Date of cancel request submission."
      serviceId:
        type: "integer"
        description: "Unique ID of a service."
    example:
      deletedAt: "2000-01-23T04:56:07.000+00:00"
      clientId: 6
      monthlyPayment: 1
      activeMonths: 2
      requestDate: "2000-01-23T04:56:07.000+00:00"
      name: "name"
      cancelled: true
      planId: 0
      id: 5
      serviceId: 7
      deviceId: 5
      startDate: "2000-01-23T04:56:07.000+00:00"
  ContactCreate:
    type: "object"
    required:
    - "active"
    - "email"
    - "fullName"
    properties:
      fullName:
        type: "string"
      email:
        type: "string"
      password:
        type: "string"
        default: "1c98195b277891ebe993cf2cce7ad434"
      description:
        type: "string"
      phone:
        type: "string"
      active:
        type: "integer"
    example:
      password: "1c98195b277891ebe993cf2cce7ad434"
      phone: "phone"
      fullName: "fullName"
      description: "description"
      active: 0
      email: "email"
  Contact-dump:
    type: "object"
    required:
    - "active"
    - "email"
    - "fullName"
    properties:
      fullName:
        type: "string"
      email:
        type: "string"
      referralCode:
        type: "string"
      clientId:
        type: "integer"
      contactId:
        type: "integer"
      description:
        type: "string"
      isClient:
        type: "boolean"
      phone:
        type: "string"
      active:
        type: "integer"
    example:
      clientId: 0
      contactId: 6
      phone: "phone"
      referralCode: "referralCode"
      fullName: "fullName"
      description: "description"
      active: 1
      isClient: true
      email: "email"
  ContactUpdate:
    type: "object"
    properties:
      fullName:
        type: "string"
      email:
        type: "string"
      description:
        type: "string"
      phone:
        type: "string"
      active:
        type: "integer"
    example:
      phone: "phone"
      fullName: "fullName"
      description: "description"
      active: 0
      email: "email"
  Password:
    type: "object"
    required:
    - "newPassword"
    - "password"
    properties:
      newPassword:
        type: "string"
      password:
        type: "string"
    example:
      password: "password"
      newPassword: "newPassword"
  PasswordRequest:
    type: "object"
    required:
    - "email"
    properties:
      email:
        type: "string"
    example:
      email: "email"
  PasswordResponse:
    type: "object"
    required:
    - "password"
    - "token"
    properties:
      password:
        type: "string"
      token:
        type: "string"
    example:
      password: "password"
      token: "token"
  CreateCredit:
    type: "object"
    properties:
      amount:
        type: "number"
      billingInfoId:
        type: "integer"
    example:
      amount: 0.80082819046101150206595775671303272247314453125
      billingInfoId: 6
  TotalActiveCredit:
    type: "object"
    properties:
      totalActive:
        type: "number"
    example:
      totalActive: 0.80082819046101150206595775671303272247314453125
  Device-dump:
    type: "object"
    required:
    - "name"
    properties:
      deviceId:
        type: "integer"
        description: "The unique ID of the device."
      name:
        type: "string"
        description: "User given custom name."
      status:
        type: "string"
        description: "active|inactive"
      deviceType:
        type: "string"
        description: "Generic description of device. Usually type and rack unit size."
      deviceTypeGroup:
        type: "string"
        description: "Generic group"
      powerStatus:
        type: "object"
        description: "ON|OFF"
        properties: {}
      hasCancellation:
        type: "boolean"
        description: "True if device has active cancellation request."
      isManaged:
        type: "boolean"
        description: "True if device enrolled in managed services."
      isReload:
        type: "boolean"
        description: "True if device currently reloading."
      monitorsUp:
        type: "integer"
        description: "# of passing device monitors"
      monitorsTotal:
        type: "integer"
        description: "Total # device monitors"
      managedAlertsTotal:
        type: "integer"
        description: "# of managed service alerts."
      ports:
        type: "array"
        description: "Device Ports (Network Interfaces)."
        items:
          type: "object"
          properties: {}
      hostname:
        type: "string"
        description: "a fqdn for the device. for example: `example.hivelocity.net`."
      ipmiEnabled:
        type: "boolean"
        description: "True if device is accessible over IPMI by customer."
      displayedTags:
        type: "array"
        description: "List containing key/values of device info based on tag order."
        items:
          type: "object"
          properties: {}
      tags:
        type: "array"
        description: "List of all user set device tags."
        items:
          type: "string"
      location:
        type: "object"
        description: "Detailed information on the device location."
        properties: {}
      networkAutomation:
        type: "object"
        description: "Network Automation status for device."
        properties: {}
      primaryIp:
        type: "string"
        description: "The first assigned public IP for accessing this device."
      ipmiAddress:
        type: "object"
        description: "IP address for IPMI connection. Requires you to whitelist your\
          \ current IP or be on IPMI VPN."
        properties: {}
      serviceMonitors:
        type: "array"
        items:
          type: "string"
      billingInfo:
        type: "object"
        description: "If set, detailed info on this device's billing method. Otherwise\
          \ null. When null the accounts default billing info is used for payments."
        properties: {}
      servicePlan:
        type: "integer"
        description: "The unique ID of the associated service."
      lastInvoiceId:
        type: "integer"
        description: "The unique ID of the last invoice for this device."
      selfProvisioning:
        type: "boolean"
        description: "True if instant server."
      metadata:
        type: "object"
        description: "Additional metadata."
        properties: {}
      spsStatus:
        type: "string"
        description: "BUILDING|IPMI_READY|PROVISIONABLE|RESERVED|WAIT_FOR_PXE|PROVISION_STARTED|PROVISION_WAIT_FOR_ADDONS|PROVISION_FINISHED|WAIT_TO_COMPLETE_ORDER|WAIT_TO_ASSIGN_SERVICE|WAIT_FOR_HARDWARE_SCAN|IN_USE|RELOADING|DEVICE_READY_TO_TEST|DEVICE_READY_TO_WIPE|DEVICE_READY_TO_UPGRADE_FIRMWARE|FAILED|CLEANUP_MOVE_TO_FAILED|IN_REVIEW"
    example:
      metadata: "{}"
      networkAutomation: "{}"
      ipmiEnabled: true
      ports:
      - "{}"
      - "{}"
      ipmiAddress: "{}"
      deviceId: 0
      powerStatus: "{}"
      hostname: "hostname"
      isReload: true
      deviceTypeGroup: "deviceTypeGroup"
      monitorsTotal: 1
      managedAlertsTotal: 5
      deviceType: "deviceType"
      spsStatus: "spsStatus"
      lastInvoiceId: 2
      isManaged: true
      tags:
      - "tags"
      - "tags"
      serviceMonitors:
      - "serviceMonitors"
      - "serviceMonitors"
      monitorsUp: 6
      billingInfo: "{}"
      servicePlan: 5
      displayedTags:
      - "{}"
      - "{}"
      name: "name"
      primaryIp: "primaryIp"
      hasCancellation: true
      selfProvisioning: true
      location: "{}"
      status: "status"
  DeviceUpdate:
    type: "object"
    properties:
      name:
        type: "string"
        example: "User given custom name"
      hostname:
        type: "string"
        example: "server1.mydomain.com"
        description: "A FQDN for the device. For example: `example.hivelocity.net`."
    example:
      hostname: "server1.mydomain.com"
      name: "User given custom name"
  DevicePower:
    type: "object"
    required:
    - "powerStatus"
    properties:
      powerStatus:
        type: "string"
        description: "ON|OFF"
    example:
      powerStatus: "powerStatus"
  DeviceTag:
    type: "object"
    properties:
      tags:
        type: "array"
        description: "List of user set device tags."
        items:
          type: "string"
    example:
      tags:
      - "tags"
      - "tags"
  DeviceIPMIThresholds:
    type: "object"
    required:
    - "thresholds"
    properties:
      thresholds:
        type: "object"
        description: "Alert thresholds for IPMI sensor values."
        properties: {}
    example:
      thresholds: "{}"
  UpdateDevicesIPMIThresholds:
    type: "object"
    required:
    - "device_ids"
    - "thresholds"
    properties:
      thresholds:
        type: "object"
        description: "Alert thresholds for IPMI sensor values."
        properties: {}
      device_ids:
        type: "array"
        description: "List of unique device IDs."
        items:
          type: "integer"
  DevicesIPMIThresholds:
    type: "object"
    required:
    - "devices"
    properties:
      devices:
        type: "object"
        properties: {}
    example:
      devices: "{}"
  DeviceIPMIInfo:
    type: "object"
    properties:
      info:
        $ref: "#/definitions/IPMIInfo"
      sensors:
        type: "array"
        items:
          $ref: "#/definitions/IPMISensor"
    example:
      sensors:
      - name: "name"
        reading: 0.80082819046101150206595775671303272247314453125
        units: "units"
        sensorId: "sensorId"
        group: "group"
        status: true
      - name: "name"
        reading: 0.80082819046101150206595775671303272247314453125
        units: "units"
        sensorId: "sensorId"
        group: "group"
        status: true
      info:
        fruInventoryDevice: "fruInventoryDevice"
        sdrRepositoryDevice: "sdrRepositoryDevice"
        productId: "productId"
        deviceAvailable: "deviceAvailable"
        manufacturerName: "manufacturerName"
        deviceSDRs: "deviceSDRs"
        manufacturerId: "manufacturerId"
        deviceRevision: "deviceRevision"
        ipmbEventGenerator: "ipmbEventGenerator"
        deviceId: "deviceId"
        chassisDevice: "chassisDevice"
        ipmiVersion: "ipmiVersion"
        selDevice: "selDevice"
        ipmbEventReceiver: "ipmbEventReceiver"
        auxFirmwareRevInfo: "auxFirmwareRevInfo"
        bridge: "bridge"
        sensorDevice: "sensorDevice"
        firmwareRevision: "firmwareRevision"
  IPMIInfo:
    type: "object"
    properties:
      auxFirmwareRevInfo:
        type: "string"
      sensorDevice:
        type: "string"
      deviceAvailable:
        type: "string"
      ipmbEventGenerator:
        type: "string"
      firmwareRevision:
        type: "string"
      chassisDevice:
        type: "string"
      manufacturerName:
        type: "string"
      bridge:
        type: "string"
      deviceId:
        type: "string"
        description: "The IPMI ID of the device."
      selDevice:
        type: "string"
      fruInventoryDevice:
        type: "string"
      manufacturerId:
        type: "string"
      ipmbEventReceiver:
        type: "string"
      productId:
        type: "string"
      ipmiVersion:
        type: "string"
      deviceSDRs:
        type: "string"
      deviceRevision:
        type: "string"
      sdrRepositoryDevice:
        type: "string"
    example:
      fruInventoryDevice: "fruInventoryDevice"
      sdrRepositoryDevice: "sdrRepositoryDevice"
      productId: "productId"
      deviceAvailable: "deviceAvailable"
      manufacturerName: "manufacturerName"
      deviceSDRs: "deviceSDRs"
      manufacturerId: "manufacturerId"
      deviceRevision: "deviceRevision"
      ipmbEventGenerator: "ipmbEventGenerator"
      deviceId: "deviceId"
      chassisDevice: "chassisDevice"
      ipmiVersion: "ipmiVersion"
      selDevice: "selDevice"
      ipmbEventReceiver: "ipmbEventReceiver"
      auxFirmwareRevInfo: "auxFirmwareRevInfo"
      bridge: "bridge"
      sensorDevice: "sensorDevice"
      firmwareRevision: "firmwareRevision"
  IPMISensor:
    type: "object"
    properties:
      sensorId:
        type: "string"
      group:
        type: "string"
      units:
        type: "string"
      status:
        type: "boolean"
      name:
        type: "string"
      reading:
        type: "number"
    example:
      name: "name"
      reading: 0.80082819046101150206595775671303272247314453125
      units: "units"
      sensorId: "sensorId"
      group: "group"
      status: true
  IPMILoginData:
    type: "object"
    properties:
      host:
        type: "string"
        description: "IP for IPMI access. Requires your current IP to be whitelisted\
          \ or the IPMI VPN."
      username:
        type: "string"
        description: "Username for IPMI console."
      drivertype:
        type: "string"
      password:
        type: "string"
        description: "Password for IPMI console."
    example:
      password: "password"
      host: "host"
      drivertype: "drivertype"
      username: "username"
  IPMIValidLogin:
    type: "object"
    required:
    - "valid"
    properties:
      valid:
        type: "boolean"
    example:
      valid: true
  DevicePassword:
    type: "object"
    required:
    - "password"
    properties:
      password:
        type: "string"
        description: "Password for initial ssh access. Will be deleted from api 7\
          \ days after initial provision."
    example:
      password: "password"
  DeviceInitialCreds:
    type: "object"
    properties:
      port:
        type: "integer"
        description: "Port for initial ssh access."
      password:
        type: "string"
        description: "Password for initial ssh access. Will expire from api 7 days\
          \ after initial provision."
      passwordReturnsUntil:
        type: "integer"
        description: "Date password will expire from API."
      user:
        type: "string"
        description: "User for initial ssh access."
      lockerUrl:
        type: "string"
        description: "Link to encrypted locker containing password for initial ssh\
          \ access. Locker contents be expired from api 7 days after initial provision."
    example:
      password: "password"
      lockerUrl: "lockerUrl"
      port: 0
      user: "user"
      passwordReturnsUntil: 6
  DeviceIPMIWhitelistIP:
    type: "object"
    required:
    - "custIp"
    properties:
      custIp:
        type: "string"
  DeviceEvent:
    type: "object"
    properties:
      time:
        type: "integer"
      action:
        type: "string"
    example:
      action: "action"
      time: 0
  DeviceReload:
    type: "object"
    required:
    - "operatingSystemId"
    properties:
      ignitionId:
        type: "integer"
        description: "The unique ID of an Ignition File for FlatcarOS provisions."
      customIPXEScriptUrl:
        type: "string"
        description: "Custom IPXE script URL. If device was provisioned was one before\
          \ and this field is omitted, the original custom iPXE script is used. Otherwise\
          \ specifying the script will override."
      body:
        type: "string"
        description: "Describe any special requests for custom devices."
      controlPanelId:
        type: "integer"
        description: "The unique ID of the control panel product option to provision\
          \ on this device. This is used only for custom devices."
      publicSshKeyIds:
        type: "array"
        description: "List of public ssh keys"
        items:
          type: "integer"
      script:
        type: "string"
        description: "A Cloud-Init script or a post-install script (Bash for Linux\
          \ or Powershell for Windows)."
      operatingSystemId:
        type: "integer"
        description: "The unique ID of the operating system product option to provision\
          \ on this device."
    example:
      controlPanelId: 6
      operatingSystemId: 5
      publicSshKeyIds:
      - 1
      - 1
      customIPXEScriptUrl: "customIPXEScriptUrl"
      body: "body"
      ignitionId: 0
      script: "script"
  ServiceOption:
    type: "object"
    properties:
      upgradeName:
        type: "string"
        description: "Upgrade name of hardware option"
      optionId:
        type: "integer"
      optionName:
        type: "string"
        description: "Option name of hardware option"
      upgradeId:
        type: "integer"
        description: "Upgrade ID of hardware option"
    example:
      optionId: 0
      upgradeName: "upgradeName"
      optionName: "optionName"
      upgradeId: 6
  IPAssignment:
    type: "object"
    required:
    - "version"
    properties:
      version:
        type: "integer"
        description: "IP version of this assignment (ipv4 or ipv6)"
      assignmentId:
        type: "integer"
        description: "Unique ID of this assignment"
      clientId:
        type: "integer"
        example: 0
        description: "Unique ID of the assignment owner"
      subnet:
        type: "string"
        description: "CIDR representation of this assignment."
      netmask:
        type: "string"
        description: "Netmask for this assignment."
      broadcastIp:
        type: "string"
        description: "Broadcast address for this subnet."
      gatewayIp:
        type: "string"
        description: "Gateway address for this subnet."
      firstUsableIp:
        type: "string"
        description: "First address available for use by Devices on this subnet."
      lastUsableIp:
        type: "string"
        description: "Last address available for use by Devices on this subnet."
      usableIps:
        type: "array"
        example: []
        description: "A list of usable IP addresses on assignment. It is only filled\
          \ for IPv4 subnets."
        items:
          type: "string"
      facilityCode:
        type: "string"
        description: "Facility code of this assignment."
      description:
        type: "string"
        description: "Description for this assignment."
      deviceId:
        type: "integer"
        description: "The device receiving traffic from the assignment."
      portId:
        type: "integer"
        description: "The port receiving traffic from the assignment."
      vlanId:
        type: "integer"
        description: "The VLAN receiving traffic from the assignment."
      nextHopIp:
        type: "string"
        description: "Next Hop IP address, if this assignment is statically routed."
    example:
      facilityCode: "facilityCode"
      subnet: "subnet"
      broadcastIp: "broadcastIp"
      clientId: 0
      vlanId: 5
      description: "description"
      gatewayIp: "gatewayIp"
      portId: 5
      version: 0
      assignmentId: 6
      deviceId: 1
      lastUsableIp: "lastUsableIp"
      usableIps: []
      netmask: "netmask"
      firstUsableIp: "firstUsableIp"
      nextHopIp: "nextHopIp"
  DevicePortsUpdate:
    type: "object"
    properties:
      ports:
        type: "array"
        items:
          $ref: "#/definitions/DevicePortUpdate"
    example:
      ports:
      - nativeVlanId: 1
        ipAssignments:
        - 6
        - 6
        portId: 0
        enabled: true
      - nativeVlanId: 1
        ipAssignments:
        - 6
        - 6
        portId: 0
        enabled: true
  DevicePortUpdate:
    type: "object"
    required:
    - "ipAssignments"
    - "portId"
    properties:
      portId:
        type: "integer"
        description: "The unique ID of the port."
      enabled:
        type: "boolean"
        default: true
      ipAssignments:
        type: "array"
        description: "IP Assignments IDs currently routed to this port."
        items:
          type: "integer"
      nativeVlanId:
        type: "integer"
        description: "The unique ID of the port's native vlan, if applicable. Send\
          \ value `0` to remove the native vlan from this port."
    example:
      nativeVlanId: 1
      ipAssignments:
      - 6
      - 6
      portId: 0
      enabled: true
  DevicePort:
    type: "object"
    required:
    - "private"
    properties:
      private:
        type: "boolean"
      mtu:
        type: "integer"
      nativeVlanTag:
        type: "integer"
        description: "The vlan tag of the port's native vlan, if applicable."
      clientId:
        type: "integer"
        example: 0
        description: "Your client account's unique ID."
      portId:
        type: "integer"
        description: "The unique ID of the port."
      deviceId:
        type: "integer"
        description: "The unique ID of the port's device."
      status:
        type: "string"
        description: "ENABLED|DISABLED|UNKOWN"
      nativeVlanId:
        type: "integer"
        description: "The unique ID of the native VLAN, if applicable."
      type:
        type: "string"
        description: "Indicates if is a bond interface. If not, indicates the Mbps\
          \ rate of the port."
      name:
        type: "string"
      ips:
        type: "array"
        description: "IPs applied to this port."
        items:
          $ref: "#/definitions/IPAssignment"
    example:
      private: true
      clientId: 0
      nativeVlanId: 5
      name: "name"
      nativeVlanTag: 6
      portId: 1
      type: "type"
      deviceId: 5
      ips:
      - facilityCode: "facilityCode"
        subnet: "subnet"
        broadcastIp: "broadcastIp"
        clientId: 0
        vlanId: 5
        description: "description"
        gatewayIp: "gatewayIp"
        portId: 5
        version: 0
        assignmentId: 6
        deviceId: 1
        lastUsableIp: "lastUsableIp"
        usableIps: []
        netmask: "netmask"
        firstUsableIp: "firstUsableIp"
        nextHopIp: "nextHopIp"
      - facilityCode: "facilityCode"
        subnet: "subnet"
        broadcastIp: "broadcastIp"
        clientId: 0
        vlanId: 5
        description: "description"
        gatewayIp: "gatewayIp"
        portId: 5
        version: 0
        assignmentId: 6
        deviceId: 1
        lastUsableIp: "lastUsableIp"
        usableIps: []
        netmask: "netmask"
        firstUsableIp: "firstUsableIp"
        nextHopIp: "nextHopIp"
      mtu: 0
      status: "status"
  NetworkTask-dump:
    type: "object"
    properties:
      taskCreated:
        type: "object"
        description: "Timestamp of task creation date."
        properties: {}
      metaData:
        type: "string"
        description: "Key value arguments used to trigger the task."
      clientId:
        type: "integer"
        description: "Unique ID of the client triggering the task."
      result:
        type: "string"
        description: "Success|Pending|Failed. Null value also means Pending."
      taskId:
        type: "string"
        description: "Unique ID of the network task."
      deviceId:
        type: "integer"
        description: "Unique ID of the target device."
      taskUpdated:
        type: "object"
        description: "Timestamp of most recent activity taken on the network task.\
          \ This will update multiple times for multi-step tasks."
        properties: {}
    example:
      result: "result"
      metaData: "metaData"
      clientId: 0
      taskCreated: "{}"
      taskUpdated: "{}"
      deviceId: 6
      taskId: "taskId"
  EffectiveIgnitionResponse:
    type: "object"
    required:
    - "contents"
    properties:
      contents:
        type: "string"
    example:
      contents: "contents"
  PreviewEffectiveIgnition:
    type: "object"
    required:
    - "ignition"
    properties:
      password:
        type: "string"
      ignition:
        type: "object"
        properties: {}
      bonded:
        type: "boolean"
        example: false
        default: false
      publicKeys:
        type: "array"
        example: []
        items:
          type: "string"
      primaryInterface:
        $ref: "#/definitions/PrimaryInterface"
      hostname:
        type: "string"
    example:
      password: "password"
      publicKeys: []
      hostname: "hostname"
      bonded: false
      primaryInterface:
        subnet: "subnet"
        ip: "ip"
        dnsServers: []
        gateway: "gateway"
      ignition: "{}"
  PrimaryInterface:
    type: "object"
    properties:
      ip:
        type: "string"
      subnet:
        type: "string"
      gateway:
        type: "string"
      dnsServers:
        type: "array"
        example: []
        items:
          type: "string"
    example:
      subnet: "subnet"
      ip: "ip"
      dnsServers: []
      gateway: "gateway"
  PreviewEffectiveIgnitionResponse:
    type: "object"
    properties:
      modifications:
        type: "array"
        items:
          $ref: "#/definitions/Modification"
      result:
        type: "object"
        properties: {}
      original:
        type: "object"
        properties: {}
    example:
      result: "{}"
      original: "{}"
      modifications:
      - reason: "reason"
        path: "path"
        contents: "{}"
      - reason: "reason"
        path: "path"
        contents: "{}"
  Modification:
    type: "object"
    properties:
      reason:
        type: "string"
      contents:
        type: "object"
        properties: {}
      path:
        type: "string"
    example:
      reason: "reason"
      path: "path"
      contents: "{}"
  Services:
    type: "object"
    additionalProperties:
      type: "array"
      items:
        $ref: "#/definitions/Service"
  DomainCreate:
    type: "object"
    required:
    - "name"
    properties:
      name:
        type: "string"
    example:
      name: "name"
  DomainReturn:
    type: "object"
    required:
    - "directsTo"
    - "domainId"
    - "name"
    properties:
      name:
        type: "string"
      domainId:
        type: "integer"
      summary:
        type: "object"
        properties: {}
      directsTo:
        type: "string"
    example:
      summary: "{}"
      directsTo: "directsTo"
      name: "name"
      domainId: 0
  ARecord:
    type: "object"
    required:
    - "name"
    - "ttl"
    properties:
      name:
        type: "string"
      ttl:
        type: "integer"
      addresses:
        type: "array"
        items:
          type: "string"
    example:
      addresses:
      - "addresses"
      - "addresses"
      name: "name"
      ttl: 0
  AAAARecordCreate:
    type: "object"
    required:
    - "address"
    - "name"
    - "ttl"
    properties:
      name:
        type: "string"
      address:
        type: "string"
      ttl:
        type: "integer"
  AAAARecordReturn:
    type: "object"
    required:
    - "domainId"
    - "name"
    - "ttl"
    - "type"
    properties:
      domainId:
        type: "integer"
      id:
        type: "integer"
      type:
        type: "string"
      ttl:
        type: "integer"
      name:
        type: "string"
      address:
        type: "string"
    example:
      address: "address"
      name: "name"
      id: 6
      type: "type"
      ttl: 1
      domainId: 0
  AAAARecordUpdate:
    type: "object"
    properties:
      name:
        type: "string"
      address:
        type: "string"
      ttl:
        type: "integer"
  MXRecordCreate:
    type: "object"
    required:
    - "exchange"
    - "name"
    - "preference"
    - "ttl"
    properties:
      exchange:
        type: "string"
      name:
        type: "string"
      ttl:
        type: "integer"
      preference:
        type: "integer"
  MXRecordReturn:
    type: "object"
    required:
    - "domainId"
    - "exchange"
    - "id"
    - "name"
    - "preference"
    - "ttl"
    - "type"
    properties:
      preference:
        type: "integer"
      domainId:
        type: "integer"
      exchange:
        type: "string"
      id:
        type: "integer"
      type:
        type: "string"
      ttl:
        type: "integer"
      name:
        type: "string"
    example:
      preference: 0
      name: "name"
      exchange: "exchange"
      id: 1
      type: "type"
      ttl: 5
      domainId: 6
  MXRecordUpdate:
    type: "object"
    required:
    - "exchange"
    - "preference"
    properties:
      exchange:
        type: "string"
      name:
        type: "string"
      ttl:
        type: "integer"
      preference:
        type: "integer"
  PTRRecordReturn:
    type: "object"
    properties:
      domainId:
        type: "integer"
      id:
        type: "integer"
      type:
        type: "string"
      ttl:
        type: "integer"
      disabled:
        type: "boolean"
      name:
        type: "string"
      address:
        type: "string"
    example:
      address: "address"
      name: "name"
      disabled: true
      id: 6
      type: "type"
      ttl: 1
      domainId: 0
  PTRRecordUpdate:
    type: "object"
    required:
    - "name"
    properties:
      name:
        type: "string"
      ttl:
        type: "integer"
  CreateIgnition:
    type: "object"
    properties:
      name:
        type: "string"
      contents:
        type: "string"
    example:
      contents: "contents"
      name: "name"
  IgnitionResponse:
    type: "object"
    properties:
      name:
        type: "string"
      id:
        type: "integer"
      contents:
        type: "string"
    example:
      contents: "contents"
      name: "name"
      id: 0
  UpdateIgnition:
    type: "object"
    required:
    - "contents"
    properties:
      contents:
        type: "string"
    example:
      contents: "contents"
  Inventory:
    type: "object"
    additionalProperties:
      type: "array"
      items:
        $ref: "#/definitions/Stock"
  Stock:
    type: "object"
    properties:
      product_memory:
        type: "string"
        description: "Human readable memory specs."
      hourly_location_premium:
        type: "number"
        description: "Additional hourly fee for this `product_id` in this `data_center`."
      edge:
        type: "boolean"
        description: "true|false if edge site."
      product_id:
        type: "integer"
        description: "The unique ID of this product."
      product_display_price:
        type: "number"
        description: "*DEPRECATED*."
      stock:
        type: "string"
        description: "available|limited|unavailable. Limited denotes minimal stock."
      product_drive:
        type: "string"
        description: "Human readable drive specs. Can include multiple drives."
      monthly_location_premium:
        type: "number"
        description: "Additional monthly fee for this `product_id` in this `data_center`."
      product_cpu:
        type: "string"
        description: "Human readable CPU specs."
      annually_location_premium:
        type: "number"
        description: "Additional annual fee for this `product_id` in this `data_center`."
      processor_info:
        type: "object"
        description: "JSON CPU info for cores, threads, sockets, and vCPUs."
        properties: {}
      product_monthly_price:
        type: "number"
        description: "Price per month."
      product_hourly_price:
        type: "number"
        description: "Price per hour."
      product_name:
        type: "string"
        description: "The unique name of this product."
      product_triennial_price:
        type: "number"
        description: "Price per 3 year period (36 months)."
      product_cpu_cores:
        type: "string"
        description: "Human readable CPU core and thread info in HTML format."
      product_semi_annually_price:
        type: "number"
        description: "Price per half year (6 months)."
      product_bandwidth:
        type: "string"
        description: "Human readable networking specs in the format: Free Outbound\
          \ Transfer / NIC Size"
      product_gpu:
        type: "string"
        description: "Human readable GPU specs."
      data_center:
        type: "string"
        description: "A facility code. For example `NYC1`."
      product_quarterly_price:
        type: "number"
        description: "Price per quarter (3 months)."
      product_original_price:
        type: "number"
        description: "Retail price of product. Use with `product_on_sale`."
      product_disabled_billing_periods:
        type: "array"
        description: "Orders for the periods in the array will fail. Possible values:\
          \ hourly|monthly|quarterly|semi-annually|biennial|triennial"
        items:
          type: "string"
      product_on_sale:
        type: "boolean"
        description: "true|false. Use with `product_original_price`."
      semi_annually_location_premium:
        type: "number"
        description: "Additional semi-annual fee for this `product_id` in this `data_center`."
      biennial_location_premium:
        type: "number"
        description: "Additional biennial fee for this `product_id` in this `data_center`."
      quarterly_location_premium:
        type: "number"
        description: "Additional quarterly fee for this `product_id` in this `data_center`."
      product_annually_price:
        type: "number"
        description: "Price per year (12 months)."
      core:
        type: "boolean"
        description: "true|false if core site."
      product_biennial_price:
        type: "number"
        description: "Price per 2 year period (24 months)."
      triennial_location_premium:
        type: "number"
        description: "Additional triennial fee for this `product_id` in this `data_center`."
    example:
      product_gpu: "product_gpu"
      product_cpu: "product_cpu"
      processor_info: "{}"
      biennial_location_premium: 1.231513536777255612975068288506008684635162353515625
      product_memory: "product_memory"
      edge: true
      product_monthly_price: 2.3021358869347654518833223846741020679473876953125
      product_hourly_price: 7.061401241503109105224211816675961017608642578125
      quarterly_location_premium: 1.024645700144157789424070870154537260532379150390625
      product_id: 6
      semi_annually_location_premium: 7.3862819483858839220147274318151175975799560546875
      stock: "stock"
      hourly_location_premium: 0.80082819046101150206595775671303272247314453125
      data_center: "data_center"
      product_name: "product_name"
      product_annually_price: 1.489415909854170383397331534069962799549102783203125
      triennial_location_premium: 7.4577447736837658709418974467553198337554931640625
      product_triennial_price: 9.301444243932575517419536481611430644989013671875
      product_disabled_billing_periods:
      - "product_disabled_billing_periods"
      - "product_disabled_billing_periods"
      core: true
      product_drive: "product_drive"
      product_cpu_cores: "product_cpu_cores"
      product_quarterly_price: 2.027123023002321833274663731572218239307403564453125
      product_bandwidth: "product_bandwidth"
      annually_location_premium: 5.63737665663332876420099637471139430999755859375
      product_on_sale: true
      product_display_price: 1.46581298050294517310021547018550336360931396484375
      monthly_location_premium: 5.962133916683182377482808078639209270477294921875
      product_biennial_price: 6.8468526983526398765889098285697400569915771484375
      product_original_price: 4.1456080298839363962315474054776132106781005859375
      product_semi_annually_price: 3.61607674925191080461672754609026014804840087890625
  Location:
    type: "object"
    properties:
      edge:
        type: "boolean"
        description: "true|false if edge site."
      code:
        type: "string"
        description: "The unique facility code."
      title:
        type: "string"
        description: "The unique facility name."
      location:
        $ref: "#/definitions/Location_location"
      core:
        type: "boolean"
        description: "true|false if core site."
    example:
      core: true
      edge: true
      code: "code"
      location: {}
      title: "title"
  CityStateCountry:
    type: "object"
    properties:
      country:
        type: "string"
      city:
        type: "string"
      state:
        type: "string"
  Invoice:
    type: "object"
    properties:
      id:
        type: "integer"
      amount:
        type: "number"
      amountUnpaid:
        type: "number"
      clientId:
        type: "integer"
      created:
        type: "integer"
      datePaid:
        type: "integer"
      due:
        type: "integer"
      sent:
        type: "integer"
      status:
        type: "string"
    example:
      amount: 6.02745618307040320615897144307382404804229736328125
      clientId: 5
      datePaid: 2
      due: 7
      created: 5
      id: 0
      amountUnpaid: 1.46581298050294517310021547018550336360931396484375
      sent: 9
      status: "status"
  InvoiceUnpaid:
    type: "object"
    properties:
      amountUnpaid:
        type: "number"
    example:
      amountUnpaid: 0.80082819046101150206595775671303272247314453125
  InvoicePDF:
    type: "object"
    properties:
      pdfData:
        type: "string"
      invoiceId:
        type: "integer"
    example:
      pdfData: "pdfData"
      invoiceId: 0
  InvoiceDetails:
    type: "object"
    properties:
      accountBalance:
        type: "number"
      clientAddress:
        type: "string"
      clientName:
        type: "string"
      companyName:
        type: "string"
      invoiceDate:
        type: "string"
        format: "date-time"
      invoiceDue:
        type: "string"
        format: "date-time"
      invoiceNumber:
        type: "string"
      serviceItems:
        type: "array"
        items:
          $ref: "#/definitions/InvoiceDetailsServiceItems"
      taxesValue:
        type: "number"
      totalDue:
        type: "number"
      paymentHistory:
        type: "array"
        items:
          type: "object"
          properties: {}
      refundHistory:
        type: "array"
        items:
          type: "object"
          properties: {}
      taxesList:
        type: "array"
        items:
          type: "object"
          properties: {}
      priorBalance:
        type: "number"
      paymentsRefunds:
        type: "number"
    example:
      clientName: "clientName"
      taxesList:
      - "{}"
      - "{}"
      taxesValue: 5.63737665663332876420099637471139430999755859375
      companyName: "companyName"
      totalDue: 2.3021358869347654518833223846741020679473876953125
      refundHistory:
      - "{}"
      - "{}"
      paymentHistory:
      - "{}"
      - "{}"
      serviceItems:
      - unitPrice: 5.962133916683182377482808078639209270477294921875
        quantity: 6
        dateRange: "{}"
        description: "description"
        serviceId: 1
      - unitPrice: 5.962133916683182377482808078639209270477294921875
        quantity: 6
        dateRange: "{}"
        description: "description"
        serviceId: 1
      invoiceDate: "2000-01-23T04:56:07.000+00:00"
      clientAddress: "clientAddress"
      priorBalance: 7.061401241503109105224211816675961017608642578125
      invoiceDue: "2000-01-23T04:56:07.000+00:00"
      paymentsRefunds: 9.301444243932575517419536481611430644989013671875
      invoiceNumber: "invoiceNumber"
      accountBalance: 0.80082819046101150206595775671303272247314453125
  InvoiceDetailsServiceItems:
    type: "object"
    properties:
      quantity:
        type: "integer"
      description:
        type: "string"
      serviceId:
        type: "integer"
      dateRange:
        type: "object"
        properties: {}
      unitPrice:
        type: "number"
    example:
      unitPrice: 5.962133916683182377482808078639209270477294921875
      quantity: 6
      dateRange: "{}"
      description: "description"
      serviceId: 1
  InvoiceSeachResult:
    type: "object"
    properties:
      page:
        type: "integer"
      prevPage:
        type: "integer"
      total:
        type: "integer"
      hasNext:
        type: "boolean"
      perPage:
        type: "integer"
      items:
        $ref: "#/definitions/Invoice"
      hasPrev:
        type: "boolean"
      nextPage:
        type: "integer"
      pages:
        type: "integer"
    example:
      total: 1
      perPage: 5
      pages: 2
      hasPrev: true
      nextPage: 5
      prevPage: 6
      hasNext: true
      page: 0
      items:
        amount: 6.02745618307040320615897144307382404804229736328125
        clientId: 5
        datePaid: 2
        due: 7
        created: 5
        id: 0
        amountUnpaid: 1.46581298050294517310021547018550336360931396484375
        sent: 9
        status: "status"
  IpAssignmentRequest:
    type: "object"
    properties:
      purpose:
        type: "string"
        description: "List the intended use of each IP in the subnet. Required by\
          \ ICANN."
      facilityCode:
        type: "string"
        description: "For example: `NYC1`."
      prefixLength:
        type: "integer"
        description: "For example: `/27`."
    example:
      facilityCode: "facilityCode"
      prefixLength: 0
      purpose: "purpose"
  IpAssignmentCombine:
    type: "object"
    properties:
      assignmentIds:
        type: "array"
        description: "List of Unique assignment IDs."
        items:
          type: "integer"
    example:
      assignmentIds:
      - 0
      - 0
  IpAssignmentPut:
    type: "object"
    properties:
      nextHopIp:
        type: "string"
        description: "Route traffic from the IPs in the assignment to this IPv4 or\
          \ IPv6 IP."
    example:
      nextHopIp: "nextHopIp"
  DetailedNullIP:
    type: "object"
    required:
    - "ip"
    properties:
      ip:
        type: "string"
        description: "Valid public IPv4 Address (Cannot be RFC198 IP)."
      comments:
        type: "string"
        example: "Null routed via API"
        description: "User comments about reason for null routing"
  Order-dump:
    type: "object"
    properties:
      info:
        type: "object"
        properties: {}
      total:
        type: "number"
      owner:
        type: "string"
      orderId:
        type: "integer"
      status:
        type: "string"
    example:
      owner: "owner"
      total: 0.80082819046101150206595775671303272247314453125
      orderId: 6
      info: "{}"
      status: "status"
  OrderGroupCreate:
    type: "object"
    required:
    - "name"
    properties:
      name:
        type: "string"
      same_rack:
        type: "boolean"
        default: false
    example:
      same_rack: false
      name: "name"
  OrderGroup:
    type: "object"
    properties:
      name:
        type: "string"
      id:
        type: "integer"
      same_rack:
        type: "boolean"
      device_ids:
        type: "array"
        items:
          type: "integer"
    example:
      same_rack: true
      name: "name"
      id: 0
      device_ids:
      - 6
      - 6
  OrderGroupUpdate:
    type: "object"
    required:
    - "name"
    properties:
      name:
        type: "string"
    example:
      name: "name"
  Permission:
    type: "object"
    required:
    - "permissions"
    - "userId"
    properties:
      permissions:
        type: "array"
        items:
          type: "string"
      userId:
        type: "integer"
    example:
      permissions:
      - "permissions"
      - "permissions"
      userId: 0
  PermissionReturn:
    type: "object"
    properties:
      name:
        type: "string"
    example:
      name: "name"
  Options:
    type: "object"
    additionalProperties:
      type: "array"
      items:
        $ref: "#/definitions/Option"
  Option:
    type: "object"
    properties:
      operatingSystemFeatures:
        $ref: "#/definitions/OperatingSystem"
      monthlyPrice:
        type: "number"
        description: "Monthly price of the option."
      expressions:
        type: "array"
        description: "Used with `tags` to determine option compatibility. See product\
          \ docs."
        items:
          type: "string"
      tags:
        type: "array"
        description: "Used with `expressions` to determine option compatibility. See\
          \ product docs."
        items:
          type: "string"
      id:
        type: "integer"
        description: "Unique ID of the option. Stays the same across products."
      currency:
        type: "string"
        description: "USD|other"
      name:
        type: "string"
        description: "Unique option name."
    example:
      name: "name"
      currency: "currency"
      id: 6
      monthlyPrice: 0.80082819046101150206595775671303272247314453125
      operatingSystemFeatures:
        cloudInit: true
        sshKey: true
        postInstall: true
      expressions:
      - "expressions"
      - "expressions"
      tags:
      - "tags"
      - "tags"
  OperatingSystem:
    type: "object"
    properties:
      sshKey:
        type: "boolean"
      postInstall:
        type: "boolean"
      cloudInit:
        type: "boolean"
    example:
      cloudInit: true
      sshKey: true
      postInstall: true
  ProductOption:
    type: "object"
    properties:
      productId:
        type: "integer"
        description: "Unique product id."
      options:
        type: "object"
        description: "List of available options."
        properties: {}
      pricing:
        type: "object"
        description: "*DEPRECATED*"
        properties: {}
    example:
      productId: 0
      options: "{}"
      pricing: "{}"
  ProfileUpdate:
    type: "object"
    properties:
      address:
        type: "string"
      email:
        type: "string"
      password:
        type: "string"
      zip:
        type: "string"
      requirePayPalOauthLogin:
        type: "string"
      directToZendesk:
        type: "string"
      first:
        type: "string"
      fullName:
        type: "string"
      city:
        type: "string"
      country:
        type: "string"
      last:
        type: "string"
      phone:
        type: "string"
      state:
        type: "string"
      company:
        type: "string"
      requireOauthLogin:
        type: "string"
    example:
      zip: "zip"
      requirePayPalOauthLogin: "requirePayPalOauthLogin"
      country: "country"
      address: "address"
      last: "last"
      city: "city"
      fullName: "fullName"
      directToZendesk: "directToZendesk"
      password: "password"
      phone: "phone"
      company: "company"
      state: "state"
      requireOauthLogin: "requireOauthLogin"
      email: "email"
      first: "first"
  Profile:
    type: "object"
    properties:
      address:
        type: "object"
        properties: {}
      email:
        type: "string"
      zip:
        type: "object"
        properties: {}
      metaData:
        type: "object"
        properties: {}
      fax:
        type: "object"
        properties: {}
      id:
        type: "integer"
      first:
        type: "string"
      fullName:
        type: "object"
        properties: {}
      city:
        type: "object"
        properties: {}
      country:
        type: "object"
        properties: {}
      last:
        type: "string"
      phone:
        type: "string"
      state:
        type: "object"
        properties: {}
      company:
        type: "object"
        properties: {}
      login:
        type: "string"
      isClient:
        type: "boolean"
      created:
        type: "object"
        properties: {}
    example:
      zip: "{}"
      country: "{}"
      address: "{}"
      last: "last"
      city: "{}"
      created: "{}"
      fullName: "{}"
      isClient: true
      login: "login"
      metaData: "{}"
      phone: "phone"
      company: "{}"
      id: 0
      state: "{}"
      fax: "{}"
      email: "email"
      first: "first"
  BasicProfile:
    type: "object"
    properties:
      email:
        type: "string"
      zip:
        type: "object"
        properties: {}
      metaData:
        type: "object"
        properties: {}
      id:
        type: "integer"
      first:
        type: "string"
      fullName:
        type: "object"
        properties: {}
      city:
        type: "object"
        properties: {}
      country:
        type: "object"
        properties: {}
      last:
        type: "string"
      state:
        type: "object"
        properties: {}
      company:
        type: "object"
        properties: {}
      login:
        type: "string"
      isClient:
        type: "boolean"
    example:
      zip: "{}"
      country: "{}"
      last: "last"
      city: "{}"
      fullName: "{}"
      isClient: true
      login: "login"
      metaData: "{}"
      company: "{}"
      id: 0
      state: "{}"
      email: "email"
      first: "first"
  Deployment:
    type: "object"
    properties:
      orderNumber:
        type: "string"
        example: ""
      deploymentName:
        type: "string"
      deploymentConfiguration:
        type: "array"
        items:
          type: "object"
          properties: {}
      startedProvisioning:
        type: "boolean"
      deploymentId:
        type: "integer"
      price:
        type: "number"
      empty:
        type: "boolean"
    example:
      orderNumber: ""
      deploymentConfiguration:
      - "{}"
      - "{}"
      price: 6.02745618307040320615897144307382404804229736328125
      deploymentId: 0
      deploymentName: "deploymentName"
      startedProvisioning: true
      empty: true
  DeploymentStart:
    type: "object"
    required:
    - "billingInfo"
    properties:
      billingInfo:
        type: "integer"
      script:
        type: "string"
    example:
      billingInfo: 0
      script: "script"
  DeploymentCustomization:
    type: "object"
    required:
    - "hostnames"
    - "operatingSystem"
    - "productId"
    properties:
      locationCode:
        type: "string"
        default: ""
      billingPeriod:
        type: "string"
        description: "must be one of ['monthly', 'quarterly', 'semi-annually', 'annually',\
          \ 'biennial', 'triennial', 'hourly']"
        default: "monthly"
      quantity:
        type: "integer"
      options:
        type: "array"
        items:
          type: "integer"
      hostnames:
        type: "array"
        items:
          type: "string"
      operatingSystem:
        type: "string"
        description: "Operating System's Name or ID"
      ignitionIds:
        type: "array"
        example: []
        description: "Specify Ignition file ID for CoreOS/Flatcar provisions"
        items:
          type: "integer"
      additionalNotes:
        type: "array"
        items:
          type: "string"
      customIPXEScriptContents:
        type: "string"
        description: "Contents of iPXE script if not supplying URL"
      productId:
        type: "integer"
      customIPXEScriptURL:
        type: "string"
        description: "URL to download custom iPXE script if not supplying script in\
          \ entirety"
      publicSshKeyId:
        type: "integer"
        description: "ID of SSH Key to use for deployment"
      forceDeviceIds:
        type: "array"
        example: []
        description: "Either deploy these Device IDs or fail"
        items:
          type: "integer"
    example:
      ignitionIds: []
      quantity: 0
      productId: 1
      billingPeriod: "monthly"
      hostnames:
      - "hostnames"
      - "hostnames"
      customIPXEScriptContents: "customIPXEScriptContents"
      operatingSystem: "operatingSystem"
      publicSshKeyId: 5
      forceDeviceIds: []
      customIPXEScriptURL: "customIPXEScriptURL"
      options:
      - 6
      - 6
      locationCode: "locationCode"
      additionalNotes:
      - "additionalNotes"
      - "additionalNotes"
  FastService-dump:
    type: "object"
    properties:
      serviceId:
        type: "integer"
      created:
        type: "integer"
      billedPrice:
        type: "number"
      billedPricePerPeriod:
        type: "number"
      serviceCost:
        type: "number"
      lastRenew:
        type: "integer"
      renewDate:
        type: "integer"
      quantity:
        type: "number"
      orderId:
        type: "integer"
      status:
        type: "string"
      period:
        type: "string"
      discount:
        type: "number"
      discountType:
        type: "string"
      discountedCost:
        type: "number"
      serviceDiscount:
        type: "number"
      serviceDiscountPerPeriod:
        type: "number"
      ipAddress:
        type: "string"
      cancelAfter:
        type: "integer"
      startDate:
        type: "integer"
      endDate:
        type: "integer"
      serviceOptions:
        type: "array"
        items:
          $ref: "#/definitions/ServiceOptionData"
      usage:
        type: "object"
        properties: {}
      serviceDevices:
        type: "array"
        items:
          type: "object"
          properties: {}
      childServices:
        type: "array"
        items:
          type: "object"
          properties: {}
      productId:
        type: "integer"
      productName:
        type: "string"
      reseller:
        type: "string"
      serviceType:
        type: "string"
      contractTerm:
        type: "integer"
      billingInfoId:
        type: "integer"
      autoBill:
        type: "boolean"
      colocationCharge:
        type: "number"
      resellerBmaasCharge:
        type: "number"
      facilityName:
        type: "string"
      typeCode:
        type: "string"
        description: "The service type code. The list of service types can be accessed\
          \ on https://core.hivelocity.net/api/v2/service/types ."
      bandwidthBilling:
        $ref: "#/definitions/ServiceBandwidthBilling"
    example:
      serviceType: "serviceType"
      discountedCost: 4.1456080298839363962315474054776132106781005859375
      orderId: 3
      endDate: 6
      billingInfoId: 9
      usage: "{}"
      discount: 2.027123023002321833274663731572218239307403564453125
      serviceDiscountPerPeriod: 1.231513536777255612975068288506008684635162353515625
      productName: "productName"
      lastRenew: 2
      colocationCharge: 9.3693102714106686335071572102606296539306640625
      discountType: "discountType"
      facilityName: "facilityName"
      serviceId: 0
      renewDate: 7
      serviceDevices:
      - "{}"
      - "{}"
      period: "period"
      billedPrice: 1.46581298050294517310021547018550336360931396484375
      quantity: 9.301444243932575517419536481611430644989013671875
      productId: 4
      serviceCost: 5.63737665663332876420099637471139430999755859375
      created: 6
      cancelAfter: 1
      ipAddress: "ipAddress"
      reseller: "reseller"
      serviceOptions:
      - serviceOptionId: 7
        groupName: "groupName"
        invoiceHide: "invoiceHide"
        name: "name"
        optionId: 1
        upgradeName: "upgradeName"
      - serviceOptionId: 7
        groupName: "groupName"
        invoiceHide: "invoiceHide"
        name: "name"
        optionId: 1
        upgradeName: "upgradeName"
      autoBill: true
      typeCode: "typeCode"
      childServices:
      - "{}"
      - "{}"
      serviceDiscount: 7.3862819483858839220147274318151175975799560546875
      resellerBmaasCharge: 6.683562403749608193948006373830139636993408203125
      contractTerm: 5
      bandwidthBilling:
        notification: "notification"
        billingMethod: "billingMethod"
        includedTransferUnit: "includedTransferUnit"
        overageUnit: "overageUnit"
      startDate: 1
      billedPricePerPeriod: 5.962133916683182377482808078639209270477294921875
      status: "status"
  ServiceOptionData:
    type: "object"
    properties:
      serviceOptionId:
        type: "integer"
      name:
        type: "string"
      optionId:
        type: "integer"
      upgradeName:
        type: "string"
      groupName:
        type: "string"
      invoiceHide:
        type: "string"
    example:
      serviceOptionId: 7
      groupName: "groupName"
      invoiceHide: "invoiceHide"
      name: "name"
      optionId: 1
      upgradeName: "upgradeName"
  ServiceBandwidthBilling:
    type: "object"
    properties:
      billingMethod:
        type: "string"
      includedTransferUnit:
        type: "string"
      notification:
        type: "string"
      overageUnit:
        type: "string"
    example:
      notification: "notification"
      billingMethod: "billingMethod"
      includedTransferUnit: "includedTransferUnit"
      overageUnit: "overageUnit"
  Service:
    type: "object"
    properties:
      serviceId:
        type: "integer"
      created:
        type: "integer"
      billedPrice:
        type: "number"
      billedPricePerPeriod:
        type: "number"
      serviceCost:
        type: "number"
      lastRenew:
        type: "integer"
      renewDate:
        type: "integer"
      quantity:
        type: "number"
      orderId:
        type: "integer"
      status:
        type: "string"
      period:
        type: "string"
      discount:
        type: "number"
      discountType:
        type: "string"
      discountedCost:
        type: "number"
      serviceDiscount:
        type: "number"
      serviceDiscountPerPeriod:
        type: "number"
      ipAddress:
        type: "string"
      cancelAfter:
        type: "integer"
      startDate:
        type: "integer"
      endDate:
        type: "integer"
      serviceOptions:
        type: "array"
        items:
          $ref: "#/definitions/ServiceOption"
      usage:
        type: "object"
        properties: {}
      serviceDevices:
        type: "array"
        items:
          type: "object"
          properties: {}
      childServices:
        type: "array"
        items:
          type: "object"
          properties: {}
      productId:
        type: "integer"
      productName:
        type: "string"
      reseller:
        type: "string"
      serviceType:
        type: "string"
      contractTerm:
        type: "integer"
      billingInfoId:
        type: "integer"
      autoBill:
        type: "boolean"
      colocationCharge:
        type: "number"
      resellerBmaasCharge:
        type: "number"
      facilityName:
        type: "string"
      typeCode:
        type: "string"
        description: "The service type code. The list of service types can be accessed\
          \ on https://core.hivelocity.net/api/v2/service/types ."
      bandwidthBilling:
        $ref: "#/definitions/ServiceBandwidthBilling"
    example:
      serviceType: "serviceType"
      discountedCost: 4.1456080298839363962315474054776132106781005859375
      orderId: 3
      endDate: 6
      billingInfoId: 4
      usage: "{}"
      discount: 2.027123023002321833274663731572218239307403564453125
      serviceDiscountPerPeriod: 1.231513536777255612975068288506008684635162353515625
      productName: "productName"
      lastRenew: 2
      colocationCharge: 5.02500479152029466689555192715488374233245849609375
      discountType: "discountType"
      facilityName: "facilityName"
      serviceId: 0
      renewDate: 7
      serviceDevices:
      - "{}"
      - "{}"
      period: "period"
      billedPrice: 1.46581298050294517310021547018550336360931396484375
      quantity: 9.301444243932575517419536481611430644989013671875
      productId: 7
      serviceCost: 5.63737665663332876420099637471139430999755859375
      created: 6
      cancelAfter: 1
      ipAddress: "ipAddress"
      reseller: "reseller"
      serviceOptions:
      - optionId: 0
        upgradeName: "upgradeName"
        optionName: "optionName"
        upgradeId: 6
      - optionId: 0
        upgradeName: "upgradeName"
        optionName: "optionName"
        upgradeId: 6
      autoBill: true
      typeCode: "typeCode"
      childServices:
      - "{}"
      - "{}"
      serviceDiscount: 7.3862819483858839220147274318151175975799560546875
      resellerBmaasCharge: 9.965781217890562260208753286860883235931396484375
      contractTerm: 1
      bandwidthBilling:
        notification: "notification"
        billingMethod: "billingMethod"
        includedTransferUnit: "includedTransferUnit"
        overageUnit: "overageUnit"
      startDate: 1
      billedPricePerPeriod: 5.962133916683182377482808078639209270477294921875
      status: "status"
  ServiceManageable:
    type: "object"
    properties:
      eligible:
        type: "boolean"
      os_detected:
        type: "string"
      panel_detected:
        type: "string"
    example:
      panel_detected: "panel_detected"
      eligible: true
      os_detected: "os_detected"
  ServiceManagedReq:
    type: "object"
    properties:
      eligible_os:
        type: "object"
        properties: {}
      eligible_panel:
        type: "object"
        properties: {}
    example:
      eligible_os: "{}"
      eligible_panel: "{}"
  ServiceType:
    type: "object"
    properties:
      name:
        type: "string"
        description: "The name of the service type"
      code:
        type: "string"
        description: "The unique Code of the service type"
    example:
      code: "code"
      name: "name"
  SshKey:
    type: "object"
    required:
    - "name"
    - "publicKey"
    properties:
      name:
        type: "string"
      publicKey:
        type: "string"
    example:
      name: "name"
      publicKey: "publicKey"
  SshKeyResponse:
    type: "object"
    properties:
      name:
        type: "string"
      sshKeyId:
        type: "integer"
      publicKey:
        type: "string"
    example:
      name: "name"
      publicKey: "publicKey"
      sshKeyId: 0
  SshKeyUpdate:
    type: "object"
    properties:
      name:
        type: "string"
      publicKey:
        type: "string"
    example:
      name: "name"
      publicKey: "publicKey"
  TicketCreate:
    type: "object"
    required:
    - "queue"
    - "subject"
    properties:
      source:
        type: "number"
        example: 0.0
      queue:
        type: "string"
      priority:
        type: "number"
        example: 0.0
      status:
        type: "string"
        example: "open"
      body:
        type: "string"
        example: ""
      assignment:
        type: "number"
        example: 0.0
      subject:
        type: "string"
    example:
      assignment: 0.0
      subject: "subject"
      source: 0.0
      priority: 0.0
      body: ""
      queue: "queue"
      status: "open"
  Ticket:
    type: "object"
    properties:
      status:
        type: "string"
        example: ""
      subject:
        type: "string"
        example: ""
      queue:
        type: "string"
        example: ""
      updated:
        type: "number"
        example: 0.0
      opened:
        type: "number"
        example: 1.678795547E9
      serviceId:
        type: "number"
        example: 0.0
      client:
        $ref: "#/definitions/Client"
      priority:
        type: "string"
        example: ""
      id:
        type: "number"
      posts:
        type: "number"
      contact:
        $ref: "#/definitions/Contact-dump"
      body:
        type: "string"
        example: ""
      newReply:
        type: "boolean"
      metaData:
        type: "object"
        properties: {}
      replies:
        type: "array"
        items:
          $ref: "#/definitions/TicketPost"
      clientId:
        type: "number"
      contactId:
        type: "number"
      duration:
        type: "number"
      internalTicket:
        type: "number"
    example:
      clientId: 1.231513536777255612975068288506008684635162353515625
      contactId: 1.024645700144157789424070870154537260532379150390625
      subject: ""
      opened: 1.678795547E9
      priority: ""
      body: ""
      posts: 1.46581298050294517310021547018550336360931396484375
      newReply: true
      duration: 1.489415909854170383397331534069962799549102783203125
      metaData: "{}"
      internalTicket: 6.8468526983526398765889098285697400569915771484375
      replies:
      - date: 4.1456080298839363962315474054776132106781005859375
        clientId: 2.3021358869347654518833223846741020679473876953125
        attachments: 7.3862819483858839220147274318151175975799560546875
        fromAdmin: true
        hidden: 3.61607674925191080461672754609026014804840087890625
        contactId: 7.061401241503109105224211816675961017608642578125
        subject: ""
        body: ""
        ubersmith_attached_files:
        - name: ""
          id: 5.962133916683182377482808078639209270477294921875
        - name: ""
          id: 5.962133916683182377482808078639209270477294921875
        adminId: 2.027123023002321833274663731572218239307403564453125
        from: {}
        id: 9.301444243932575517419536481611430644989013671875
        ticketId: 5.63737665663332876420099637471139430999755859375
      - date: 4.1456080298839363962315474054776132106781005859375
        clientId: 2.3021358869347654518833223846741020679473876953125
        attachments: 7.3862819483858839220147274318151175975799560546875
        fromAdmin: true
        hidden: 3.61607674925191080461672754609026014804840087890625
        contactId: 7.061401241503109105224211816675961017608642578125
        subject: ""
        body: ""
        ubersmith_attached_files:
        - name: ""
          id: 5.962133916683182377482808078639209270477294921875
        - name: ""
          id: 5.962133916683182377482808078639209270477294921875
        adminId: 2.027123023002321833274663731572218239307403564453125
        from: {}
        id: 9.301444243932575517419536481611430644989013671875
        ticketId: 5.63737665663332876420099637471139430999755859375
      contact:
        clientId: 0
        contactId: 6
        phone: "phone"
        referralCode: "referralCode"
        fullName: "fullName"
        description: "description"
        active: 1
        isClient: true
        email: "email"
      client:
        zip: "zip"
        country: "country"
        last: "last"
        city: "city"
        fullName: "fullName"
        isClient: true
        login: "login"
        metaData: {}
        company: "company"
        id: 0.80082819046101150206595775671303272247314453125
        state: "state"
        email: "email"
        first: "first"
      id: 6.02745618307040320615897144307382404804229736328125
      serviceId: 0.0
      updated: 0.0
      queue: ""
      status: ""
  Client:
    type: "object"
    properties:
      fullName:
        type: "string"
      country:
        type: "string"
      email:
        type: "string"
      zip:
        type: "string"
      metaData:
        type: "object"
        example: {}
        properties: {}
      id:
        type: "number"
      first:
        type: "string"
      isClient:
        type: "boolean"
      city:
        type: "string"
      state:
        type: "string"
      last:
        type: "string"
      company:
        type: "string"
      login:
        type: "string"
    example:
      zip: "zip"
      country: "country"
      last: "last"
      city: "city"
      fullName: "fullName"
      isClient: true
      login: "login"
      metaData: {}
      company: "company"
      id: 0.80082819046101150206595775671303272247314453125
      state: "state"
      email: "email"
      first: "first"
  TicketPost:
    type: "object"
    properties:
      ubersmith_attached_files:
        type: "array"
        items:
          $ref: "#/definitions/TicketAttach"
      ticketId:
        type: "number"
      clientId:
        type: "number"
      fromAdmin:
        type: "boolean"
      contactId:
        type: "number"
      body:
        type: "string"
        example: ""
      from:
        type: "object"
        example: {}
        properties: {}
      id:
        type: "number"
      hidden:
        type: "number"
      subject:
        type: "string"
        example: ""
      adminId:
        type: "number"
      date:
        type: "number"
      attachments:
        type: "number"
    example:
      date: 4.1456080298839363962315474054776132106781005859375
      clientId: 2.3021358869347654518833223846741020679473876953125
      attachments: 7.3862819483858839220147274318151175975799560546875
      fromAdmin: true
      hidden: 3.61607674925191080461672754609026014804840087890625
      contactId: 7.061401241503109105224211816675961017608642578125
      subject: ""
      body: ""
      ubersmith_attached_files:
      - name: ""
        id: 5.962133916683182377482808078639209270477294921875
      - name: ""
        id: 5.962133916683182377482808078639209270477294921875
      adminId: 2.027123023002321833274663731572218239307403564453125
      from: {}
      id: 9.301444243932575517419536481611430644989013671875
      ticketId: 5.63737665663332876420099637471139430999755859375
  TicketAttach:
    type: "object"
    properties:
      name:
        type: "string"
        example: ""
      id:
        type: "number"
    example:
      name: ""
      id: 5.962133916683182377482808078639209270477294921875
  TicketSeachResult:
    type: "object"
    properties:
      page:
        type: "integer"
      prevPage:
        type: "integer"
      total:
        type: "integer"
      hasNext:
        type: "boolean"
      perPage:
        type: "integer"
      items:
        $ref: "#/definitions/TicketPost"
      hasPrev:
        type: "boolean"
      nextPage:
        type: "integer"
      pages:
        type: "integer"
    example:
      total: 1
      perPage: 5
      pages: 2
      hasPrev: true
      nextPage: 5
      prevPage: 6
      hasNext: true
      page: 0
      items:
        date: 4.1456080298839363962315474054776132106781005859375
        clientId: 2.3021358869347654518833223846741020679473876953125
        attachments: 7.3862819483858839220147274318151175975799560546875
        fromAdmin: true
        hidden: 3.61607674925191080461672754609026014804840087890625
        contactId: 7.061401241503109105224211816675961017608642578125
        subject: ""
        body: ""
        ubersmith_attached_files:
        - name: ""
          id: 5.962133916683182377482808078639209270477294921875
        - name: ""
          id: 5.962133916683182377482808078639209270477294921875
        adminId: 2.027123023002321833274663731572218239307403564453125
        from: {}
        id: 9.301444243932575517419536481611430644989013671875
        ticketId: 5.63737665663332876420099637471139430999755859375
  TicketPut:
    type: "object"
    properties:
      status:
        type: "string"
        example: ""
    example:
      status: ""
  TicketCreateReply:
    type: "object"
    required:
    - "body"
    properties:
      subject:
        type: "string"
      replyTo:
        type: "string"
      contactId:
        type: "number"
      cc:
        type: "string"
      body:
        type: "string"
      type:
        type: "number"
      encrypted:
        type: "string"
      recipient:
        type: "string"
      headers:
        type: "string"
      attachments:
        type: "array"
        example:
        - name: ""
          file: ""
        items:
          type: "object"
          properties: {}
      date:
        type: "number"
      hidden:
        type: "number"
    example:
      cc: "cc"
      date: 1.46581298050294517310021547018550336360931396484375
      headers: "headers"
      attachments:
      - name: ""
        file: ""
      encrypted: "encrypted"
      hidden: 5.962133916683182377482808078639209270477294921875
      contactId: 0.80082819046101150206595775671303272247314453125
      subject: "subject"
      replyTo: "replyTo"
      recipient: "recipient"
      body: "body"
      type: 6.02745618307040320615897144307382404804229736328125
  PublicApiToken:
    type: "object"
    properties:
      name:
        type: "string"
      ipAddresses:
        $ref: "#/definitions/PublicApiTokenIp"
    example:
      name: "name"
      ipAddresses:
        name: "name"
        ips:
        - "ips"
        - "ips"
  PublicApiTokenIp:
    type: "object"
    required:
    - "ips"
    properties:
      name:
        type: "string"
      ips:
        type: "array"
        items:
          type: "string"
    example:
      name: "name"
      ips:
      - "ips"
      - "ips"
  PublicApiToken-load:
    type: "object"
    properties:
      name:
        type: "string"
      apiTokenId:
        type: "string"
  DeleteApiToken-load:
    type: "object"
    properties:
      apiTokenId:
        type: "string"
  PublicApiToken-dump:
    type: "object"
    required:
    - "token"
    properties:
      name:
        type: "string"
      apiTokenId:
        type: "string"
      ipAddresses:
        $ref: "#/definitions/PublicApiTokenIp"
      token:
        type: "string"
    example:
      apiTokenId: "apiTokenId"
      name: "name"
      ipAddresses:
        name: "name"
        ips:
        - "ips"
        - "ips"
      token: "token"
  PublicApiHideToken-dump:
    type: "object"
    required:
    - "token"
    properties:
      name:
        type: "string"
      apiTokenId:
        type: "string"
      ipAddresses:
        $ref: "#/definitions/PublicApiTokenIp"
      token:
        type: "string"
    example:
      apiTokenId: "apiTokenId"
      name: "name"
      ipAddresses:
        name: "name"
        ips:
        - "ips"
        - "ips"
      token: "token"
  VlanCreate:
    type: "object"
    required:
    - "facilityCode"
    - "type"
    properties:
      facilityCode:
        type: "string"
        description: "The Facility where the VLAN will be created, for example: `NYC1`.\
          \ Only Devices from the same Facility are allowed in the VLANs."
      type:
        type: "string"
        example: "private"
        description: "Choose `public` if you want to be able to assign IPs to the\
          \ VLAN, making it reachable from the internet. Choose `private` if the VLAN\
          \ should never be reachable from the internet. All VLANs are subject to\
          \ traffic billing and overages, with the exception of private VLAN traffic\
          \ on unbonded Devices."
        enum:
        - "public"
        - "private"
    example:
      facilityCode: "facilityCode"
      type: "private"
  Vlan:
    type: "object"
    properties:
      facilityCode:
        type: "string"
        description: "For example: `NYC1`."
      vlanId:
        type: "integer"
        description: "Unique ID of the VLAN."
      automated:
        type: "boolean"
        description: "If true, VLAN can be automated via API. If false, contact support\
          \ to enable automation."
      qInQ:
        type: "boolean"
        description: "If true, VLAN is configured in Q-in-Q Mode. Automation is not\
          \ currently supported on Q-in-Q VLANs."
      ipIds:
        type: "array"
        description: "Unique IDs of IP Assignments."
        items:
          type: "integer"
      type:
        type: "string"
        description: "If `public`, this VLAN can have IPs assigned to become reachable\
          \ from the internet. If `private`, this VLAN can not have IPs assigned and\
          \ will never be reachabled from the internet. All VLANs are subject to traffic\
          \ billing and overages, with the exception of private VLAN traffic on unbonded\
          \ Devices."
      portIds:
        type: "array"
        description: "Unique IDs of ports or bonds."
        items:
          type: "integer"
      vlanTag:
        type: "integer"
        description: "The VLAN Tag id from the switch. Use this value when configuring\
          \ your OS interfaces to use the VLAN."
    example:
      facilityCode: "facilityCode"
      automated: true
      vlanTag: 5
      vlanId: 0
      portIds:
      - 1
      - 1
      ipIds:
      - 6
      - 6
      type: "type"
      qInQ: true
  VlanUpdate:
    type: "object"
    required:
    - "portIds"
    properties:
      ipIds:
        type: "array"
        description: "Unique IDs of IP Assignments."
        items:
          type: "integer"
      portIds:
        type: "array"
        description: "Unique IDs of ports or bonds."
        items:
          type: "integer"
    example:
      portIds:
      - 6
      - 6
      ipIds:
      - 0
      - 0
  WebhookEvent:
    type: "object"
    required:
    - "desc"
    - "name"
    properties:
      name:
        type: "string"
      desc:
        type: "string"
    example:
      name: "name"
      desc: "desc"
  WebhookCreate:
    type: "object"
    required:
    - "event"
    - "url"
    properties:
      name:
        type: "string"
        example: "My Webhook"
      event:
        type: "string"
      url:
        type: "string"
      headers:
        type: "object"
        example: {}
        properties: {}
    example:
      headers: {}
      name: "My Webhook"
      event: "event"
      url: "url"
  Webhook:
    type: "object"
    required:
    - "event"
    - "name"
    - "url"
    - "webhookId"
    properties:
      webhookId:
        type: "integer"
      name:
        type: "string"
      event:
        type: "string"
      url:
        type: "string"
      headers:
        type: "object"
        properties: {}
    example:
      headers: "{}"
      webhookId: 0
      name: "name"
      event: "event"
      url: "url"
  WebhookUpdate:
    type: "object"
    properties:
      name:
        type: "string"
        example: "My Webhook"
      event:
        type: "string"
      url:
        type: "string"
      headers:
        type: "object"
        example: {}
        properties: {}
    example:
      headers: {}
      name: "My Webhook"
      event: "event"
      url: "url"
  Location_location:
    type: "object"
    description: "JSON city info: city, state, & country."
responses:
  ParseError:
    description: "When a mask can't be parsed"
  MaskError:
    description: "When any error occurs on mask"
